{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/jquery/dist/jquery.js","webpack:///./node_modules/vis/lib/util.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/util/NodeBase.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/util/ShapeBase.js","webpack:///./node_modules/immutable/dist/immutable.js","webpack:///./node_modules/vis/lib/module/hammer.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/util/CircleImageBase.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/util/BezierEdgeBase.js","webpack:///./node_modules/vis/lib/DataSet.js","webpack:///./node_modules/vis/lib/network/modules/components/Node.js","webpack:///./node_modules/vis/lib/network/modules/components/shared/ComponentUtil.js","webpack:///./node_modules/vis/lib/hammerUtil.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/util/EdgeBase.js","webpack:///./node_modules/vis/lib/DataView.js","webpack:///./node_modules/keycharm/keycharm.js","webpack:///./node_modules/vis/lib/shared/Validator.js","webpack:///./node_modules/vis/lib/network/modules/components/Edge.js","webpack:///./node_modules/vis/lib/network/NetworkUtil.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/BarnesHutSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/CentralGravitySolver.js","webpack:///./node_modules/vis/index-network.js","webpack:///./node_modules/vis/lib/module/moment.js","webpack:///./node_modules/vis/lib/Queue.js","webpack:///./node_modules/emitter-component/index.js","webpack:///./node_modules/vis/lib/network/dotparser.js","webpack:///./node_modules/vis/lib/network/gephiParser.js","webpack:///./node_modules/vis/lib/network/modules/components/shared/Label.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/util/EndPoints.js","webpack:///./node_modules/vis/lib/network/options.js","webpack:///./node_modules/vis/lib/network/CachedImage.js","webpack:///./node_modules/vis/lib/network/Images.js","webpack:///./node_modules/moment/moment.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/vis/lib/module/uuid.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vis/lib/DOMutil.js","webpack:///./node_modules/vis/lib/network/Network.js","webpack:///./node_modules/vis/lib/network/shapes.js","webpack:///./node_modules/vis/lib/shared/Activator.js","webpack:///./node_modules/propagating-hammerjs/propagating.js","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./node_modules/vis/lib/network/locales.js","webpack:///./node_modules/vis/lib/network/modules/Groups.js","webpack:///./node_modules/vis/lib/network/modules/NodesHandler.js","webpack:///./node_modules/vis/lib/network/modules/components/shared/LabelSplitter.js","webpack:///./node_modules/vis/lib/network/modules/components/shared/LabelAccumulator.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Box.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Circle.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/CircularImage.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Database.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Diamond.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Dot.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Ellipse.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Icon.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Image.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Square.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Hexagon.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Star.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Text.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/Triangle.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/shapes/TriangleDown.js","webpack:///./node_modules/vis/lib/network/modules/EdgesHandler.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/BezierEdgeDynamic.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/BezierEdgeStatic.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/StraightEdge.js","webpack:///./node_modules/vis/lib/network/modules/PhysicsEngine.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/RepulsionSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/HierarchicalRepulsionSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/SpringSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/HierarchicalSpringSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/FA2BasedRepulsionSolver.js","webpack:///./node_modules/vis/lib/network/modules/components/physics/FA2BasedCentralGravitySolver.js","webpack:///./node_modules/vis/lib/network/modules/Clustering.js","webpack:///./node_modules/vis/lib/network/modules/components/nodes/Cluster.js","webpack:///./node_modules/vis/lib/network/modules/CanvasRenderer.js","webpack:///./node_modules/vis/lib/network/modules/Canvas.js","webpack:///./node_modules/vis/lib/network/modules/View.js","webpack:///./node_modules/vis/lib/network/modules/InteractionHandler.js","webpack:///./node_modules/vis/lib/network/modules/components/NavigationHandler.js","webpack:///./node_modules/vis/lib/shared/Popup.js","webpack:///./node_modules/vis/lib/network/modules/SelectionHandler.js","webpack:///./node_modules/vis/lib/network/modules/LayoutEngine.js","webpack:///./node_modules/vis/lib/network/modules/components/DirectionStrategy.js","webpack:///./node_modules/vis/lib/network/modules/ManipulationSystem.js","webpack:///./node_modules/vis/lib/shared/Configurator.js","webpack:///./node_modules/vis/lib/shared/ColorPicker.js","webpack:///./src/js/workers/GraphAlgorithmWorker.ts","webpack:///./src/js/util/genericHelpers.ts","webpack:///./src/js/util/graphHelpers.ts","webpack:///./src/js/classes/SpanningTree.ts","webpack:///./src/js/classes/GraphImmut/NodeImmut.ts","webpack:///./src/js/classes/GraphImmut/EdgeImmut.ts","webpack:///./src/js/classes/GraphImmut/GraphImmut.ts","webpack:///./src/js/graphState.ts","webpack:///./src/js/GraphAlgorithms.ts","webpack:///./node_modules/vis/lib/network/modules/components/algorithms/FloydWarshall.js","webpack:///./node_modules/vis/lib/network/modules/KamadaKawai.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/util/CubicBezierEdgeBase.js","webpack:///./node_modules/vis/lib/network/modules/components/edges/CubicBezierEdge.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","document","w","Error","window","this","noGlobal","arr","getProto","getPrototypeOf","slice","concat","push","indexOf","class2type","toString","hasOwn","fnToString","ObjectFunctionString","support","isFunction","obj","nodeType","isWindow","preservedScriptAttributes","type","src","noModule","DOMEval","code","doc","node","script","createElement","text","head","appendChild","parentNode","removeChild","toType","jQuery","selector","context","fn","init","rtrim","isArrayLike","length","jquery","constructor","toArray","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","apply","arguments","first","eq","last","len","j","end","sort","splice","extend","options","copy","copyIsArray","clone","target","deep","isPlainObject","Array","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","proto","Ctor","isEmptyObject","globalEval","trim","makeArray","results","inArray","second","grep","invert","matches","callbackExpect","arg","guid","iterator","split","toLowerCase","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","Date","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","disabledAncestor","addCombinator","disabled","dir","next","childNodes","e","els","seed","nid","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","nodeName","getAttribute","setAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tag","tmp","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","escape","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","parent","useCache","lastChild","uniqueID","pseudo","args","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","then","Callbacks","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","func","tuples","state","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","rmsPrefix","rdashAlpha","fcamelCase","all","letter","toUpperCase","camelCase","string","acceptData","owner","Data","uid","configurable","set","data","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","JSON","parse","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isHiddenWithinTree","style","display","css","swap","old","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","div","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","on","types","one","origFn","event","off","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rxhtmlTag","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","rboxStyle","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","round","parseFloat","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","finalPropName","cssProps","capName","vendorPropName","setPositiveNumber","subtract","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","complete","timer","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","parseInt","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","isTrigger","parentWindow","simulate","triggerHandler","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","statusText","finalText","crossDomain","host","hasContent","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","_jQuery","_$","$","noConflict","moment","uuid","copyOrDelete","allowDeletion","doDeletion","isNumber","Number","recursiveDOMDelete","DOMobject","hasChildNodes","giveRange","min","total","isString","isDate","ASPDateRegex","randomUUID","v4","assignAllKeys","fillIfDefined","other","selectiveExtend","selectiveDeepExtend","deepExtend","selectiveNotDeepExtend","propsToExclude","protoExtend","equalArray","convert","Boolean","valueOf","isMoment","toDate","getType","toISOString","format","copyAndExtendArray","newValue","newArr","copyArray","getAbsoluteLeft","getAbsoluteRight","getAbsoluteTop","addClassName","newClasses","removeClassName","oldClasses","forEach","array","updateProperty","throttle","scheduled","element","action","listener","useCapture","navigator","userAgent","detachEvent","getTarget","srcElement","hasParent","asBoolean","asNumber","asString","asSize","asElement","hexToRGB","hex","g","overrideOpacity","color","rgb","substr","RGBToHex","red","green","blue","parseColor","isValidRGB","isValidHex","hsv","hexToHSV","lighterColorHSV","h","darkerColorHSV","darkerColorHex","HSVToHex","lighterColorHex","background","highlight","RGBToHSV","minRGB","maxRGB","cssUtil","addCssText","currentStyles","newStyles","removeCssText","removeStyles","HSVToRGB","floor","f","q","isValidRGBA","rgba","selectiveBridgeObject","fields","referenceObject","objectTo","bridgeObject","Element","insertSort","k","mergeOptions","mergeTarget","globalOptions","isPresent","isObject","srcOption","globalOption","x","isEmpty","globalEnabled","dst","doMerge","binarySearchCustom","orderedItems","comparator","field","field2","iteration","low","middle","item","searchResult","binarySearchValue","sidePreference","prevValue","nextValue","easingFunctions","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","getScrollBarWidth","inner","outer","w1","w2","clientWidth","topMost","pile","accessors","candidate","member","__webpack_exports__","[object Object]","labelModule","setOptions","radius","refreshNeeded","boundingBox","bottom","adjustSizes","ctx","angle","borderWidth","resize","abs","sin","shadow","shadowColor","shadowBlur","shadowSize","shadowOffsetX","shadowX","shadowOffsetY","shadowY","borderDashes","setLineDash","dashes","shapeProperties","differentState","lineWidth","strokeStyle","borderColor","fillStyle","save","enableBorderDashes","stroke","disableBorderDashes","restore","enableShadow","fill","disableShadow","performStroke","y","_updateBoundingBox","textSize","getTextSize","_util_NodeBase__WEBPACK_IMPORTED_MODULE_0__","super","size","needsRefresh","shape","sizeMultiplier","initContextForDraw","performFill","label","calculateLabelSize","yLabel","draw","updateBoundingBox","SLICE$0","createClass","ctor","superClass","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","ii","ensureSize","iter","__iterate","wrapIndex","uint32Index","NaN","wholeSlice","begin","resolveBegin","resolveIndex","resolveEnd","defaultIndex","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","iteratorValue","iteratorResult","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","emptySequence","toSeq","seq","maybeIndexedSeqFromValue","ObjectSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","KEYS","VALUES","ENTRIES","toSource","of","__toString","cacheResult","_cache","__iterateUncached","seqIterate","__iterator","seqIterator","isSeq","EMPTY_SEQ","EMPTY_REPEAT","EMPTY_RANGE","IS_SEQ_SENTINEL","ArraySeq","_array","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","maybeSeq","useKeys","maxIndex","entry","__iteratorUncached","fromJS","converter","fromJSWith","parentJSON","isPlainObj","fromJSDefault","toList","toMap","valueA","valueB","equals","deepEqual","__hash","notAssociative","entries","every","flipped","allEqual","bSize","Repeat","times","_value","Infinity","invariant","condition","Range","_start","_end","_step","Collection","KeyedCollection","IndexedCollection","SetCollection","notSetValue","iterations","includes","searchValue","lastIndexOf","this$0","possibleIndex","offsetValue","imul","smi","i32","STRING_HASH_CACHE_MIN_STRLEN","stringHashCache","hashString","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","hashCode","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","isExtensible","hashJSObj","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","keyValues","_root","updateMap","setIn","keyPath","updateIn","deleteIn","update","updater","updatedValue","updateInDeepMap","existing","keyPathIter","isNotSet","existingValue","nextExisting","nextUpdated","forceIterator","clear","__ownerID","__altered","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","EMPTY_MAP","MapPrototype","ArrayMapNode","BitmapIndexedNode","bitmap","HashArrayMapNode","HashCollisionNode","keyHash","ValueNode","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","__prev","newRoot","newSize","didChangeSize","didAlter","updateNode","isLeafNode","mergeIntoNode","newNode","idx1","idx2","iterables","mergeIntoCollectionWith","mergeIntoMap","popCount","canEdit","newArray","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","bit","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","including","expandedNodes","expandNodes","newBitmap","newNodes","newLen","spliceOut","spliceIn","newCount","MIN_HASH_ARRAY_MAP_SIZE","excluding","packedII","packedNodes","packNodes","keyMatch","subNode","List","emptyList","isList","makeList","VNode","setSize","maybeList","IS_LIST_SENTINEL","listNodeFor","_origin","setListBounds","newTail","_tail","getTailOffset","_capacity","updateVNode","_level","updateList","oldSize","mergeIntoListWith","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","newChild","removingFirst","oldChild","editable","editableVNode","removeAfter","sizeIndex","EMPTY_LIST","EMPTY_ORDERED_MAP","tailPos","tail","iterateNodeOrLeaf","from","iterateLeaf","iterateNode","origin","capacity","nodeHas","lowerNode","newLowerNode","rawIndex","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","cacheResultThrough","mapFactory","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","skipWhileFactory","skipSequence","skipping","flattenFactory","flatSequence","flatDeep","currentDepth","defaultComparator","isKeyedIterable","maxFactory","reduce","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","reify","validateEntry","resolveSize","iterableClass","Record","defaultValues","hasInitialized","RecordType","names","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","valueSeq","indexedIterable","recordName","defaultVal","_empty","makeRecord","likeRecord","record","emptySet","isSet","maybeSet","IS_SET_SENTINEL","fromKeys","keySeq","updateSet","union","intersect","originalSet","OrderedSet","__make","EMPTY_SET","SetPrototype","__empty","makeSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","EMPTY_ORDERED_SET","OrderedSetPrototype","makeOrderedSet","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","_head","peek","makeStack","pushAll","EMPTY_STACK","StackPrototype","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","singleton","concatSeq","flatten","sum","concatFactory","findEntry","sideEffect","separator","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","countBy","grouper","countByFactory","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","flatMap","coerce","flatMapFactory","searchKey","getIn","searchKeyPath","nested","groupBy","isKeyedIter","groupByFactory","hasIn","isSubset","isSuperset","keyOf","keyMapper","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeSequence","iterating","takeWhileFactory","takeUntil","ordered","keyed","murmurHashOfSize","hashMerge","hashIterable","IterablePrototype","quoteString","chain","mapEntries","mapKeys","KeyedIterablePrototype","stringify","defaultZipper","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interposedSequence","interposeFactory","interleave","zipped","interleaved","zip","zipWith","propagating","Hammer","destroy","emit","hammerMock","_NodeBase__WEBPACK_IMPORTED_MODULE_0__","labelOffset","imageObj","imageObjAlt","setImages","selection_changed","imageTmp","useImageSize","ratio_width","ratio_height","circle","globalAlpha","factor","interpolation","drawImageAtPosition","labelDimensions","lineCount","_EdgeBase__WEBPACK_IMPORTED_MODULE_0__","nearNode","viaNode","_getViaCoordinates","difference","getPoint","atan2","distanceToBorder","sqrt","pow","x1","y1","x2","y2","x3","y3","via","distance","minDistance","lastX","lastY","_getDistanceToLine","viaNode1","viaNode2","hasNode1","hasNode2","beginPath","moveTo","fromPoint","bezierCurveTo","toPoint","quadraticCurveTo","lineTo","util","Queue","DataSet","_options","_fieldId","fieldId","_subscribers","_queue","subscribers","_trigger","senderId","subscriber","addedIds","_addItem","items","updatedIds","oldData","updatedData","me","addOrUpdate","oldItem","_updateItem","ids","returnType","firstType","itemIds","itemId","_getItem","_sort","_filterFields","resultant","getIds","getDataSet","mappedItems","filteredItem","itemFields","av","bv","removedIds","removedItems","_remove","ident","maxField","itemField","minField","distinct","fieldType","converted","Label","default","ComponentUtil","Box","Circle","CircularImage","Database","Diamond","Dot","Ellipse","Icon","Image","Square","Hexagon","Star","Text","Triangle","TriangleDown","printStyle","Node","imagelist","grouplist","defaultOptions","edges","baseSize","baseFontSize","font","predefinedPosition","edge","currentShape","checkMass","parseOptions","chooser","choosify","_load_images","updateLabelModule","updateShape","physics","brokenImage","unselected","parentOptions","newOptions","groupList","group","groupObj","parsedColor","fixed","updateGroupOptions","scaling","borderRadius","currentGroup","title","customScalingFunction","sizeDiff","fontDiff","getFormattingValues","point","pointInRect","getSize","nodeId","labelId","mass","strId","log","subOption","allowed","chosen","chosenEdge","rotationPoint","onTouch","hammer","inputHandler","onRelease","isFinal","offTouch","offRelease","disablePreventDefaultVertically","pinchRecognizer","getTouchAction","EndPoints","colorDirty","selectionWidth","hoverWidth","getColor","_drawDashedLine","_drawLine","_line","_getCircleData","_circle","lineCap","lineDashOffset","dashedLine","_findBorderPosition","_findBorderPositionCircle","direction","selfReferenceSize","percentage","distanceToPoint","_pointOnCircle","inheritsColor","fromColor","toColor","grd","createLinearGradient","addColorStop","arc","_getDistanceToEdge","dx","dy","px","py","u","arrowPoint","node1","node2","guideOffset","scaleFactor","fromArrowScale","fromArrowType","toArrowScale","toArrowType","middleArrowScale","middleArrowType","smooth","findBorderPosition","guidePos","core","arrowData","DataView","_ids","_onEvent","setData","refresh","oldIds","newIds","viewOptions","getArguments","defaultFilter","dataSet","oldItems","updatedItems","subscribe","unsubscribe","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","_exportFunctions","_bound","keydown","keyup","down","handleEvent","up","bound","bindAll","getKey","newBindings","allOptions","errorFound","Validator","referenceOptions","subObject","usedOptions","path","__any__","getSuggestion","referenceOption","is_object","refOptionObj","__type__","checkFields","printLocation","optionType","refOptionType","print","_isAMomentObject","localSearch","findInOptions","globalSearch","indexMatch","closestMatch","recursive","closestMatchPath","lowerCaseOption","op","levenshteinDistance","str","matrix","charAt","CubicBezierEdge","BezierEdgeDynamic","BezierEdgeStatic","StraightEdge","Edge","fromId","toId","labelDirty","baseWidth","edgeType","connected","dataChanged","updateEdgeType","_setInteractionWidths","connect","copyFromGlobals","isValidLabel","arrows","inherit","colorsDefined","toArrow","fromArrow","middleArrow","arrowStrikethrough","selectedWidth","changeInType","cleanup","disconnect","attachEdge","detachEdge","widthDiff","getViaNode","getArrowData","drawLine","drawArrows","drawLabel","drawArrowHead","pointToSelf","_getRotation","translate","rotate","edgeId","isOverlappingWith","xFrom","yFrom","xTo","yTo","xObj","yObj","getDistanceToEdge","yLine","align","allNodes","specificNodes","minY","maxY","minX","maxX","range","clonedOptions","amountOfConnections","physicsBody","barnesHutTree","randomSeed","thetaInversed","theta","overlapAvoidanceFactor","avoidOverlap","gravitationalConstant","physicsNodeIndices","nodeIndices","nodeCount","_formBarnesHutTree","_getForceContributions","parentBranch","_getForceContribution","NW","NE","SW","SE","childrenCount","centerOfMass","calcSize","_calculateForces","gravityForce","fy","forces","rootSize","halfRootSize","centerX","centerY","_splitBranch","_placeInTree","totalMass","totalMassInv","biggestSize","skipMassUpdate","_updateBranchMass","region","_placeInRegion","seededRandom","containedNode","_insertRegion","childSize","_drawBranch","branch","centralGravity","DOMutil","Network","network","Images","dotparser","gephiParser","convertDot","DOTToGraph","convertGephi","parseGephi","keycharm","_timeout","_extended","_flushIfNeeded","flush","Emitter","_callbacks","removeListener","removeAllListeners","cb","callbacks","listeners","hasListeners","parseDOT","dot","graph","getToken","strict","tokenType","TOKENTYPE","IDENTIFIER","newSyntaxError","parseStatements","parseGraph","NODE_ATTR_MAPPING","fontsize","fontcolor","labelfontcolor","fontname","fillcolor","tooltip","labeltooltip","EDGE_ATTR_MAPPING","NULL","DELIMITER","UNKNOWN","DELIMITERS","{","}","[","]",";","=",",","->","--","nextPreview","regexAlphaNumeric","isAlphaNumeric","setValue","addNode","graphs","addEdge","createEdge","isComment","c2","SyntaxError","chop","parseStatement","subgraph","parseSubgraph","parseEdge","parseAttributeList","parseAttributeStatement","parseNodeStatement","subgraphs","edgeStyles","dashed","solid","dotted","maxLength","setProp","convertAttr","mapping","visProp","visPropI","dotData","graphData","dotNode","graphNode","convertEdge","dotEdge","graphEdge","array1","array2","subEdge","elem1","elem2","gephiJSON","optionsObj","inheritColor","gEdges","gNodes","gEdge","gNode","LabelSplitter","multiFontStyle","edgelabel","fontOptions","isEdgeLabel","elementOptions","initFontOptions","newFontOptions","parseFontString","vadjust","outOptions","inOptions","newOptionsArray","face","constrainWidth","maxWdt","minWdt","constrainHeight","minHgt","valign","widthConstraint","widthConstraintMaximum","widthConstraintMinimum","heightConstraint","heightConstraintMinimum","heightConstraintValign","propagateFonts","constrain","margins","widthBias","heightBias","dstPile","srcPile","addFontToPile","tmpShorthand","multiName","multiFont","optionNames","mod","getFontOption","fontPile","addFontOptionsToPile","getBasicOptions","modOptions","tmpMultiFontOptions","getFontOptions","baseline","viewFontSize","drawThreshold","maxVisible","_drawBackground","_drawText","fillRect","_setAlignment","textAlign","labelHeight","line","lines","blocks","block","fontColor","strokeColor","_getColor","strokeWidth","lineJoin","strokeText","fillText","lineMargin","textBaseline","initialStrokeColor","_processLabel","getValue","fontString","selectedState","hoverState","inText","_processLabelText","EndPoint","points","xt","yt","closePath","Arrow","transform","drawPath","Bar","configureOptions","number","endPoints","configure","boolean","function","dom","showButton","multi","bold","boldital","ital","mono","labelHighlightBold","roundness","forceDirection","maximum","useDefaultGroups","interaction","dragNodes","dragView","hideEdgesOnDrag","hideNodesOnDrag","keyboard","bindToWindow","multiselect","navigationButtons","selectable","selectConnectedEdges","hoverConnectedEdges","tooltipDelay","zoomView","layout","improvedLayout","hierarchical","levelSeparation","nodeSpacing","treeSpacing","blockShifting","edgeMinimization","parentCentralization","sortMethod","manipulation","initiallyActive","editNode","editEdge","editWithoutDrag","deleteNode","deleteEdge","controlNodeStyle","borderWidthSelected","minimum","icon","useBorderWithImage","barnesHut","springLength","springConstant","damping","forceAtlas2Based","repulsion","nodeDistance","hierarchicalRepulsion","maxVelocity","minVelocity","solver","stabilization","updateInterval","onlyDynamicEdges","fit","timestep","adaptiveTimestep","autoResize","clickToUse","locale","locales","any","network_CachedImage","NUM_ITERATIONS","canvas","initialized","h2","h4","h8","h16","w4","w8","w16","coordinates","_fillMipMap","getContext","drawImage","images","imageBroken","brokenUrl","imageToLoadBrokenUrlOn","imageToRedrawWith","cachedImage","img","_fixImageCoordinates","_redrawWithImage","_tryloadBrokenUrl","imageToCache","hookCallback","isUndefined","res","hasOwnProp","createUTC","createLocalOrUTC","utc","getParsingFlags","_pf","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","dontConvert","lengthDiff","diffs","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","p1","p2","p3","p4","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","stringLength","totalParsedInputLength","hour","meridiemHour","isPm","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","quarter","weeks","days","milliseconds","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","utcOffset","offsetFromString","chunkOffset","chunk","cloneWithOffset","model","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","period","addSubtract","isAdding","invalid","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","addWeekYearFormatToken","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","preParsePostFormat","formats","sod","startOf","calendarFormat","asFloat","zoneDelta","endOf","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","getPrioritizedUnits","isoWeekday","keepOffset","zone","unix","creationData","isoWeek","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","listMonthsImpl","out","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","webpackPolyfill","paths","_rng","globalVar","crypto","getRandomValues","_rnds8","Uint8Array","_rnds","_byteToHex","_hexToByte","unparse","buf","bth","_seedBytes","_nodeId","_clockseq","_lastMSecs","_lastNSecs","rnds","rng","v1","clockseq","msecs","nsecs","dt","tl","tmh","oct","prepareElements","JSONcontainer","elementType","redundant","used","cleanupElements","resetElements","getSVGElement","svgContainer","createElementNS","getDOMElement","DOMContainer","drawPoint","groupTemplate","labelObj","setAttributeNS","xOffset","yOffset","drawBar","Activator","Groups","NodesHandler","EdgesHandler","PhysicsEngine","ClusterEngine","CanvasRenderer","Canvas","View","InteractionHandler","SelectionHandler","LayoutEngine","ManipulationSystem","Configurator","KamadaKawai","edgeIndices","emitter","eventListeners","onTap","onDoubleTap","onHold","onDragStart","onDrag","onDragEnd","onMouseWheel","onPinch","onMouseMove","onContext","functions","createNode","getPointer","translation","bindEventListeners","selectionHandler","interactionHandler","renderer","layoutEngine","clustering","nodesHandler","edgesHandler","_create","validate","configurator","pixelRatio","networkOptions","setModuleOptions","activator","frame","_updateVisibleIndices","_isClusteredNode","fromNode","toNode","edgeNodesPresent","_isClusteredEdge","_updateState","_updateValueRange","unselectAll","gephi","gephiData","valueMin","valueMax","valueTotal","setValueRange","isActive","canvasToDOM","DOMtoCanvas","findNode","isCluster","openCluster","cluster","getNodesInCluster","clusterByConnection","clusterByHubsize","clusterOutliers","getSeed","enableEditMode","disableEditMode","addNodeMode","editNodeMode","addEdgeMode","editEdgeMode","deleteSelected","getPositions","storePositions","moveNode","getBoundingBox","getConnectedNodes","objectId","getConnectedEdges","startSimulation","stopSimulation","stabilize","getSelection","setSelection","getSelectedNodes","getSelectedEdges","getNodeAt","getEdgeAt","selectNodes","selectEdges","redraw","getScale","getViewPosition","releaseNode","getOptionsFromConfigurator","getOptions","CanvasRenderingContext2D","square","triangle","s2","ir","triangleDown","star","diamond","roundRect","r2d","ellipse_vis","ox","oy","xe","ye","xm","ym","database","hEllipse","ymb","yeb","patternLength","slope","distRemaining","patternIndex","xStep","dashLength","hexagon","overlay","_onTapOverlay","onClick","_hasParent","deactivate","escListener","activate","_firstTarget","Manager","PropagatingHammer","assign","wrapper","propagatedHandler","srcEvent","_handled","srcStop","firstTarget","elemHammer","_handlers","eventType","hammers","exportName","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","setTimeoutContext","bindFn","invokeArrayArg","deprecationMessage","nextKey","child","childP","baseP","_super","boolOrFn","ifUndefined","val1","val2","addEventListeners","splitStr","removeEventListeners","inStr","findByKey","uniqueArray","prefixed","camelProp","_uniqueId","getWindowForElement","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","inputTarget","domHandler","ev","enable","pointersLen","pointers","changedPointersLen","changedPointers","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","deltaTime","getAngle","getDistance","offsetDelta","prevDelta","prevInput","deltaX","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","lastInterval","computeIntervalInputData","computeInputData","recognize","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","changed","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","changedTargetTouches","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","compute","actions","touchAction","recognizers","recognizer","hasPanX","hasPanY","cleanTouchActions","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","preset","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","attrTest","optionPointers","isRecognized","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","force","curRecognizer","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","edit","del","back","addDescription","edgeDescription","editEdgeDescription","createEdgeError","deleteClusterError","editClusterError","groupsArray","groupIndex","defaultGroups","optionFields","groupName","groupname","shouldCreate","nodesListeners","doNotEmit","oldNodesData","positionInitially","changedData","oldValue","constructorClass","clearPositions","dataArray","dataset","nodeList","nodeObj","edgeList","LabelAccumulator","measureText","finalize","nlLines","splitBlocks","splitStringIntoLines","newLine","markupSystem","system","spacing","buffer","modStack","modName","emitBlock","override","beginable","decodeMarkupSystem","splitMarkdownBlocks","splitHtmlBlocks","curWidth","words","newText","overMaxWidth","appendLast","getLongestFit","word","getLongestFitWord","newW","tmpText","_add","tmpLines","firstEmptyBlock","tmpLine","tmpBlocks","determineLineHeights","determineLabelSize","removeEmptyBlocks","_setMargins","dimensions","getDimensionsFromLabel","_addBoundingBoxMargin","_util_CircleImageBase__WEBPACK_IMPORTED_MODULE_0__","diameter","_drawRawCircle","_resizeImage","switchImages","clip","_drawImageAtPosition","_drawImageLabel","_distanceToBorder","_util_ShapeBase__WEBPACK_IMPORTED_MODULE_0__","_drawShape","iconSize","_icon","side","neutralborderWidth","selectionLineWidth","edgesListeners","edgeData","smoothOptions","reconnectEdges","oldEdgesData","edgesData","oldEdge","showInternalIds","_addMissingEdges","_removeInvalidEdges","edgesToDelete","addIds","_util_BezierEdgeBase__WEBPACK_IMPORTED_MODULE_0__","_boundFunction","positionBezierNode","physicsChange","setupSupportNode","parentEdgeId","_bezierCurve","cx","cy","cr","_findBorderPositionBezier","_getDistanceToBezierEdge","xVia","yVia","stepX","stepY","pi","myAngle","_util_EdgeBase__WEBPACK_IMPORTED_MODULE_0__","edgeSegmentLength","toBorderPoint","borderPos","BarnesHutSolver","Repulsion","HierarchicalRepulsion","SpringSolver","HierarchicalSpringSolver","CentralGravitySolver","ForceAtlas2BasedRepulsionSolver","ForceAtlas2BasedCentralGravitySolver","physicsEdgeIndices","velocities","physicsEnabled","simulationInterval","requiresTimeout","previousStates","referenceState","freezeCache","renderTimer","adaptiveTimestepEnabled","adaptiveCounter","adaptiveInterval","stabilized","startedStabilization","stabilizationIterations","layoutFailed","initPhysics","updatePhysicsData","nodesSolver","edgesSolver","gravitySolver","modelOptions","viewFunction","simulationStep","_emitStabilized","physicsTick","runDoubleSpeed","amountOfIterations","solve","moveNodes","_evaluateStepQuality","_startStabilizing","physicsStep","revert","adjustTimeStep","nodeIds","positions","vx","vy","dpos","reference","maxNodeVelocity","averageNodeVelocity","nodeVelocity","_performStep","maxV","calculateComponentVelocity","targetIterations","_freezeNodes","_stabilizationBatch","running","sendProgress","_finalizeStabilization","_restoreFrozenNodes","colorFactor","forceSize","arrowSize","repulsingForce","edgeLength","node3","_calculateSpringForce","springForce","springFx","springFy","totalFx","totalFy","correctionFx","correctionFy","_BarnesHutSolver__WEBPACK_IMPORTED_MODULE_0__","degree","_CentralGravitySolver__WEBPACK_IMPORTED_MODULE_0__","NetworkUtil","Cluster","clusteredNodes","clusteredEdges","hubsize","_getHubSize","_checkOptions","nodesToCluster","refreshData","joinCondition","childNodesObj","childEdgesObj","cloneOptions","_cluster","edgeCount","relevantEdgeCount","clusters","usedNodes","checkJoinCondition","gatheringSuccessful","childNodeId","_getConnectedId","foundCluster","findClusterData","clusterByEdgeCount","clusterNodeProperties","parentNodeId","parentClonedOptions","childClonedOptions","childNodeIDs","childNode","childEdge","clusterEdgeProperties","otherNodeId","childKeys","createEdges","newEdges","getNewEdge","createdEdge","newEdge","matchToDirection","matchFromDirection","_createClusteredEdge","clusteringEdgeReplacingIds","edgeReplacedById","_backupEdgeOptions","tmpNodesToRemove","allowSingleNodeCluster","processProperties","childNodesOptions","childEdgesOptions","clusterId","_getClusterPosition","clusterNode","containedNodes","containedEdges","_clusterEdges","clusterNodeId","parentIndex","parentClusterNodeId","_openChildCluster","releaseFunction","clusterPosition","newPositions","edgesToBeDeleted","otherNode","transferId","transferEdge","otherCluster","_restoreEdge","nodesArray","counter","clusteredNodeId","startEdgeId","allEdgeIds","getClusteredEdges","clusteredEdgeId","getBaseEdges","IdsToHandle","doneIds","foundIds","nextId","nextEdge","replacingIds","replacingId","average","averageSquared","hubCounter","largestHub","variance","standardDeviation","hubThreshold","baseEdge","extraOptions","childEdges","_createClusterEdges","clusteredNode","deletedNodeIds","deletedEdgeIds","eachClusterNode","endPointsValid","replacedIds","numValid","containedEdgeId","containedEdge","deletedEdgeId","_filter","shouldBeClustered","clusterFrom","_getClusterNodeForNode","clusterTo","continueLoop","clustersToOpen","numNodes","allowSingle","childClusterId","childCluster","clusterEdge","parentClusterEdge","srcId","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","redrawRequested","renderingActive","renderRequests","allowRedraw","dragging","_determineBrowserMethod","_resizeNodes","_redraw","_requestRedraw","_startRendering","cancelAnimationFrame","myWindow","_requestNextFrame","_renderStep","setTransform","clientHeight","clearRect","_drawEdges","_drawNodes","alwaysShow","topLeft","bottomRight","viewableArea","isSelected","isBoundingBoxOverlappingWith","browserType","hammerUtil","resizeTimer","resizeFunction","_onResize","cameraState","canvasViewCenter","hammerFrame","_cleanUp","setInterval","clearInterval","previousWidth","previousHeight","widthRatio","heightRatio","newScale","currentViewCenter","distanceFromCenter","_setPixelRatio","noCanvas","_bindHammer","drag","pinch","_prepareValue","emitEvent","oldWidth","oldHeight","previousRatio","_getCameraState","newWidth","newHeight","_setCameraState","numerator","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","_determinePixelRatio","_XconvertCanvasToDOM","_YconvertCanvasToDOM","_XconvertDOMtoCanvas","_YconvertDOMtoCanvas","animationSpeed","renderRefreshRate","animationEasingFunction","easingTime","sourceScale","targetScale","sourceTranslation","targetTranslation","lockedOnNodeId","lockedOnNodeOffset","touchTime","initialZoom","zoomLevel","positionDefined","getRange","xDistance","yDistance","xZoomLevel","yZoomLevel","animationOptions","findCenter","nodePosition","lockedOnNode","easingFunction","animateView","_transitionRedraw","viewCenter","_lockedRedraw","finished","NavigationHandler","Popup","navigationHandler","popup","popupObj","popupTimer","pointer","pinched","checkSelectionChanges","_generateClickEvent","previousSelection","selectAdditionalOnPoint","selectOnPoint","currentSelection","deselectedItems","_determineDifference","selectedItems","firstSet","secondSet","arrayDiff","firstArr","secondArr","selectObject","selectionObj","xFixed","yFixed","diffX","diffY","scaleOld","preScaleDragPointer","scaleFrac","tx","ty","postScaleDragPointer","wheelDelta","popupVisible","_checkHidePopup","setPosition","_checkShowPopup","hoverObject","pointerObj","previousPopupObjId","nodeUnderCursor","popupType","overlappingNodes","getTitle","overlappingEdges","popupTargetType","popupTargetId","setText","_pointerToPositionObject","stillOnObj","overNode","iconsCreated","navigationHammers","boundFunctions","activated","configureKeyboardBindings","loadNavigationElements","cleanNavigation","navigationDOM","navigationDivs","navigationDivActions","_fit","bindToRedraw","_stopMovement","boundAction","unbindFromRedraw","overflowMethod","doShow","maxHeight","isLeft","isTop","hoverObj","updateSelection","selectionChanged","deselectObject","DOM","oldSelection","emptySelection","_initBaseEvent","getClickedItems","highlightEdges","_selectConnectedEdges","_addToSelection","_removeFromSelection","canvasPos","returnNode","positionObject","_getAllNodesOverlappingWith","_getEdgesOverlappingWith","returnEdge","mindist","overlappingEdge","dist","_unselectConnectedEdges","unselect","clusterSize","_addToHover","hoverChanged","emitBlurEvent","emitHoverEvent","_hoverConnectedEdges","idArray","RangeError","getItemsOnPoint","HorizontalStrategy","VerticalStrategy","HierarchicalStatus","childrenReference","parentReference","trees","distributionOrdering","levels","distributionIndex","isTree","treeIndex","treeId","accumulator","_getMaxLevel","nodeA","nodeB","minLevel","min_x","max_x","min_y","max_y","parents1","parents2","curLevel","initialRandomSeed","setPhysics","optionsBackup","setupHierarchicalLayout","layoutNetwork","curveType","prevHierarchicalState","setDirectionStrategy","adaptAllOptionsForHierarchicalLayout","backupPhysics","indices","MAX_LEVELS","clusterThreshold","clusterOptions","clusterBridges","_declusterAll","info","kamadaKawai","_shiftToCenter","getRangeCore","clustersPresent","definedLevel","undefinedLevel","lastNodeOnLevel","_determineLevelsByHubsize","_determineLevelsDirected","_determineLevelsCustomCallback","ensureLevel","distribution","_getDistribution","_generateMap","_placeNodesByHierarchy","_condenseHierarchy","stillShifting","branches","shiftTree","getTreeSizes","treeWidths","numTrees","getTreeSize","getBranchNodes","getBranchBoundary","branchMap","maxLevel","minSpace","maxSpace","branchNode","getPosition","minSpaceNode","maxSpaceNode","_getSpaceAroundNode","getCollisionLevel","maxLevel1","getMaxLevel","maxLevel2","shiftElementsCloser","centerParents","hier","levelNodes","hasSameParent","inSameSubNetwork","branchShiftCallback","centerParent","diffAbs","branchNodes1","branchNodes2","branchNodeBoundary1","branchNodeBoundary2","max1","min2","minSpace2","_shiftBlock","_centerParent","minimizeEdgeLength","allEdges","nodeLevel","C2","referenceNodes","aboveEdges","getFx","getDFx","getGuess","guess","guessMap","dfx","branchNodes","branchBoundary","minSpaceBranch","maxSpaceBranch","branchOffset","moveBranch","newPosition","minimizeEdgeLengthBottomUp","getLevels","shiftBranchesCloserBottomUp","centerAllParents","centerAllParentsBottomUp","treeSizes","shiftBy","shiftTrees","useMap","prevNode","nextNode","nextPos","parentId","_getCenterPosition","positionedNodes","nodeArray","_indexArrayToNodes","handledNodeCount","_validatePositionAndContinue","parentLevel","childRef","childNodeLevel","previousPos","sharedParent","_findCommonParent","withChild","_placeBranchNodes","hubSizes","hubSize","_getActiveEdges","levelDownstream","_getHubSizes","_crawlNetwork","levelA","setMinLevelToZero","isBidirectional","otherEdge","levelB","addRelation","checkIfTree","startingNodeId","crawler","tree","setTreeIndex","shifter","childA","childB","iterateParents","parentRef","findParent","foundParent","isVertical","minPos","maxPos","DirectionInterface","abstract","fake_use","addToOrdering","editMode","manipulationDiv","editModeDiv","closeDiv","manipulationHammers","temporaryUIFunctions","temporaryEventFunctions","temporaryIds","guiEnabled","inMode","selectedControlNode","_clean","_restore","_setup","showManipulatorToolbar","_createEditButton","manipulationDOM","selectedNodeCount","_getSelectedNodeCount","selectedEdgeCount","_getSelectedEdgeCount","selectedTotalCount","needSeperator","_createAddNodeButton","_createSeperator","_createAddEdgeButton","_createEditNodeButton","_createEditEdgeButton","_createDeleteButton","_bindHammerToDiv","toggleEditMode","_temporaryBindEvent","_createBackButton","_createDescription","_performAddNode","_getSelectedNode","finalizedData","alert","_temporaryBindUI","_handleConnect","_finishConnect","_dragControlNode","_dragStartEdge","edgeBeingEditedId","controlNodeFrom","_getNewTargetNode","controlNodeTo","_controlNodeTouch","_controlNodeDragStart","_controlNodeDrag","_controlNodeDragEnd","findBorderPositions","_performEditEdge","selectedNodes","selectedEdges","deleteFunction","_createWrappers","_removeManipulationDOM","_createButton","_cleanManipulatorHammers","_cleanupTemporaryNodesAndEdges","_unbindTemporaryUIs","_unbindTemporaryEvents","deleteBtnClass","rtl","labelClassName","newFunction","boundFunction","UIfunctionName","functionName","eventName","domElement","indexTempEdge","indexTempNode","fromSelect","toSelect","overlappingNodeIds","targetNode","connectionEdge","connectFromId","_performAddEdge","clickData","defaultData","sourceNodeId","targetNodeId","eeFunct","ColorPicker","parentModule","defaultContainer","changedOptions","allowCreation","popupCounter","moduleOptions","domElements","popupDiv","popupLimit","popupHistory","colorPicker","_removePopup","_handleObject","_makeItem","_makeHeader","generateButton","onclick","_printOptions","onmouseover","onmouseout","optionsContainer","_push","_showPopupIfNeeded","objectLabel","selectedValue","onchange","_update","_makeLabel","popupString","popupValue","oninput","itemIndex","_setupPopup","hideTimeout","deleteTimeout","defaultColor","backgroundColor","_showColorPicker","insertTo","setColor","setUpdateCallback","colorString","setCloseCallback","checkOnly","visibleInSet","subObj","newPath","_getValue","_handleArray","_makeTextInput","_makeCheckbox","enabledPath","enabledValue","_makeColorField","_makeDropdown","_makeRange","_constructOptions","generated","centerCoordinates","hueCircle","initialColor","previousColor","applied","updateCallback","closeCallback","_setSize","black","navy","darkblue","mediumblue","darkgreen","teal","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","lime","springgreen","aqua","cyan","midnightblue","dodgerblue","lightseagreen","forestgreen","seagreen","darkslategray","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","mediumaquamarine","dimgray","slateblue","olivedrab","slategray","lightslategray","mediumslateblue","lawngreen","chartreuse","aquamarine","maroon","purple","olive","gray","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","silver","mediumvioletred","indianred","peru","chocolate","tan","lightgrey","palevioletred","thistle","orchid","goldenrod","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","fuchsia","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","yellow","lightyellow","ivory","white","setInitial","htmlColor","_isColorString","rgbaArray","rgbObj","alpha","_setColor","_generateHueCircle","storePrevious","_hide","_updatePicker","angleConvert","colorPickerSelector","colorPickerCanvas","pixelRation","putImageData","brightnessRange","opacityRange","initialColorDiv","newColorDiv","colorPickerDiv","opacityDiv","brightnessDiv","arrowDiv","_setOpacity","_setBrightness","brightnessLabel","opacityLabel","cancelButton","applyButton","_apply","saveButton","_save","loadButton","_loadLast","_moveSelector","hue","sat","hfac","sfac","getImageData","newTop","newLeft","myID","genericHelpers_this","defaultCancelCb","$modal","modal","genericHelpers_self","deepCopy","deepFreeze","freeze","compareFunction","datasetToArray","ds","keepOnlyKeys","getFileExtension","filename","htmlEncode","printout","toTitleCase","showSimpleModal","showFormModal","initialValue","makeFormModal","successText","form","footer","formRow","basicMap","extraAttrs","attrname","validFunc","validationFunc","generalValidator","valueMutator","$v","valid","clickDismiss","$b","$options_1","optionText","oText","oIndex","optionValues","$footer","role","aria-hidden","data-dismiss","aria-label","successCb","cancelCb","vals","hasErrors","tagName","files","genericHelpers","graphHelpers","adjacencyMatrix","degrees","in","outV","SpanningTree","V","NodeImmut","_this","_newTarget","toPlain","toReturn","getID","getLabel","attribute","getAllAttributes","EdgeImmut","weight","getFrom","getTo","getWeight","newWeight","filterExtraAttr","labels","filterNodeExtraAttr","filterEdgeExtraAttr","genericEdgesToImmutEdges","nodeMap","immutable","GraphImmut_EdgeImmut","genericNodesToImmutNodes","GraphImmut_NodeImmut","nodeNum_1","GraphImmut","directed","weighted","numEdges","getNode","rich","deleteAll","foundOneEdge","oldWeight","foundFirst","isDirected","getAllNodes","getAllNodesAsImmutableList","getAllEdgesAsImmutableList","getAllEdges","getNumberOfNodes","getNumberOfEdges","getAllOutDegrees","asWeighted","asUnweighted","asDirected","doubleEdges","asUndirected","addedEdges","asChangedDirectedWeighted","G","getNodeAdjacency","adj","getFullAdjacency","areAdjacent","id1","id2","getEdgesBetween","getMinWeightEdgeBetween","minWeight","reduceMultiGraph","multiEdges","uniques","acc","keep","duplicateEdge","isWeighted","getInt","graphState","GraphState","setUpToDate","listOptions","upToDate","makeAndPrintProperties","getProperty","updateIfNotUpdated","ignoreDuplicate","applyFunc","sent","Promise","graphProperties","recalcLong","directional","getOption","vertices","__awaiter","printableProperties","_b","_c","printGraphProperties","edgeFrom","edgeTo","main","clearColorFromNodes","clearColorFromEdges","iId","getGraphData","newGraph","classes_GraphImmut_GraphImmut","nodeIDToLabel","nodeLabelToID","rID","getGraphAsDataSet","index_network","setLocations","locations","clearNodeColors","clearEdgeColors","workerPool","backHistory","forwardHistory","maxHistory","ui","makeAndPrintGraphColoring","makeAndPrintEulerian","getAlgorithms","makeAndPrintIsCyclic","stronglyConnectedComponents","connectedComponents","graphColoring","eulerian","Chromatic Number","Connected Components","Strongly Connected Components","cyclic","js_GraphAlgorithms","GraphAlgorithms","graphPlainToGraphImmut","gp","colorNetwork","nodeArr","vertexOrder","colorIndex","currentColor","myGroup","conflict","colors","chromaticNumber","components","componentCount","setComponentNum","depthFirstSearch","visisted","nodeID","lowlink","S","strongConnect","breadthFirstSearch","startNodeID","targetNodeID","Q","pathExists","dijkstraSearch","PriorityQueue","_nodes","enqueue","distances","previous","smallest","neighbor","alt","cost","bellmanFord","negativeCylce","fordFulkerson","marked","edgeProperties","flow","residualCapacity","addResidualFlow","deltaFlow","hasAugmentedPath","vertexAdjacency_1","bottleneckValue","maxFlow","flowPath","vertexAdjacency_2","getFlows","kruskal","classes_SpanningTree","mst","totalWeight","topologicalSort","adjacency","nodeN","nodeNConnectedTo","mID","isGraphCyclic","directionalEulerian","directionalDegrees","scc","component","deg","hasEulerianCircuit","cc","GraphAlgorithmWorker_awaiter","waitTime","postMessage","convertToGraphImmut","algorithms_FloydWarshall","edgesArray","D_matrix","cell","knode","kcolm","inode","icolm","jnode","jcolm","edgeStrength","distanceSolver","ignoreClusters","getDistances","_createL_matrix","_createK_matrix","_createE_matrix","maxEnergy","highE_nodeId","dE_dx","dE_dy","delta_m","subIterations","_getHighestEnergyNode","_moveNode","_getEnergy","maxEnergyNodeId","dE_dx_max","dE_dy_max","nodeIdx","E_sums","d2E_dx2","d2E_dxdy","d2E_dy2","x_m","y_m","km","K_matrix","lm","L_matrix","iIdx","x_i","y_i","kmat","lmat","denominator","_updateE_matrix","E_matrix","mIdx","colm","lcolm","oldDx","oldDy","util_CubicBezierEdgeBase","BezierEdgeBase","via1","via2","vec","viaNodes"],"mappings":"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","file":"69f38f95551259cd47aa.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 85);\n","/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// utility functions\r\n\r\n// first check if moment.js is already loaded in the browser window, if so,\r\n// use this instance. Else, load via commonjs.\r\n\r\n\r\nvar moment = require('./module/moment');\r\nvar uuid = require('./module/uuid');\r\n\r\n/**\r\n * Test whether given object is a number\r\n * @param {*} object\r\n * @return {Boolean} isNumber\r\n */\r\nexports.isNumber = function (object) {\r\n  return (object instanceof Number || typeof object == 'number');\r\n};\r\n\r\n\r\n/**\r\n * Remove everything in the DOM object\r\n * @param {Element} DOMobject\r\n */\r\nexports.recursiveDOMDelete = function (DOMobject) {\r\n  if (DOMobject) {\r\n    while (DOMobject.hasChildNodes() === true) {\r\n      exports.recursiveDOMDelete(DOMobject.firstChild);\r\n      DOMobject.removeChild(DOMobject.firstChild);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * this function gives you a range between 0 and 1 based on the min and max values in the set, the total sum of all values and the current value.\r\n *\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} total\r\n * @param {number} value\r\n * @returns {number}\r\n */\r\nexports.giveRange = function (min, max, total, value) {\r\n  if (max == min) {\r\n    return 0.5;\r\n  }\r\n  else {\r\n    var scale = 1 / (max - min);\r\n    return Math.max(0, (value - min) * scale);\r\n  }\r\n};\r\n\r\n/**\r\n * Test whether given object is a string\r\n * @param {*} object\r\n * @return {Boolean} isString\r\n */\r\nexports.isString = function (object) {\r\n  return (object instanceof String || typeof object == 'string');\r\n};\r\n\r\n/**\r\n * Test whether given object is a Date, or a String containing a Date\r\n * @param {Date | String} object\r\n * @return {Boolean} isDate\r\n */\r\nexports.isDate = function (object) {\r\n  if (object instanceof Date) {\r\n    return true;\r\n  }\r\n  else if (exports.isString(object)) {\r\n    // test whether this string contains a date\r\n    var match = ASPDateRegex.exec(object);\r\n    if (match) {\r\n      return true;\r\n    }\r\n    else if (!isNaN(Date.parse(object))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Create a semi UUID\r\n * source: http://stackoverflow.com/a/105074/1262753\r\n * @return {string} uuid\r\n */\r\nexports.randomUUID = function () {\r\n  return uuid.v4();\r\n};\r\n\r\n/**\r\n * assign all keys of an object that are not nested objects to a certain value (used for color objects).\r\n * @param {object} obj\r\n * @param {number} value\r\n */\r\nexports.assignAllKeys = function (obj, value) {\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      if (typeof obj[prop] !== 'object') {\r\n        obj[prop] = value;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Copy property from b to a if property present in a.\r\n * If property in b explicitly set to null, delete it if `allowDeletion` set.\r\n *\r\n * Internal helper routine, should not be exported. Not added to `exports` for that reason.\r\n *\r\n * @param {object} a  target object\r\n * @param {object} b  source object\r\n * @param {string} prop  name of property to copy to a\r\n * @param {boolean} allowDeletion  if true, delete property in a if explicitly set to null in b \r\n * @private\r\n */\r\nfunction copyOrDelete(a, b, prop, allowDeletion) {\r\n  var doDeletion = false;\r\n  if (allowDeletion === true) {\r\n    doDeletion = (b[prop] === null && a[prop] !== undefined);\r\n  }\r\n\r\n  if (doDeletion) {\r\n      delete a[prop];\r\n  } else {\r\n    a[prop] = b[prop];  // Remember, this is a reference copy!\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Fill an object with a possibly partially defined other object.\r\n *\r\n * Only copies values for the properties already present in a.\r\n * That means an object is not created on a property if only the b object has it.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n * @param {boolean} [allowDeletion=false]  if true, delete properties in a that are explicitly set to null in b \r\n */\r\nexports.fillIfDefined = function (a, b, allowDeletion = false) {\r\n  // NOTE: iteration of properties of a\r\n  // NOTE: prototype properties iterated over as well\r\n  for (var prop in a) {\r\n    if (b[prop] !== undefined) {\r\n      if (b[prop] === null || typeof b[prop] !== 'object') { // Note: typeof null === 'object'\r\n        copyOrDelete(a, b, prop, allowDeletion);\r\n      } else {\r\n        if (typeof a[prop] === 'object') {\r\n          exports.fillIfDefined(a[prop], b[prop], allowDeletion);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Extend object a with the properties of object b or a series of objects\r\n * Only properties with defined values are copied\r\n * @param {Object} a\r\n * @param {...Object} b\r\n * @return {Object} a\r\n */\r\nexports.extend = function (a, b) {  // eslint-disable-line no-unused-vars\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var other = arguments[i];\r\n    for (var prop in other) {\r\n      if (other.hasOwnProperty(prop)) {\r\n        a[prop] = other[prop];\r\n      }\r\n    }\r\n  }\r\n  return a;\r\n};\r\n\r\n/**\r\n * Extend object a with selected properties of object b or a series of objects\r\n * Only properties with defined values are copied\r\n * @param {Array.<string>} props\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object} a\r\n */\r\nexports.selectiveExtend = function (props, a, b) {  // eslint-disable-line no-unused-vars\r\n  if (!Array.isArray(props)) {\r\n    throw new Error('Array with property names expected as first argument');\r\n  }\r\n\r\n  for (var i = 2; i < arguments.length; i++) {\r\n    var other = arguments[i];\r\n\r\n    for (var p = 0; p < props.length; p++) {\r\n      var prop = props[p];\r\n      if (other && other.hasOwnProperty(prop)) {\r\n        a[prop] = other[prop];\r\n      }\r\n    }\r\n  }\r\n  return a;\r\n};\r\n\r\n\r\n/**\r\n * Extend object a with selected properties of object b.\r\n * Only properties with defined values are copied.\r\n *\r\n * **Note:** Previous version of this routine implied that multiple source objects\r\n *           could be used; however, the implementation was **wrong**.\r\n *           Since multiple (>1) sources weren't used anywhere in the `vis.js` code,\r\n *           this has been removed\r\n *\r\n * @param {Array.<string>} props names of first-level properties to copy over\r\n * @param {object} a  target object\r\n * @param {object} b  source object\r\n * @param {boolean} [allowDeletion=false]  if true, delete property in a if explicitly set to null in b \r\n * @returns {Object} a\r\n */\r\nexports.selectiveDeepExtend = function (props, a, b, allowDeletion = false) {\r\n  // TODO: add support for Arrays to deepExtend\r\n  if (Array.isArray(b)) {\r\n    throw new TypeError('Arrays are not supported by deepExtend');\r\n  }\r\n\r\n  for (var p = 0; p < props.length; p++) {\r\n    var prop = props[p];\r\n    if (b.hasOwnProperty(prop)) {\r\n      if (b[prop] && b[prop].constructor === Object) {\r\n        if (a[prop] === undefined) {\r\n          a[prop] = {};\r\n        }\r\n        if (a[prop].constructor === Object) {\r\n          exports.deepExtend(a[prop], b[prop], false, allowDeletion);\r\n        }\r\n        else {\r\n          copyOrDelete(a, b, prop, allowDeletion);\r\n        }\r\n      } else if (Array.isArray(b[prop])) {\r\n        throw new TypeError('Arrays are not supported by deepExtend');\r\n      } else {\r\n        copyOrDelete(a, b, prop, allowDeletion);\r\n      }\r\n    }\r\n  }\r\n  return a;\r\n};\r\n\r\n\r\n/**\r\n * Extend object `a` with properties of object `b`, ignoring properties which are explicitly \r\n * specified to be excluded.\r\n * \r\n * The properties of `b` are considered for copying.\r\n * Properties which are themselves objects are are also extended.\r\n * Only properties with defined values are copied\r\n *\r\n * @param {Array.<string>} propsToExclude  names of properties which should *not* be copied\r\n * @param {Object}                      a  object to extend\r\n * @param {Object}                      b  object to take properties from for extension\r\n * @param {boolean} [allowDeletion=false]  if true, delete properties in a that are explicitly set to null in b \r\n * @return {Object} a\r\n */\r\nexports.selectiveNotDeepExtend = function (propsToExclude, a, b, allowDeletion = false) {\r\n  // TODO: add support for Arrays to deepExtend\r\n  // NOTE: array properties have an else-below; apparently, there is a problem here. \r\n  if (Array.isArray(b)) {\r\n    throw new TypeError('Arrays are not supported by deepExtend');\r\n  }\r\n\r\n  for (var prop in b) {\r\n    if (!b.hasOwnProperty(prop)) continue;              // Handle local properties only \r\n    if (propsToExclude.indexOf(prop) !== -1) continue;  // In exclusion list, skip\r\n\r\n    if (b[prop] && b[prop].constructor === Object) {\r\n      if (a[prop] === undefined) {\r\n        a[prop] = {};\r\n      }\r\n      if (a[prop].constructor === Object) {\r\n        exports.deepExtend(a[prop], b[prop]);  // NOTE: allowDeletion not propagated!\r\n      }\r\n      else {\r\n        copyOrDelete(a, b, prop, allowDeletion);\r\n      }\r\n    } else if (Array.isArray(b[prop])) {\r\n      a[prop] = [];\r\n      for (let i = 0; i < b[prop].length; i++) {\r\n        a[prop].push(b[prop][i]);\r\n      }\r\n    } else {\r\n      copyOrDelete(a, b, prop, allowDeletion);\r\n    }\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\n\r\n/**\r\n * Deep extend an object a with the properties of object b\r\n *\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @param {boolean} [protoExtend=false]  If true, the prototype values will also be extended.\r\n *                          (ie. the options objects that inherit from others will also get the inherited options)\r\n * @param {boolean} [allowDeletion=false] If true, the values of fields that are null will be deleted\r\n * @returns {Object}\r\n */\r\nexports.deepExtend = function (a, b, protoExtend=false, allowDeletion=false) {\r\n  for (var prop in b) {\r\n    if (b.hasOwnProperty(prop) || protoExtend === true) {\r\n      if (b[prop] && b[prop].constructor === Object) {\r\n        if (a[prop] === undefined) {\r\n          a[prop] = {};\r\n        }\r\n        if (a[prop].constructor === Object) {\r\n          exports.deepExtend(a[prop], b[prop], protoExtend);  // NOTE: allowDeletion not propagated!\r\n        }\r\n        else {\r\n          copyOrDelete(a, b, prop, allowDeletion);\r\n        }\r\n      } else if (Array.isArray(b[prop])) {\r\n        a[prop] = [];\r\n        for (let i = 0; i < b[prop].length; i++) {\r\n          a[prop].push(b[prop][i]);\r\n        }\r\n      } else {\r\n        copyOrDelete(a, b, prop, allowDeletion);\r\n      }\r\n    }\r\n  }\r\n  return a;\r\n};\r\n\r\n\r\n/**\r\n * Test whether all elements in two arrays are equal.\r\n * @param {Array} a\r\n * @param {Array} b\r\n * @return {boolean} Returns true if both arrays have the same length and same\r\n *                   elements.\r\n */\r\nexports.equalArray = function (a, b) {\r\n  if (a.length != b.length) return false;\r\n\r\n  for (var i = 0, len = a.length; i < len; i++) {\r\n    if (a[i] != b[i]) return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Convert an object to another type\r\n * @param {boolean | number | string | Date | Moment | Null | undefined} object\r\n * @param {string | undefined} type   Name of the type. Available types:\r\n *                                    'Boolean', 'Number', 'String',\r\n *                                    'Date', 'Moment', ISODate', 'ASPDate'.\r\n * @return {*} object\r\n * @throws Error\r\n */\r\nexports.convert = function (object, type) {\r\n  var match;\r\n\r\n  if (object === undefined) {\r\n    return undefined;\r\n  }\r\n  if (object === null) {\r\n    return null;\r\n  }\r\n\r\n  if (!type) {\r\n    return object;\r\n  }\r\n  if (!(typeof type === 'string') && !(type instanceof String)) {\r\n    throw new Error('Type must be a string');\r\n  }\r\n\r\n  //noinspection FallthroughInSwitchStatementJS\r\n  switch (type) {\r\n    case 'boolean':\r\n    case 'Boolean':\r\n      return Boolean(object);\r\n\r\n    case 'number':\r\n    case 'Number':\r\n      if (exports.isString(object) && !isNaN(Date.parse(object))) {\r\n        return moment(object).valueOf();\r\n      } else {\r\n        return Number(object.valueOf());\r\n      }\r\n    case 'string':\r\n    case 'String':\r\n      return String(object);\r\n\r\n    case 'Date':\r\n      if (exports.isNumber(object)) {\r\n        return new Date(object);\r\n      }\r\n      if (object instanceof Date) {\r\n        return new Date(object.valueOf());\r\n      }\r\n      else if (moment.isMoment(object)) {\r\n        return new Date(object.valueOf());\r\n      }\r\n      if (exports.isString(object)) {\r\n        match = ASPDateRegex.exec(object);\r\n        if (match) {\r\n          // object is an ASP date\r\n          return new Date(Number(match[1])); // parse number\r\n        }\r\n        else {\r\n          return moment(new Date(object)).toDate(); // parse string\r\n        }\r\n      }\r\n      else {\r\n        throw new Error(\r\n          'Cannot convert object of type ' + exports.getType(object) +\r\n          ' to type Date');\r\n      }\r\n\r\n    case 'Moment':\r\n      if (exports.isNumber(object)) {\r\n        return moment(object);\r\n      }\r\n      if (object instanceof Date) {\r\n        return moment(object.valueOf());\r\n      }\r\n      else if (moment.isMoment(object)) {\r\n        return moment(object);\r\n      }\r\n      if (exports.isString(object)) {\r\n        match = ASPDateRegex.exec(object);\r\n        if (match) {\r\n          // object is an ASP date\r\n          return moment(Number(match[1])); // parse number\r\n        }\r\n        else {\r\n          return moment(object); // parse string\r\n        }\r\n      }\r\n      else {\r\n        throw new Error(\r\n          'Cannot convert object of type ' + exports.getType(object) +\r\n          ' to type Date');\r\n      }\r\n\r\n    case 'ISODate':\r\n      if (exports.isNumber(object)) {\r\n        return new Date(object);\r\n      }\r\n      else if (object instanceof Date) {\r\n        return object.toISOString();\r\n      }\r\n      else if (moment.isMoment(object)) {\r\n        return object.toDate().toISOString();\r\n      }\r\n      else if (exports.isString(object)) {\r\n        match = ASPDateRegex.exec(object);\r\n        if (match) {\r\n          // object is an ASP date\r\n          return new Date(Number(match[1])).toISOString(); // parse number\r\n        }\r\n        else {\r\n          return moment(object).format(); // ISO 8601\r\n        }\r\n      }\r\n      else {\r\n        throw new Error(\r\n          'Cannot convert object of type ' + exports.getType(object) +\r\n          ' to type ISODate');\r\n      }\r\n\r\n    case 'ASPDate':\r\n      if (exports.isNumber(object)) {\r\n        return '/Date(' + object + ')/';\r\n      }\r\n      else if (object instanceof Date) {\r\n        return '/Date(' + object.valueOf() + ')/';\r\n      }\r\n      else if (exports.isString(object)) {\r\n        match = ASPDateRegex.exec(object);\r\n        var value;\r\n        if (match) {\r\n          // object is an ASP date\r\n          value = new Date(Number(match[1])).valueOf(); // parse number\r\n        }\r\n        else {\r\n          value = new Date(object).valueOf(); // parse string\r\n        }\r\n        return '/Date(' + value + ')/';\r\n      }\r\n      else {\r\n        throw new Error(\r\n          'Cannot convert object of type ' + exports.getType(object) +\r\n          ' to type ASPDate');\r\n      }\r\n\r\n    default:\r\n      throw new Error('Unknown type \"' + type + '\"');\r\n  }\r\n};\r\n\r\n// parse ASP.Net Date pattern,\r\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\r\n// code from http://momentjs.com/\r\nvar ASPDateRegex = /^\\/?Date\\((\\-?\\d+)/i;\r\n\r\n/**\r\n * Get the type of an object, for example exports.getType([]) returns 'Array'\r\n * @param {*} object\r\n * @return {string} type\r\n */\r\nexports.getType = function (object) {\r\n  var type = typeof object;\r\n\r\n  if (type == 'object') {\r\n    if (object === null) {\r\n      return 'null';\r\n    }\r\n    if (object instanceof Boolean) {\r\n      return 'Boolean';\r\n    }\r\n    if (object instanceof Number) {\r\n      return 'Number';\r\n    }\r\n    if (object instanceof String) {\r\n      return 'String';\r\n    }\r\n    if (Array.isArray(object)) {\r\n      return 'Array';\r\n    }\r\n    if (object instanceof Date) {\r\n      return 'Date';\r\n    }\r\n    return 'Object';\r\n  }\r\n  else if (type == 'number') {\r\n    return 'Number';\r\n  }\r\n  else if (type == 'boolean') {\r\n    return 'Boolean';\r\n  }\r\n  else if (type == 'string') {\r\n    return 'String';\r\n  }\r\n  else if (type === undefined) {\r\n    return 'undefined';\r\n  }\r\n\r\n\r\n  return type;\r\n};\r\n\r\n\r\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param {Array} arr\r\n * @param {*} newValue\r\n * @returns {Array}\r\n */\r\nexports.copyAndExtendArray = function (arr, newValue) {\r\n  let newArr = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  newArr.push(newValue);\r\n  return newArr;\r\n};\r\n\r\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param {Array} arr\r\n * @returns {Array}\r\n */\r\nexports.copyArray = function (arr) {\r\n  let newArr = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  return newArr;\r\n};\r\n\r\n/**\r\n * Retrieve the absolute left value of a DOM element\r\n * @param {Element} elem        A dom element, for example a div\r\n * @return {number} left        The absolute left position of this element\r\n *                              in the browser page.\r\n */\r\nexports.getAbsoluteLeft = function (elem) {\r\n  return elem.getBoundingClientRect().left;\r\n};\r\n\r\nexports.getAbsoluteRight = function (elem) {\r\n  return elem.getBoundingClientRect().right;\r\n};\r\n\r\n/**\r\n * Retrieve the absolute top value of a DOM element\r\n * @param {Element} elem        A dom element, for example a div\r\n * @return {number} top        The absolute top position of this element\r\n *                              in the browser page.\r\n */\r\nexports.getAbsoluteTop = function (elem) {\r\n  return elem.getBoundingClientRect().top;\r\n};\r\n\r\n/**\r\n * add a className to the given elements style\r\n * @param {Element} elem\r\n * @param {string} classNames\r\n */\r\nexports.addClassName = function (elem, classNames) {\r\n  var classes = elem.className.split(' ');\r\n  var newClasses = classNames.split(' ');\r\n  classes = classes.concat(newClasses.filter(function(className) {\r\n    return classes.indexOf(className) < 0;\r\n  }));\r\n  elem.className = classes.join(' ');\r\n};\r\n\r\n/**\r\n * add a className to the given elements style\r\n * @param {Element} elem\r\n * @param {string} classNames\r\n */\r\nexports.removeClassName = function (elem, classNames) {\r\n  var classes = elem.className.split(' ');\r\n  var oldClasses = classNames.split(' ');\r\n  classes = classes.filter(function(className) {\r\n    return oldClasses.indexOf(className) < 0;\r\n  });\r\n  elem.className = classes.join(' ');\r\n};\r\n\r\n/**\r\n * For each method for both arrays and objects.\r\n * In case of an array, the built-in Array.forEach() is applied. (**No, it's not!**)\r\n * In case of an Object, the method loops over all properties of the object.\r\n * @param {Object | Array} object   An Object or Array\r\n * @param {function} callback       Callback method, called for each item in\r\n *                                  the object or array with three parameters:\r\n *                                  callback(value, index, object)\r\n */\r\nexports.forEach = function (object, callback) {\r\n  var i,\r\n    len;\r\n  if (Array.isArray(object)) {\r\n    // array\r\n    for (i = 0, len = object.length; i < len; i++) {\r\n      callback(object[i], i, object);\r\n    }\r\n  }\r\n  else {\r\n    // object\r\n    for (i in object) {\r\n      if (object.hasOwnProperty(i)) {\r\n        callback(object[i], i, object);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Convert an object into an array: all objects properties are put into the\r\n * array. The resulting array is unordered.\r\n * @param {Object} object\r\n * @returns {Array} array\r\n */\r\nexports.toArray = function (object) {\r\n  var array = [];\r\n\r\n  for (var prop in object) {\r\n    if (object.hasOwnProperty(prop)) array.push(object[prop]);\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\n/**\r\n * Update a property in an object\r\n * @param {Object} object\r\n * @param {string} key\r\n * @param {*} value\r\n * @return {Boolean} changed\r\n */\r\nexports.updateProperty = function (object, key, value) {\r\n  if (object[key] !== value) {\r\n    object[key] = value;\r\n    return true;\r\n  }\r\n  else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Throttle the given function to be only executed once per animation frame\r\n * @param {function} fn\r\n * @returns {function} Returns the throttled function\r\n */\r\nexports.throttle = function (fn) {\r\n  var scheduled = false;\r\n\r\n  return function throttled () {\r\n    if (!scheduled) {\r\n      scheduled = true;\r\n      requestAnimationFrame(function () {\r\n        scheduled = false;\r\n        fn();\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add and event listener. Works for all browsers\r\n * @param {Element}     element    An html element\r\n * @param {string}      action     The action, for example \"click\",\r\n *                                 without the prefix \"on\"\r\n * @param {function}    listener   The callback function to be executed\r\n * @param {boolean}     [useCapture]\r\n */\r\nexports.addEventListener = function (element, action, listener, useCapture) {\r\n  if (element.addEventListener) {\r\n    if (useCapture === undefined)\r\n      useCapture = false;\r\n\r\n    if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\r\n      action = \"DOMMouseScroll\";  // For Firefox\r\n    }\r\n\r\n    element.addEventListener(action, listener, useCapture);\r\n  } else {\r\n    element.attachEvent(\"on\" + action, listener);  // IE browsers\r\n  }\r\n};\r\n\r\n/**\r\n * Remove an event listener from an element\r\n * @param {Element}     element         An html dom element\r\n * @param {string}      action          The name of the event, for example \"mousedown\"\r\n * @param {function}    listener        The listener function\r\n * @param {boolean}     [useCapture]\r\n */\r\nexports.removeEventListener = function (element, action, listener, useCapture) {\r\n  if (element.removeEventListener) {\r\n    // non-IE browsers\r\n    if (useCapture === undefined)\r\n      useCapture = false;\r\n\r\n    if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\r\n      action = \"DOMMouseScroll\";  // For Firefox\r\n    }\r\n\r\n    element.removeEventListener(action, listener, useCapture);\r\n  } else {\r\n    // IE browsers\r\n    element.detachEvent(\"on\" + action, listener);\r\n  }\r\n};\r\n\r\n/**\r\n * Cancels the event if it is cancelable, without stopping further propagation of the event.\r\n * @param {Event} event\r\n */\r\nexports.preventDefault = function (event) {\r\n  if (!event)\r\n    event = window.event;\r\n\r\n  if (event.preventDefault) {\r\n    event.preventDefault();  // non-IE browsers\r\n  }\r\n  else {\r\n    event.returnValue = false;  // IE browsers\r\n  }\r\n};\r\n\r\n/**\r\n * Get HTML element which is the target of the event\r\n * @param {Event} event\r\n * @return {Element} target element\r\n */\r\nexports.getTarget = function (event) {\r\n  // code from http://www.quirksmode.org/js/events_properties.html\r\n  if (!event) {\r\n    event = window.event;\r\n  }\r\n\r\n  var target;\r\n\r\n  if (event.target) {\r\n    target = event.target;\r\n  }\r\n  else if (event.srcElement) {\r\n    target = event.srcElement;\r\n  }\r\n\r\n  if (target.nodeType != undefined && target.nodeType == 3) {\r\n    // defeat Safari bug\r\n    target = target.parentNode;\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Check if given element contains given parent somewhere in the DOM tree\r\n * @param {Element} element\r\n * @param {Element} parent\r\n * @returns {boolean}\r\n */\r\nexports.hasParent = function (element, parent) {\r\n  var e = element;\r\n\r\n  while (e) {\r\n    if (e === parent) {\r\n      return true;\r\n    }\r\n    e = e.parentNode;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexports.option = {};\r\n\r\n/**\r\n * Convert a value into a boolean\r\n * @param {Boolean | function | undefined} value\r\n * @param {boolean} [defaultValue]\r\n * @returns {Boolean} bool\r\n */\r\nexports.option.asBoolean = function (value, defaultValue) {\r\n  if (typeof value == 'function') {\r\n    value = value();\r\n  }\r\n\r\n  if (value != null) {\r\n    return (value != false);\r\n  }\r\n\r\n  return defaultValue || null;\r\n};\r\n\r\n/**\r\n * Convert a value into a number\r\n * @param {Boolean | function | undefined} value\r\n * @param {number} [defaultValue]\r\n * @returns {number} number\r\n */\r\nexports.option.asNumber = function (value, defaultValue) {\r\n  if (typeof value == 'function') {\r\n    value = value();\r\n  }\r\n\r\n  if (value != null) {\r\n    return Number(value) || defaultValue || null;\r\n  }\r\n\r\n  return defaultValue || null;\r\n};\r\n\r\n/**\r\n * Convert a value into a string\r\n * @param {string | function | undefined} value\r\n * @param {string} [defaultValue]\r\n * @returns {String} str\r\n */\r\nexports.option.asString = function (value, defaultValue) {\r\n  if (typeof value == 'function') {\r\n    value = value();\r\n  }\r\n\r\n  if (value != null) {\r\n    return String(value);\r\n  }\r\n\r\n  return defaultValue || null;\r\n};\r\n\r\n/**\r\n * Convert a size or location into a string with pixels or a percentage\r\n * @param {string | number | function | undefined} value\r\n * @param {string} [defaultValue]\r\n * @returns {String} size\r\n */\r\nexports.option.asSize = function (value, defaultValue) {\r\n  if (typeof value == 'function') {\r\n    value = value();\r\n  }\r\n\r\n  if (exports.isString(value)) {\r\n    return value;\r\n  }\r\n  else if (exports.isNumber(value)) {\r\n    return value + 'px';\r\n  }\r\n  else {\r\n    return defaultValue || null;\r\n  }\r\n};\r\n\r\n/**\r\n * Convert a value into a DOM element\r\n * @param {HTMLElement | function | undefined} value\r\n * @param {HTMLElement} [defaultValue]\r\n * @returns {HTMLElement | null} dom\r\n */\r\nexports.option.asElement = function (value, defaultValue) {\r\n  if (typeof value == 'function') {\r\n    value = value();\r\n  }\r\n\r\n  return value || defaultValue || null;\r\n};\r\n\r\n/**\r\n * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n *\r\n * @param {string} hex\r\n * @returns {{r: *, g: *, b: *}} | 255 range\r\n */\r\nexports.hexToRGB = function (hex) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n};\r\n\r\n/**\r\n * This function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.\r\n * @param {string} color\r\n * @param {number} opacity\r\n * @returns {String}\r\n */\r\nexports.overrideOpacity = function (color, opacity) {\r\n  var rgb;\r\n  if (color.indexOf(\"rgba\") != -1) {\r\n    return color;\r\n  }\r\n  else if (color.indexOf(\"rgb\") != -1) {\r\n    rgb = color.substr(color.indexOf(\"(\") + 1).replace(\")\", \"\").split(\",\");\r\n    return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\"\r\n  }\r\n  else {\r\n    rgb = exports.hexToRGB(color);\r\n    if (rgb == null) {\r\n      return color;\r\n    }\r\n    else {\r\n      return \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + opacity + \")\"\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {number} red     0 -- 255\r\n * @param {number} green   0 -- 255\r\n * @param {number} blue    0 -- 255\r\n * @returns {String}\r\n * @constructor\r\n */\r\nexports.RGBToHex = function (red, green, blue) {\r\n  return \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);\r\n};\r\n\r\n/**\r\n * Parse a color property into an object with border, background, and\r\n * highlight colors\r\n * @param {Object | String} color\r\n * @return {Object} colorObject\r\n */\r\nexports.parseColor = function (color) {\r\n  var c;\r\n  if (exports.isString(color) === true) {\r\n    if (exports.isValidRGB(color) === true) {\r\n      var rgb = color.substr(4).substr(0, color.length - 5).split(',').map(function (value) { return parseInt(value) });\r\n      color = exports.RGBToHex(rgb[0], rgb[1], rgb[2]);\r\n    }\r\n    if (exports.isValidHex(color) === true) {\r\n      var hsv = exports.hexToHSV(color);\r\n      var lighterColorHSV = { h: hsv.h, s: hsv.s * 0.8, v: Math.min(1, hsv.v * 1.02) };\r\n      var darkerColorHSV = { h: hsv.h, s: Math.min(1, hsv.s * 1.25), v: hsv.v * 0.8 };\r\n      var darkerColorHex = exports.HSVToHex(darkerColorHSV.h, darkerColorHSV.s, darkerColorHSV.v);\r\n      var lighterColorHex = exports.HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);\r\n      c = {\r\n        background: color,\r\n        border: darkerColorHex,\r\n        highlight: {\r\n          background: lighterColorHex,\r\n          border: darkerColorHex\r\n        },\r\n        hover: {\r\n          background: lighterColorHex,\r\n          border: darkerColorHex\r\n        }\r\n      };\r\n    }\r\n    else {\r\n      c = {\r\n        background: color,\r\n        border: color,\r\n        highlight: {\r\n          background: color,\r\n          border: color\r\n        },\r\n        hover: {\r\n          background: color,\r\n          border: color\r\n        }\r\n      };\r\n    }\r\n  }\r\n  else {\r\n    c = {};\r\n    c.background = color.background || undefined;\r\n    c.border = color.border || undefined;\r\n\r\n    if (exports.isString(color.highlight)) {\r\n      c.highlight = {\r\n        border: color.highlight,\r\n        background: color.highlight\r\n      }\r\n    }\r\n    else {\r\n      c.highlight = {};\r\n      c.highlight.background = color.highlight && color.highlight.background || undefined;\r\n      c.highlight.border = color.highlight && color.highlight.border || undefined;\r\n    }\r\n\r\n    if (exports.isString(color.hover)) {\r\n      c.hover = {\r\n        border: color.hover,\r\n        background: color.hover\r\n      }\r\n    }\r\n    else {\r\n      c.hover = {};\r\n      c.hover.background = color.hover && color.hover.background || undefined;\r\n      c.hover.border = color.hover && color.hover.border || undefined;\r\n    }\r\n  }\r\n\r\n  return c;\r\n};\r\n\r\n\r\n\r\n/**\r\n * http://www.javascripter.net/faq/rgb2hsv.htm\r\n *\r\n * @param {number} red\r\n * @param {number} green\r\n * @param {number} blue\r\n * @returns {{h: number, s: number, v: number}}\r\n * @constructor\r\n */\r\nexports.RGBToHSV = function (red, green, blue) {\r\n  red = red / 255; green = green / 255; blue = blue / 255;\r\n  var minRGB = Math.min(red, Math.min(green, blue));\r\n  var maxRGB = Math.max(red, Math.max(green, blue));\r\n\r\n  // Black-gray-white\r\n  if (minRGB == maxRGB) {\r\n    return { h: 0, s: 0, v: minRGB };\r\n  }\r\n\r\n  // Colors other than black-gray-white:\r\n  var d = (red == minRGB) ? green - blue : ((blue == minRGB) ? red - green : blue - red);\r\n  var h = (red == minRGB) ? 3 : ((blue == minRGB) ? 1 : 5);\r\n  var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;\r\n  var saturation = (maxRGB - minRGB) / maxRGB;\r\n  var value = maxRGB;\r\n  return { h: hue, s: saturation, v: value };\r\n};\r\n\r\nvar cssUtil = {\r\n  // split a string with css styles into an object with key/values\r\n  split: function (cssText) {\r\n    var styles = {};\r\n\r\n    cssText.split(';').forEach(function (style) {\r\n      if (style.trim() != '') {\r\n        var parts = style.split(':');\r\n        var key = parts[0].trim();\r\n        var value = parts[1].trim();\r\n        styles[key] = value;\r\n      }\r\n    });\r\n\r\n    return styles;\r\n  },\r\n\r\n  // build a css text string from an object with key/values\r\n  join: function (styles) {\r\n    return Object.keys(styles)\r\n      .map(function (key) {\r\n        return key + ': ' + styles[key];\r\n      })\r\n      .join('; ');\r\n  }\r\n};\r\n\r\n/**\r\n * Append a string with css styles to an element\r\n * @param {Element} element\r\n * @param {string} cssText\r\n */\r\nexports.addCssText = function (element, cssText) {\r\n  var currentStyles = cssUtil.split(element.style.cssText);\r\n  var newStyles = cssUtil.split(cssText);\r\n  var styles = exports.extend(currentStyles, newStyles);\r\n\r\n  element.style.cssText = cssUtil.join(styles);\r\n};\r\n\r\n/**\r\n * Remove a string with css styles from an element\r\n * @param {Element} element\r\n * @param {string} cssText\r\n */\r\nexports.removeCssText = function (element, cssText) {\r\n  var styles = cssUtil.split(element.style.cssText);\r\n  var removeStyles = cssUtil.split(cssText);\r\n\r\n  for (var key in removeStyles) {\r\n    if (removeStyles.hasOwnProperty(key)) {\r\n      delete styles[key];\r\n    }\r\n  }\r\n\r\n  element.style.cssText = cssUtil.join(styles);\r\n};\r\n\r\n/**\r\n * https://gist.github.com/mjijackson/5311256\r\n * @param {number} h\r\n * @param {number} s\r\n * @param {number} v\r\n * @returns {{r: number, g: number, b: number}}\r\n * @constructor\r\n */\r\nexports.HSVToRGB = function (h, s, v) {\r\n  var r, g, b;\r\n\r\n  var i = Math.floor(h * 6);\r\n  var f = h * 6 - i;\r\n  var p = v * (1 - s);\r\n  var q = v * (1 - f * s);\r\n  var t = v * (1 - (1 - f) * s);\r\n\r\n  switch (i % 6) {\r\n    case 0: r = v, g = t, b = p; break;\r\n    case 1: r = q, g = v, b = p; break;\r\n    case 2: r = p, g = v, b = t; break;\r\n    case 3: r = p, g = q, b = v; break;\r\n    case 4: r = t, g = p, b = v; break;\r\n    case 5: r = v, g = p, b = q; break;\r\n  }\r\n\r\n  return { r: Math.floor(r * 255), g: Math.floor(g * 255), b: Math.floor(b * 255) };\r\n};\r\n\r\nexports.HSVToHex = function (h, s, v) {\r\n  var rgb = exports.HSVToRGB(h, s, v);\r\n  return exports.RGBToHex(rgb.r, rgb.g, rgb.b);\r\n};\r\n\r\nexports.hexToHSV = function (hex) {\r\n  var rgb = exports.hexToRGB(hex);\r\n  return exports.RGBToHSV(rgb.r, rgb.g, rgb.b);\r\n};\r\n\r\nexports.isValidHex = function (hex) {\r\n  var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\r\n  return isOk;\r\n};\r\n\r\nexports.isValidRGB = function (rgb) {\r\n  rgb = rgb.replace(\" \", \"\");\r\n  var isOk = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/i.test(rgb);\r\n  return isOk;\r\n};\r\nexports.isValidRGBA = function (rgba) {\r\n  rgba = rgba.replace(\" \", \"\");\r\n  var isOk = /rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),(.{1,3})\\)/i.test(rgba);\r\n  return isOk;\r\n};\r\n\r\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject\r\n * This is used for default options.\r\n *\r\n * @param {Array.<string>} fields\r\n * @param {Object} referenceObject\r\n * @returns {*}\r\n */\r\nexports.selectiveBridgeObject = function (fields, referenceObject) {\r\n  if (referenceObject !== null && typeof referenceObject === \"object\") {  // !!! typeof null === 'object'\r\n    var objectTo = Object.create(referenceObject);\r\n    for (var i = 0; i < fields.length; i++) {\r\n      if (referenceObject.hasOwnProperty(fields[i])) {\r\n        if (typeof referenceObject[fields[i]] == \"object\") {\r\n          objectTo[fields[i]] = exports.bridgeObject(referenceObject[fields[i]]);\r\n        }\r\n      }\r\n    }\r\n    return objectTo;\r\n  }\r\n  else {\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject\r\n * This is used for default options.\r\n *\r\n * @param {Object} referenceObject\r\n * @returns {*}\r\n */\r\nexports.bridgeObject = function (referenceObject) {\r\n  if (referenceObject !== null && typeof referenceObject === \"object\") {  // !!! typeof null === 'object'\r\n    var objectTo = Object.create(referenceObject);\r\n    if (referenceObject instanceof Element) {\r\n      // Avoid bridging DOM objects\r\n      objectTo = referenceObject;\r\n    } else {\r\n      objectTo = Object.create(referenceObject);\r\n      for (var i in referenceObject) {\r\n        if (referenceObject.hasOwnProperty(i)) {\r\n          if (typeof referenceObject[i] == \"object\") {\r\n            objectTo[i] = exports.bridgeObject(referenceObject[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return objectTo;\r\n  }\r\n  else {\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * This method provides a stable sort implementation, very fast for presorted data\r\n *\r\n * @param {Array} a the array\r\n * @param {function} compare an order comparator\r\n * @returns {Array}\r\n */\r\nexports.insertSort = function (a,compare) {\r\n  for (var i = 0; i < a.length; i++) {\r\n    var k = a[i];\r\n    for (var j = i; j > 0 && compare(k,a[j - 1])<0; j--) {\r\n      a[j] = a[j - 1];\r\n    }\r\n    a[j] = k;\r\n  }\r\n  return a;\r\n}\r\n\r\n\r\n/**\r\n * This is used to set the options of subobjects in the options object.\r\n *\r\n * A requirement of these subobjects is that they have an 'enabled' element\r\n * which is optional for the user but mandatory for the program.\r\n *\r\n * The added value here of the merge is that option 'enabled' is set as required.\r\n *\r\n *\r\n * @param {object} mergeTarget   | either this.options or the options used for the groups.\r\n * @param {object} options       | options\r\n * @param {string} option        | option key in the options argument\r\n * @param {object} globalOptions | global options, passed in to determine value of option 'enabled'\r\n */\r\nexports.mergeOptions = function (mergeTarget, options, option, globalOptions = {}) {\r\n  // Local helpers\r\n  var isPresent = function(obj) {\r\n    return obj !== null && obj !== undefined;\r\n  }\r\n\r\n  var isObject = function(obj) {\r\n    return obj !== null && typeof obj === 'object';\r\n  }\r\n\r\n  // https://stackoverflow.com/a/34491287/1223531\r\n  var isEmpty = function(obj) {\r\n    for (var x in obj) { if (obj.hasOwnProperty(x)) return false; }\r\n    return true;\r\n  };\r\n\r\n  // Guards\r\n  if (!isObject(mergeTarget)) {\r\n    throw new Error('Parameter mergeTarget must be an object');\r\n  }\r\n\r\n  if (!isObject(options)) {\r\n    throw new Error('Parameter options must be an object');\r\n  }\r\n\r\n  if (!isPresent(option)) {\r\n    throw new Error('Parameter option must have a value');\r\n  }\r\n\r\n  if (!isObject(globalOptions)) {\r\n    throw new Error('Parameter globalOptions must be an object');\r\n  }\r\n\r\n\r\n  //\r\n  // Actual merge routine, separated from main logic\r\n  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.\r\n  //\r\n  var doMerge = function(target, options, option) {\r\n    if (!isObject(target[option])) {\r\n      target[option] = {};\r\n    }\r\n\r\n    let src = options[option];\r\n    let dst = target[option];\r\n    for (var prop in src) {\r\n      if (src.hasOwnProperty(prop)) {\r\n        dst[prop] = src[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Local initialization\r\n  var srcOption     = options[option];\r\n  var globalPassed  = isObject(globalOptions) && !isEmpty(globalOptions);\r\n  var globalOption  = globalPassed? globalOptions[option]: undefined;\r\n  var globalEnabled = globalOption? globalOption.enabled: undefined;\r\n\r\n\r\n  /////////////////////////////////////////\r\n  // Main routine\r\n  /////////////////////////////////////////\r\n  if (srcOption === undefined) {\r\n    return;  // Nothing to do\r\n  }\r\n\r\n\r\n  if ((typeof srcOption) === 'boolean') {\r\n    if (!isObject(mergeTarget[option])) {\r\n      mergeTarget[option] = {};\r\n    }\r\n\r\n    mergeTarget[option].enabled = srcOption;\r\n    return;\r\n  } \r\n\r\n  if (srcOption === null && !isObject(mergeTarget[option])) {\r\n    // If possible, explicit copy from globals\r\n    if (isPresent(globalOption)) {\r\n      mergeTarget[option] = Object.create(globalOption);\r\n    } else {\r\n      return;  // Nothing to do\r\n    }\r\n  }\r\n\r\n  if (!isObject(srcOption)) {\r\n    return;\r\n  }\r\n\r\n  //\r\n  // Ensure that 'enabled' is properly set. It is required internally\r\n  // Note that the value from options will always overwrite the existing value\r\n  //\r\n  let enabled = true;  // default value\r\n\r\n  if (srcOption.enabled !== undefined) {\r\n    enabled = srcOption.enabled;\r\n  } else {\r\n    // Take from globals, if present\r\n    if (globalEnabled !== undefined) {\r\n      enabled = globalOption.enabled;\r\n    }\r\n  }\r\n\r\n  doMerge(mergeTarget, options, option);\r\n  mergeTarget[option].enabled = enabled;\r\n}\r\n\r\n\r\n/**\r\n * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\r\n * this function will then iterate in both directions over this sorted list to find all visible items.\r\n *\r\n * @param {Item[]} orderedItems       | Items ordered by start\r\n * @param {function} comparator       | -1 is lower, 0 is equal, 1 is higher\r\n * @param {string} field\r\n * @param {string} field2\r\n * @returns {number}\r\n * @private\r\n */\r\nexports.binarySearchCustom = function (orderedItems, comparator, field, field2) {\r\n  var maxIterations = 10000;\r\n  var iteration = 0;\r\n  var low = 0;\r\n  var high = orderedItems.length - 1;\r\n\r\n  while (low <= high && iteration < maxIterations) {\r\n    var middle = Math.floor((low + high) / 2);\r\n\r\n    var item = orderedItems[middle];\r\n    var value = (field2 === undefined) ? item[field] : item[field][field2];\r\n\r\n    var searchResult = comparator(value);\r\n    if (searchResult == 0) { // jihaa, found a visible item!\r\n      return middle;\r\n    }\r\n    else if (searchResult == -1) {  // it is too small --> increase low\r\n      low = middle + 1;\r\n    }\r\n    else {  // it is too big --> decrease high\r\n      high = middle - 1;\r\n    }\r\n\r\n    iteration++;\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\n/**\r\n * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of\r\n * two values, we return either the one before or the one after, depending on user input\r\n * If it is found, we return the index, else -1.\r\n *\r\n * @param {Array} orderedItems\r\n * @param {{start: number, end: number}} target\r\n * @param {string} field\r\n * @param {string} sidePreference   'before' or 'after'\r\n * @param {function} comparator an optional comparator, returning -1,0,1 for <,==,>.\r\n * @returns {number}\r\n * @private\r\n */\r\nexports.binarySearchValue = function (orderedItems, target, field, sidePreference, comparator) {\r\n  var maxIterations = 10000;\r\n  var iteration = 0;\r\n  var low = 0;\r\n  var high = orderedItems.length - 1;\r\n  var prevValue, value, nextValue, middle;\r\n\r\n  comparator = comparator != undefined ? comparator : function (a, b) {\r\n    return a == b ? 0 : a < b ? -1 : 1\r\n  };\r\n\r\n  while (low <= high && iteration < maxIterations) {\r\n    // get a new guess\r\n    middle = Math.floor(0.5 * (high + low));\r\n    prevValue = orderedItems[Math.max(0, middle - 1)][field];\r\n    value = orderedItems[middle][field];\r\n    nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\r\n\r\n    if (comparator(value, target) == 0) { // we found the target\r\n      return middle;\r\n    }\r\n    else if (comparator(prevValue, target) < 0 && comparator(value, target) > 0) {  // target is in between of the previous and the current\r\n      return sidePreference == 'before' ? Math.max(0, middle - 1) : middle;\r\n    }\r\n    else if (comparator(value, target) < 0 && comparator(nextValue, target) > 0) { // target is in between of the current and the next\r\n      return sidePreference == 'before' ? middle : Math.min(orderedItems.length - 1, middle + 1);\r\n    }\r\n    else {  // didnt find the target, we need to change our boundaries.\r\n      if (comparator(value, target) < 0) { // it is too small --> increase low\r\n        low = middle + 1;\r\n      }\r\n      else {  // it is too big --> decrease high\r\n        high = middle - 1;\r\n      }\r\n    }\r\n    iteration++;\r\n  }\r\n\r\n  // didnt find anything. Return -1.\r\n  return -1;\r\n};\r\n\r\n/*\r\n * Easing Functions - inspired from http://gizma.com/easing/\r\n * only considering the t value for the range [0, 1] => [0, 1]\r\n * https://gist.github.com/gre/1650294\r\n */\r\nexports.easingFunctions = {\r\n  // no easing, no acceleration\r\n  linear: function (t) {\r\n    return t\r\n  },\r\n  // accelerating from zero velocity\r\n  easeInQuad: function (t) {\r\n    return t * t\r\n  },\r\n  // decelerating to zero velocity\r\n  easeOutQuad: function (t) {\r\n    return t * (2 - t)\r\n  },\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuad: function (t) {\r\n    return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t\r\n  },\r\n  // accelerating from zero velocity\r\n  easeInCubic: function (t) {\r\n    return t * t * t\r\n  },\r\n  // decelerating to zero velocity\r\n  easeOutCubic: function (t) {\r\n    return (--t) * t * t + 1\r\n  },\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutCubic: function (t) {\r\n    return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n  },\r\n  // accelerating from zero velocity\r\n  easeInQuart: function (t) {\r\n    return t * t * t * t\r\n  },\r\n  // decelerating to zero velocity\r\n  easeOutQuart: function (t) {\r\n    return 1 - (--t) * t * t * t\r\n  },\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuart: function (t) {\r\n    return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\r\n  },\r\n  // accelerating from zero velocity\r\n  easeInQuint: function (t) {\r\n    return t * t * t * t * t\r\n  },\r\n  // decelerating to zero velocity\r\n  easeOutQuint: function (t) {\r\n    return 1 + (--t) * t * t * t * t\r\n  },\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuint: function (t) {\r\n    return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\r\n  }\r\n};\r\n\r\nexports.getScrollBarWidth = function () {\r\n  var inner = document.createElement('p');\r\n  inner.style.width = \"100%\";\r\n  inner.style.height = \"200px\";\r\n\r\n  var outer = document.createElement('div');\r\n  outer.style.position = \"absolute\";\r\n  outer.style.top = \"0px\";\r\n  outer.style.left = \"0px\";\r\n  outer.style.visibility = \"hidden\";\r\n  outer.style.width = \"200px\";\r\n  outer.style.height = \"150px\";\r\n  outer.style.overflow = \"hidden\";\r\n  outer.appendChild (inner);\r\n\r\n  document.body.appendChild (outer);\r\n  var w1 = inner.offsetWidth;\r\n  outer.style.overflow = 'scroll';\r\n  var w2 = inner.offsetWidth;\r\n  if (w1 == w2) w2 = outer.clientWidth;\r\n\r\n  document.body.removeChild (outer);\r\n\r\n  return (w1 - w2);\r\n};\r\n\r\n\r\nexports.topMost = function (pile, accessors) {\r\n  let candidate;\r\n  if (!Array.isArray(accessors)) {\r\n    accessors = [accessors];\r\n  }\r\n  for (const member of pile) {\r\n    if (member) {\r\n      candidate = member[accessors[0]];\r\n      for (let i = 1; i < accessors.length; i++){\r\n        if (candidate) {\r\n          candidate = candidate[accessors[i]]\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n      if (typeof candidate != 'undefined') {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return candidate;\r\n};\r\n","/**\r\n * The Base class for all Nodes.\r\n */\r\nclass NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    this.body = body;\r\n    this.labelModule = labelModule;\r\n    this.setOptions(options);\r\n    this.top = undefined;\r\n    this.left = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.radius = undefined;\r\n    this.margin = undefined;\r\n    this.refreshNeeded = true;\r\n    this.boundingBox = {top: 0, left: 0, right: 0, bottom: 0};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Label} labelModule\r\n   * @private\r\n   */\r\n  _setMargins(labelModule) {\r\n    this.margin = {};\r\n    if (this.options.margin) {\r\n      if (typeof this.options.margin == 'object') {\r\n        this.margin.top = this.options.margin.top;\r\n        this.margin.right = this.options.margin.right;\r\n        this.margin.bottom = this.options.margin.bottom;\r\n        this.margin.left = this.options.margin.left;\r\n      } else {\r\n        this.margin.top = this.options.margin;\r\n        this.margin.right = this.options.margin;\r\n        this.margin.bottom = this.options.margin;\r\n        this.margin.left = this.options.margin;\r\n      }\r\n    }\r\n    labelModule.adjustSizes(this.margin)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _distanceToBorder(ctx,angle) {\r\n    var borderWidth = this.options.borderWidth;\r\n    this.resize(ctx);\r\n    return Math.min(\r\n        Math.abs(this.width / 2 / Math.cos(angle)),\r\n        Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  enableShadow(ctx, values) {\r\n    if (values.shadow) {\r\n      ctx.shadowColor = values.shadowColor;\r\n      ctx.shadowBlur = values.shadowSize;\r\n      ctx.shadowOffsetX = values.shadowX;\r\n      ctx.shadowOffsetY = values.shadowY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  disableShadow(ctx, values) {\r\n    if (values.shadow) {\r\n      ctx.shadowColor = 'rgba(0,0,0,0)';\r\n      ctx.shadowBlur = 0;\r\n      ctx.shadowOffsetX = 0;\r\n      ctx.shadowOffsetY = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  enableBorderDashes(ctx, values) {\r\n    if (values.borderDashes !== false) {\r\n      if (ctx.setLineDash !== undefined) {\r\n        let dashes = values.borderDashes;\r\n        if (dashes === true) {\r\n          dashes = [5,15]\r\n        }\r\n        ctx.setLineDash(dashes);\r\n      }\r\n      else {\r\n        console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\r\n        this.options.shapeProperties.borderDashes = false;\r\n        values.borderDashes = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  disableBorderDashes(ctx, values) {\r\n    if (values.borderDashes !== false) {\r\n      if (ctx.setLineDash !== undefined) {\r\n        ctx.setLineDash([0]);\r\n      }\r\n      else {\r\n        console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\r\n        this.options.shapeProperties.borderDashes = false;\r\n        values.borderDashes = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if the shape of a node needs to be recalculated.\r\n   *\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @returns {boolean}\r\n   * @protected\r\n   */\r\n  needsRefresh(selected, hover) {\r\n    if (this.refreshNeeded === true) {\r\n      // This is probably not the best location to reset this member.\r\n      // However, in the current logic, it is the most convenient one.\r\n      this.refreshNeeded = false;\r\n      return true;\r\n    }\r\n\r\n    return  (this.width === undefined) || (this.labelModule.differentState(selected, hover));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  initContextForDraw(ctx, values) {\r\n    var borderWidth = values.borderWidth / this.body.view.scale;\r\n\r\n    ctx.lineWidth = Math.min(this.width, borderWidth);\r\n    ctx.strokeStyle = values.borderColor;\r\n    ctx.fillStyle = values.color;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  performStroke(ctx, values) {\r\n    var borderWidth = values.borderWidth / this.body.view.scale;\r\n\r\n    //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\r\n    ctx.save();\r\n    // if borders are zero width, they will be drawn with width 1 by default. This prevents that\r\n    if (borderWidth > 0) {\r\n      this.enableBorderDashes(ctx, values);\r\n      //draw the border\r\n      ctx.stroke();\r\n      //disable dashed border for other elements\r\n      this.disableBorderDashes(ctx, values);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  performFill(ctx, values) {\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n    // draw the background\r\n    ctx.fill();\r\n    // disable shadows for other elements.\r\n    this.disableShadow(ctx, values);\r\n\r\n    this.performStroke(ctx, values);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {number} margin\r\n   * @private\r\n   */\r\n  _addBoundingBoxMargin(margin) {\r\n    this.boundingBox.left   -= margin;\r\n    this.boundingBox.top    -= margin;\r\n    this.boundingBox.bottom += margin;\r\n    this.boundingBox.right  += margin;\r\n  }\r\n\r\n\r\n  /**\r\n   * Actual implementation of this method call.\r\n   *\r\n   * Doing it like this makes it easier to override\r\n   * in the child classes.\r\n   *\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @private\r\n   */\r\n  _updateBoundingBox(x, y, ctx, selected, hover) {\r\n    if (ctx !== undefined) {\r\n      this.resize(ctx, selected, hover);\r\n    }\r\n\r\n    this.left = x - this.width / 2;\r\n    this.top  = y - this.height/ 2;\r\n\r\n    this.boundingBox.left   = this.left;\r\n    this.boundingBox.top    = this.top;\r\n    this.boundingBox.bottom = this.top + this.height;\r\n    this.boundingBox.right  = this.left + this.width;\r\n  }\r\n\r\n\r\n  /**\r\n   * Default implementation of this method call.\r\n   * This acts as a stub which can be overridden.\r\n   *\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   */\r\n  updateBoundingBox(x, y, ctx, selected, hover) {\r\n    this._updateBoundingBox(x, y, ctx, selected, hover);\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine the dimensions to use for nodes with an internal label\r\n   *\r\n   * Currently, these are: Circle, Ellipse, Database, Box\r\n   * The other nodes have external labels, and will not call this method\r\n   *\r\n   * If there is no label, decent default values are supplied.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   * @returns {{width:number, height:number}}\r\n   */\r\n  getDimensionsFromLabel(ctx, selected, hover) {\r\n    // NOTE: previously 'textSize' was not put in 'this' for Ellipse\r\n    // TODO: examine the consequences.\r\n    this.textSize = this.labelModule.getTextSize(ctx, selected, hover);\r\n    var width  = this.textSize.width;\r\n    var height = this.textSize.height;\r\n\r\n    const DEFAULT_SIZE = 14;\r\n    if (width === 0) {\r\n      // This happens when there is no label text set\r\n      width = DEFAULT_SIZE;  // use a decent default\r\n      height = DEFAULT_SIZE; // if width zero, then height also always zero\r\n    }\r\n\r\n    return {width:width, height:height};\r\n  }\r\n}\r\n\r\nexport default NodeBase;\r\n","import NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * Base class for constructing Node/Cluster Shapes.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass ShapeBase extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   * @param {Object} [values={size: this.options.size}]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover, values = { size: this.options.size }) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      this.labelModule.getTextSize(ctx, selected, hover);\r\n      var size = 2 * values.size;\r\n      this.width = size;\r\n      this.height = size;\r\n      this.radius = 0.5*this.width;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {string} shape\r\n   * @param {number} sizeMultiplier - Unused! TODO: Remove next major release\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @private\r\n   */\r\n  _drawShape(ctx, shape, sizeMultiplier, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover, values);\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    this.initContextForDraw(ctx, values);\r\n    ctx[shape](x, y, values.size);\r\n    this.performFill(ctx, values);\r\n\r\n    if (this.options.label !== undefined) {\r\n      // Need to call following here in order to ensure value for `this.labelModule.size.height`\r\n      this.labelModule.calculateLabelSize(ctx, selected, hover, x, y, 'hanging')\r\n      let yLabel = y + 0.5 * this.height + 0.5 * this.labelModule.size.height;\r\n      this.labelModule.draw(ctx, x, yLabel, selected, hover, 'hanging');\r\n    }\r\n\r\n    this.updateBoundingBox(x,y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  updateBoundingBox(x, y) {\r\n    this.boundingBox.top = y - this.options.size;\r\n    this.boundingBox.left = x - this.options.size;\r\n    this.boundingBox.right = x + this.options.size;\r\n    this.boundingBox.bottom = y + this.options.size;\r\n\r\n    if (this.options.label !== undefined && this.labelModule.size.width > 0) {\r\n      this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\r\n      this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\r\n      this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ShapeBase;\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));","/**\r\n * Setup a mock hammer.js object, for unit testing.\r\n *\r\n * Inspiration: https://github.com/uber/deck.gl/pull/658\r\n *\r\n * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}\r\n */\r\nfunction hammerMock() {\r\n  const noop = () => {};\r\n\r\n  return {\r\n    on: noop,\r\n    off: noop,\r\n    destroy: noop,\r\n    emit: noop,\r\n\r\n    get: function(m) {\t//eslint-disable-line no-unused-vars\r\n      return {\r\n        set: noop\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n\r\nif (typeof window !== 'undefined') {\r\n  var propagating = require('propagating-hammerjs');\r\n  var Hammer = window['Hammer'] || require('hammerjs');\r\n  module.exports = propagating(Hammer, {\r\n    preventDefault: 'mouse'\r\n  });\r\n}\r\nelse {\r\n  module.exports = function () {\r\n    // hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.\r\n    return hammerMock();\r\n  }\r\n}\r\n","import NodeBase from './NodeBase';\r\n\r\n/**\r\n * NOTE: This is a bad base class\r\n *\r\n * Child classes are:\r\n *\r\n *   Image       - uses *only* image methods\r\n *   Circle      - uses *only* _drawRawCircle\r\n *   CircleImage - uses all\r\n *\r\n * TODO: Refactor, move _drawRawCircle to different module, derive Circle from NodeBase\r\n *       Rename this to ImageBase\r\n *       Consolidate common code in Image and CircleImage to base class\r\n *\r\n * @extends NodeBase\r\n */\r\nclass CircleImageBase extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n    this.labelOffset = 0;\r\n    this.selected = false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   * @param {Object} [imageObj]\r\n   * @param {Object} [imageObjAlt]\r\n   */\r\n  setOptions(options, imageObj, imageObjAlt) {\r\n    this.options = options;\r\n\r\n    if (!(imageObj === undefined && imageObjAlt === undefined)) {\r\n      this.setImages(imageObj, imageObjAlt);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the images for this node.\r\n   *\r\n   * The images can be updated after the initial setting of options;\r\n   * therefore, this method needs to be reentrant. \r\n   *\r\n   * For correct working in error cases, it is necessary to properly set\r\n   * field 'nodes.brokenImage' in the options.\r\n   *\r\n   * @param {Image} imageObj  required; main image to show for this node\r\n   * @param {Image|undefined} imageObjAlt optional; image to show when node is selected\r\n   */\r\n  setImages(imageObj, imageObjAlt) {\r\n    if (imageObjAlt && this.selected) {\r\n      this.imageObj    = imageObjAlt;\r\n      this.imageObjAlt = imageObj;\r\n    } else {\r\n      this.imageObj    = imageObj;\r\n      this.imageObjAlt = imageObjAlt;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set selection and switch between the base and the selected image.\r\n   *\r\n   * Do the switch only if imageObjAlt exists.\r\n   *\r\n   * @param {boolean} selected value of new selected state for current node\r\n   */\r\n  switchImages(selected) {\r\n    var selection_changed = ((selected && !this.selected) || (!selected && this.selected));\r\n    this.selected = selected;    // Remember new selection\r\n\r\n    if (this.imageObjAlt !== undefined && selection_changed) {\r\n      let imageTmp = this.imageObj;\r\n      this.imageObj = this.imageObjAlt;\r\n      this.imageObjAlt = imageTmp;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjust the node dimensions for a loaded image.\r\n   *\r\n   * Pre: this.imageObj is valid\r\n   */\r\n  _resizeImage() {\r\n    var width, height;\r\n\r\n    if (this.options.shapeProperties.useImageSize === false) {\r\n      // Use the size property\r\n      var ratio_width  = 1;\r\n      var ratio_height = 1;\r\n\r\n      // Only calculate the proper ratio if both width and height not zero\r\n      if (this.imageObj.width && this.imageObj.height) {\r\n        if (this.imageObj.width > this.imageObj.height) {\r\n          ratio_width = this.imageObj.width / this.imageObj.height;\r\n        }\r\n        else {\r\n          ratio_height = this.imageObj.height / this.imageObj.width;\r\n        }\r\n      }\r\n\r\n      width  = this.options.size * 2 * ratio_width;\r\n      height = this.options.size * 2 * ratio_height;\r\n    }\r\n    else {\r\n      // Use the image size\r\n      width  = this.imageObj.width;\r\n      height = this.imageObj.height;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.radius = 0.5 * this.width;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @private\r\n   */\r\n  _drawRawCircle(ctx, x, y, values) {\r\n    this.initContextForDraw(ctx, values);\r\n    ctx.circle(x, y, values.size);\r\n    this.performFill(ctx, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @private\r\n   */\r\n  _drawImageAtPosition(ctx, values) {\r\n    if (this.imageObj.width != 0) {\r\n      // draw the image\r\n      ctx.globalAlpha = 1.0;\r\n\r\n      // draw shadow if enabled\r\n      this.enableShadow(ctx, values);\r\n\r\n      let factor = 1;\r\n      if (this.options.shapeProperties.interpolation === true) {\r\n        factor = (this.imageObj.width / this.width) / this.body.view.scale;\r\n      }\r\n\r\n      this.imageObj.drawImageAtPosition(ctx, factor, this.left, this.top, this.width, this.height);\r\n\r\n      // disable shadows for other elements.\r\n      this.disableShadow(ctx, values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @private\r\n   */\r\n  _drawImageLabel(ctx, x, y, selected, hover) {\r\n    var yLabel;\r\n    var offset = 0;\r\n\r\n    if (this.height !== undefined) {\r\n      offset = this.height * 0.5;\r\n      var labelDimensions = this.labelModule.getTextSize(ctx, selected, hover);\r\n      if (labelDimensions.lineCount >= 1) {\r\n        offset += labelDimensions.height / 2;\r\n      }\r\n    }\r\n\r\n    yLabel = y + offset;\r\n\r\n    if (this.options.label) {\r\n      this.labelOffset = offset;\r\n    }\r\n    this.labelModule.draw(ctx, x, yLabel, selected, hover, 'hanging');\r\n  }\r\n}\r\n\r\nexport default CircleImageBase;\r\n","import EdgeBase from './EdgeBase'\r\n\r\n/**\r\n * The Base Class for all Bezier edges. Bezier curves are used to model smooth\r\n * gradual curves in paths between nodes.\r\n *\r\n * @extends EdgeBase\r\n */\r\nclass BezierEdgeBase extends EdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   * This function uses binary search to look for the point where the bezier curve crosses the border of the node.\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Node} viaNode\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _findBorderPositionBezier(nearNode, ctx, viaNode = this._getViaCoordinates()) {\r\n    var maxIterations = 10;\r\n    var iteration = 0;\r\n    var low = 0;\r\n    var high = 1;\r\n    var pos, angle, distanceToBorder, distanceToPoint, difference;\r\n    var threshold = 0.2;\r\n    var node = this.to;\r\n    var from = false;\r\n    if (nearNode.id === this.from.id) {\r\n      node = this.from;\r\n      from = true;\r\n    }\r\n\r\n    while (low <= high && iteration < maxIterations) {\r\n      var middle = (low + high) * 0.5;\r\n\r\n      pos = this.getPoint(middle, viaNode);\r\n      angle = Math.atan2((node.y - pos.y), (node.x - pos.x));\r\n      distanceToBorder = node.distanceToBorder(ctx, angle);\r\n      distanceToPoint = Math.sqrt(Math.pow(pos.x - node.x, 2) + Math.pow(pos.y - node.y, 2));\r\n      difference = distanceToBorder - distanceToPoint;\r\n      if (Math.abs(difference) < threshold) {\r\n        break; // found\r\n      }\r\n      else if (difference < 0) { // distance to nodes is larger than distance to border --> t needs to be bigger if we're looking at the to node.\r\n        if (from === false) {\r\n          low = middle;\r\n        }\r\n        else {\r\n          high = middle;\r\n        }\r\n      }\r\n      else {\r\n        if (from === false) {\r\n          high = middle;\r\n        }\r\n        else {\r\n          low = middle;\r\n        }\r\n      }\r\n\r\n      iteration++;\r\n    }\r\n    pos.t = middle;\r\n\r\n    return pos;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Calculate the distance between a point (x3,y3) and a line segment from\r\n   * (x1,y1) to (x2,y2).\r\n   * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\r\n   * @param {number} x1 from x\r\n   * @param {number} y1 from y\r\n   * @param {number} x2 to x\r\n   * @param {number} y2 to y\r\n   * @param {number} x3 point to check x\r\n   * @param {number} y3 point to check y\r\n   * @param {Node} via\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via) { // x3,y3 is the point\r\n    let minDistance = 1e9;\r\n    let distance;\r\n    let i, t, x, y;\r\n    let lastX = x1;\r\n    let lastY = y1;\r\n    for (i = 1; i < 10; i++) {\r\n      t = 0.1 * i;\r\n      x = Math.pow(1 - t, 2) * x1 + (2 * t * (1 - t)) * via.x + Math.pow(t, 2) * x2;\r\n      y = Math.pow(1 - t, 2) * y1 + (2 * t * (1 - t)) * via.y + Math.pow(t, 2) * y2;\r\n      if (i > 0) {\r\n        distance = this._getDistanceToLine(lastX, lastY, x, y, x3, y3);\r\n        minDistance = distance < minDistance ? distance : minDistance;\r\n      }\r\n      lastX = x;\r\n      lastY = y;\r\n    }\r\n\r\n    return minDistance;\r\n  }\r\n\r\n\r\n  /**\r\n   * Draw a bezier curve between two nodes\r\n   *\r\n   * The method accepts zero, one or two control points.\r\n   * Passing zero control points just draws a straight line\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Object}           values   | options for shadow drawing\r\n   * @param {Object|undefined} viaNode1 | first control point for curve drawing\r\n   * @param {Object|undefined} viaNode2 | second control point for curve drawing\r\n   *\r\n   * @protected\r\n   */\r\n  _bezierCurve(ctx, values, viaNode1, viaNode2) {\r\n    var hasNode1 = (viaNode1 !== undefined && viaNode1.x !== undefined);\r\n    var hasNode2 = (viaNode2 !== undefined && viaNode2.x !== undefined);\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\r\n\r\n    if (hasNode1 && hasNode2) {\r\n      ctx.bezierCurveTo(viaNode1.x, viaNode1.y, viaNode2.x, viaNode2.y, this.toPoint.x, this.toPoint.y);\r\n    } else if (hasNode1) {\r\n      ctx.quadraticCurveTo(viaNode1.x, viaNode1.y, this.toPoint.x, this.toPoint.y);\r\n    } else {\r\n      // fallback to normal straight edge\r\n      ctx.lineTo(this.toPoint.x, this.toPoint.y);\r\n    }\r\n\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n    ctx.stroke();\r\n    this.disableShadow(ctx, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {*|{x, y}|{x: undefined, y: undefined}}\r\n   */\r\n  getViaNode() {\r\n    return this._getViaCoordinates();\r\n  }\r\n}\r\n\r\nexport default BezierEdgeBase;\r\n","var util = require('./util');\r\nvar Queue = require('./Queue');\r\n\r\n/**\r\n * DataSet\r\n * // TODO: add a DataSet constructor DataSet(data, options)\r\n *\r\n * Usage:\r\n *     var dataSet = new DataSet({\r\n *         fieldId: '_id',\r\n *         type: {\r\n *             // ...\r\n *         }\r\n *     });\r\n *\r\n *     dataSet.add(item);\r\n *     dataSet.add(data);\r\n *     dataSet.update(item);\r\n *     dataSet.update(data);\r\n *     dataSet.remove(id);\r\n *     dataSet.remove(ids);\r\n *     var data = dataSet.get();\r\n *     var data = dataSet.get(id);\r\n *     var data = dataSet.get(ids);\r\n *     var data = dataSet.get(ids, options, data);\r\n *     dataSet.clear();\r\n *\r\n * A data set can:\r\n * - add/remove/update data\r\n * - gives triggers upon changes in the data\r\n * - can  import/export data in various data formats\r\n *\r\n * @param {Array} [data]    Optional array with initial data\r\n * @param {Object} [options]   Available options:\r\n *                             {string} fieldId Field name of the id in the\r\n *                                              items, 'id' by default.\r\n *                             {Object.<string, string} type\r\n *                                              A map with field names as key,\r\n *                                              and the field type as value.\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n * @constructor DataSet\r\n */\r\nfunction DataSet (data, options) {\r\n  // correctly read optional arguments\r\n  if (data && !Array.isArray(data)) {\r\n    options = data;\r\n    data = null;\r\n  }\r\n\r\n  this._options = options || {};\r\n  this._data = {};                                 // map with data indexed by id\r\n  this.length = 0;                                 // number of items in the DataSet\r\n  this._fieldId = this._options.fieldId || 'id';   // name of the field containing id\r\n  this._type = {};                                 // internal field types (NOTE: this can differ from this._options.type)\r\n\r\n  // all variants of a Date are internally stored as Date, so we can convert\r\n  // from everything to everything (also from ISODate to Number for example)\r\n  if (this._options.type) {\r\n    var fields = Object.keys(this._options.type);\r\n    for (var i = 0, len = fields.length; i < len; i++) {\r\n      var field = fields[i];\r\n      var value = this._options.type[field];\r\n      if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {\r\n        this._type[field] = 'Date';\r\n      }\r\n      else {\r\n        this._type[field] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._subscribers = {};  // event subscribers\r\n\r\n  // add initial data when provided\r\n  if (data) {\r\n    this.add(data);\r\n  }\r\n\r\n  this.setOptions(options);\r\n}\r\n\r\n/**\r\n * @param {Object} options   Available options:\r\n *                             {Object} queue   Queue changes to the DataSet,\r\n *                                              flush them all at once.\r\n *                                              Queue options:\r\n *                                              - {number} delay  Delay in ms, null by default\r\n *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\r\n */\r\nDataSet.prototype.setOptions = function(options) {\r\n  if (options && options.queue !== undefined) {\r\n    if (options.queue === false) {\r\n      // delete queue if loaded\r\n      if (this._queue) {\r\n        this._queue.destroy();\r\n        delete this._queue;\r\n      }\r\n    }\r\n    else {\r\n      // create queue and update its options\r\n      if (!this._queue) {\r\n        this._queue = Queue.extend(this, {\r\n          replace: ['add', 'update', 'remove']\r\n        });\r\n      }\r\n\r\n      if (typeof options.queue === 'object') {\r\n        this._queue.setOptions(options.queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Subscribe to an event, add an event listener\r\n * @param {string} event        Event name. Available events: 'add', 'update',\r\n *                              'remove'\r\n * @param {function} callback   Callback method. Called with three parameters:\r\n *                                  {string} event\r\n *                                  {Object | null} params\r\n *                                  {string | number} senderId\r\n */\r\nDataSet.prototype.on = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (!subscribers) {\r\n    subscribers = [];\r\n    this._subscribers[event] = subscribers;\r\n  }\r\n\r\n  subscribers.push({\r\n    callback: callback\r\n  });\r\n};\r\n\r\n/**\r\n * Unsubscribe from an event, remove an event listener\r\n * @param {string} event\r\n * @param {function} callback\r\n */\r\nDataSet.prototype.off = function(event, callback) {\r\n  var subscribers = this._subscribers[event];\r\n  if (subscribers) {\r\n    this._subscribers[event] = subscribers.filter(listener => listener.callback != callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Trigger an event\r\n * @param {string} event\r\n * @param {Object | null} params\r\n * @param {string} [senderId]       Optional id of the sender.\r\n * @private\r\n */\r\nDataSet.prototype._trigger = function (event, params, senderId) {\r\n  if (event == '*') {\r\n    throw new Error('Cannot trigger event *');\r\n  }\r\n\r\n  var subscribers = [];\r\n  if (event in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers[event]);\r\n  }\r\n  if ('*' in this._subscribers) {\r\n    subscribers = subscribers.concat(this._subscribers['*']);\r\n  }\r\n\r\n  for (var i = 0, len = subscribers.length; i < len; i++) {\r\n    var subscriber = subscribers[i];\r\n    if (subscriber.callback) {\r\n      subscriber.callback(event, params, senderId || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add data.\r\n * Adding an item will fail when there already is an item with the same id.\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} addedIds      Array with the ids of the added items\r\n */\r\nDataSet.prototype.add = function (data, senderId) {\r\n  var addedIds = [],\r\n      id,\r\n      me = this;\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      id = me._addItem(data[i]);\r\n      addedIds.push(id);\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    id = me._addItem(data);\r\n    addedIds.push(id);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n\r\n  return addedIds;\r\n};\r\n\r\n/**\r\n * Update existing items. When an item does not exist, it will be created\r\n * @param {Object | Array} data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} updatedIds     The ids of the added or updated items\r\n * @throws {Error} Unknown Datatype\r\n */\r\nDataSet.prototype.update = function (data, senderId) {\r\n  var addedIds = [];\r\n  var updatedIds = [];\r\n  var oldData = [];\r\n  var updatedData = [];\r\n  var me = this;\r\n  var fieldId = me._fieldId;\r\n\r\n  var addOrUpdate = function (item) {\r\n    var id = item[fieldId];\r\n    if (me._data[id]) {\r\n      var oldItem = util.extend({}, me._data[id]);\r\n      // update item\r\n      id = me._updateItem(item);\r\n      updatedIds.push(id);\r\n      updatedData.push(item);\r\n      oldData.push(oldItem);\r\n    }\r\n    else {\r\n      // add new item\r\n      id = me._addItem(item);\r\n      addedIds.push(id);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(data)) {\r\n    // Array\r\n    for (var i = 0, len = data.length; i < len; i++) {\r\n      if (data[i] && typeof data[i] === 'object'){\r\n        addOrUpdate(data[i]);\r\n      } else {\r\n        console.warn('Ignoring input item, which is not an object at index ' + i);\r\n      }\r\n    }\r\n  }\r\n  else if (data && typeof data === 'object') {\r\n    // Single item\r\n    addOrUpdate(data);\r\n  }\r\n  else {\r\n    throw new Error('Unknown dataType');\r\n  }\r\n\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds}, senderId);\r\n  }\r\n  if (updatedIds.length) {\r\n    var props = { items: updatedIds, oldData: oldData, data: updatedData };\r\n    // TODO: remove deprecated property 'data' some day\r\n    //Object.defineProperty(props, 'data', {\r\n    //  'get': (function() {\r\n    //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\r\n    //    return updatedData;\r\n    //  }).bind(this)\r\n    //});\r\n    this._trigger('update', props, senderId);\r\n  }\r\n\r\n  return addedIds.concat(updatedIds);\r\n};\r\n\r\n/**\r\n * Get a data item or multiple items.\r\n *\r\n * Usage:\r\n *\r\n *     get()\r\n *     get(options: Object)\r\n *\r\n *     get(id: number | string)\r\n *     get(id: number | string, options: Object)\r\n *\r\n *     get(ids: number[] | string[])\r\n *     get(ids: number[] | string[], options: Object)\r\n *\r\n * Where:\r\n *\r\n * {number | string} id         The id of an item\r\n * {number[] | string{}} ids    An array with ids of items\r\n * {Object} options             An Object with options. Available options:\r\n * {string} [returnType]        Type of data to be returned.\r\n *                              Can be 'Array' (default) or 'Object'.\r\n * {Object.<string, string>} [type]\r\n * {string[]} [fields]          field names to be returned\r\n * {function} [filter]          filter items\r\n * {string | function} [order]  Order the items by a field name or custom sort function.\r\n * @param {Array} args\r\n * @returns {DataSet}\r\n * @throws Error\r\n */\r\nDataSet.prototype.get = function (args) {  // eslint-disable-line no-unused-vars\r\n  var me = this;\r\n\r\n  // parse the arguments\r\n  var id, ids, options;\r\n  var firstType = util.getType(arguments[0]);\r\n  if (firstType == 'String' || firstType == 'Number') {\r\n    // get(id [, options])\r\n    id = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else if (firstType == 'Array') {\r\n    // get(ids [, options])\r\n    ids = arguments[0];\r\n    options = arguments[1];\r\n  }\r\n  else {\r\n    // get([, options])\r\n    options = arguments[0];\r\n  }\r\n\r\n  // determine the return type\r\n  var returnType;\r\n  if (options && options.returnType) {\r\n    var allowedValues = ['Array', 'Object'];\r\n    returnType = allowedValues.indexOf(options.returnType) == -1 ? 'Array' : options.returnType;\r\n  }\r\n  else {\r\n    returnType = 'Array';\r\n  }\r\n\r\n  // build options\r\n  var type = options && options.type || this._options.type;\r\n  var filter = options && options.filter;\r\n  var items = [], item, itemIds, itemId, i, len;\r\n\r\n  // convert items\r\n  if (id != undefined) {\r\n    // return a single item\r\n    item = me._getItem(id, type);\r\n    if (item && filter && !filter(item)) {\r\n      item = null;\r\n    }\r\n  }\r\n  else if (ids != undefined) {\r\n    // return a subset of items\r\n    for (i = 0, len = ids.length; i < len; i++) {\r\n      item = me._getItem(ids[i], type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // return all items\r\n    itemIds = Object.keys(this._data);\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      itemId = itemIds[i];\r\n      item = me._getItem(itemId, type);\r\n      if (!filter || filter(item)) {\r\n        items.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  // order the results\r\n  if (options && options.order && id == undefined) {\r\n    this._sort(items, options.order);\r\n  }\r\n\r\n  // filter fields of the items\r\n  if (options && options.fields) {\r\n    var fields = options.fields;\r\n    if (id != undefined) {\r\n      item = this._filterFields(item, fields);\r\n    }\r\n    else {\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        items[i] = this._filterFields(items[i], fields);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return the results\r\n  if (returnType == 'Object') {\r\n    var result = {},\r\n        resultant;\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      resultant = items[i];\r\n      result[resultant.id] = resultant;\r\n    }\r\n    return result;\r\n  }\r\n  else {\r\n    if (id != undefined) {\r\n      // a single item\r\n      return item;\r\n    }\r\n    else {\r\n      // just return our array\r\n      return items;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get ids of all items or from a filtered set of items.\r\n * @param {Object} [options]    An Object with options. Available options:\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Array.<string|number>} ids\r\n */\r\nDataSet.prototype.getIds = function (options) {\r\n  var data = this._data,\r\n      filter = options && options.filter,\r\n      order = options && options.order,\r\n      type = options && options.type || this._options.type,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item,\r\n      items,\r\n      ids = [];\r\n\r\n  if (filter) {\r\n    // get filtered items\r\n    if (order) {\r\n      // create ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          items.push(item);\r\n        }\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = this._getItem(id, type);\r\n        if (filter(item)) {\r\n          ids.push(item[this._fieldId]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // get all items\r\n    if (order) {\r\n      // create an ordered list\r\n      items = [];\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        items.push(data[id]);\r\n      }\r\n\r\n      this._sort(items, order);\r\n\r\n      for (i = 0, len = items.length; i < len; i++) {\r\n        ids.push(items[i][this._fieldId]);\r\n      }\r\n    }\r\n    else {\r\n      // create unordered list\r\n      for (i = 0, len = itemIds.length; i < len; i++) {\r\n        id = itemIds[i];\r\n        item = data[id];\r\n        ids.push(item[this._fieldId]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Returns the DataSet itself. Is overwritten for example by the DataView,\r\n * which returns the DataSet it is connected to instead.\r\n * @returns {DataSet}\r\n */\r\nDataSet.prototype.getDataSet = function () {\r\n  return this;\r\n};\r\n\r\n/**\r\n * Execute a callback function for every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n */\r\nDataSet.prototype.forEach = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      item,\r\n      id;\r\n\r\n  if (options && options.order) {\r\n    // execute forEach on ordered list\r\n    var items = this.get(options);\r\n\r\n    for (i = 0, len = items.length; i < len; i++) {\r\n      item = items[i];\r\n      id = item[this._fieldId];\r\n      callback(item, id);\r\n    }\r\n  }\r\n  else {\r\n    // unordered\r\n    for (i = 0, len = itemIds.length; i < len; i++) {\r\n      id = itemIds[i];\r\n      item = this._getItem(id, type);\r\n      if (!filter || filter(item)) {\r\n        callback(item, id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Map every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Object[]} mappedItems\r\n */\r\nDataSet.prototype.map = function (callback, options) {\r\n  var filter = options && options.filter,\r\n      type = options && options.type || this._options.type,\r\n      mappedItems = [],\r\n      data = this._data,\r\n      itemIds = Object.keys(data),\r\n      i,\r\n      len,\r\n      id,\r\n      item;\r\n\r\n  // convert and filter items\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    id = itemIds[i];\r\n    item = this._getItem(id, type);\r\n    if (!filter || filter(item)) {\r\n      mappedItems.push(callback(item, id));\r\n    }\r\n  }\r\n\r\n  // order items\r\n  if (options && options.order) {\r\n    this._sort(mappedItems, options.order);\r\n  }\r\n\r\n  return mappedItems;\r\n};\r\n\r\n/**\r\n * Filter the fields of an item\r\n * @param {Object | null} item\r\n * @param {string[]} fields     Field names\r\n * @return {Object | null} filteredItem or null if no item is provided\r\n * @private\r\n */\r\nDataSet.prototype._filterFields = function (item, fields) {\r\n  if (!item) { // item is null\r\n    return item;\r\n  }\r\n\r\n  var filteredItem = {},\r\n      itemFields = Object.keys(item),\r\n      len = itemFields.length,\r\n      i,\r\n      field;\r\n\r\n  if(Array.isArray(fields)){\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.indexOf(field) != -1) {\r\n        filteredItem[field] = item[field];\r\n      }\r\n    }\r\n  }else{\r\n    for (i = 0; i < len; i++) {\r\n      field = itemFields[i];\r\n      if (fields.hasOwnProperty(field)) {\r\n        filteredItem[fields[field]] = item[field];\r\n      }\r\n    }\r\n  }\r\n\r\n  return filteredItem;\r\n};\r\n\r\n/**\r\n * Sort the provided array with items\r\n * @param {Object[]} items\r\n * @param {string | function} order      A field name or custom sort function.\r\n * @private\r\n */\r\nDataSet.prototype._sort = function (items, order) {\r\n  if (util.isString(order)) {\r\n    // order by provided field name\r\n    var name = order; // field name\r\n    items.sort(function (a, b) {\r\n      var av = a[name];\r\n      var bv = b[name];\r\n      return (av > bv) ? 1 : ((av < bv) ? -1 : 0);\r\n    });\r\n  }\r\n  else if (typeof order === 'function') {\r\n    // order by sort function\r\n    items.sort(order);\r\n  }\r\n  // TODO: extend order by an Object {field:string, direction:string}\r\n  //       where direction can be 'asc' or 'desc'\r\n  else {\r\n    throw new TypeError('Order must be a function or a string');\r\n  }\r\n};\r\n\r\n/**\r\n * Remove an object by pointer or by id\r\n * @param {string | number | Object | Array.<string|number>} id Object or id, or an array with\r\n *                                              objects or ids to be removed\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds\r\n */\r\nDataSet.prototype.remove = function (id, senderId) {\r\n  var removedIds = [],\r\n      removedItems = [],\r\n      ids = [],\r\n      i, len, itemId, item;\r\n\r\n  // force everything to be an array for simplicity\r\n  ids = Array.isArray(id) ? id : [id];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    item = this._remove(ids[i]);\r\n    if (item) {\r\n      itemId = item[this._fieldId];\r\n      if (itemId != undefined) {\r\n        removedIds.push(itemId);\r\n        removedItems.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (removedIds.length) {\r\n    this._trigger('remove', {items: removedIds, oldData: removedItems}, senderId);\r\n  }\r\n\r\n  return removedIds;\r\n};\r\n\r\n/**\r\n * Remove an item by its id\r\n * @param {number | string | Object} id   id or item\r\n * @returns {number | string | null} id\r\n * @private\r\n */\r\nDataSet.prototype._remove = function (id) {\r\n  var item,\r\n      ident;\r\n\r\n  // confirm the id to use based on the args type\r\n  if (util.isNumber(id) || util.isString(id)) {\r\n    ident = id;\r\n  }\r\n  else if (id && typeof id === 'object') {\r\n    ident = id[this._fieldId]; // look for the identifier field using _fieldId\r\n  }\r\n\r\n  // do the remove if the item is found\r\n  if (ident !== undefined && this._data[ident]) {\r\n    item = this._data[ident];\r\n    delete this._data[ident];\r\n    this.length--;\r\n    return item;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Clear the data\r\n * @param {string} [senderId] Optional sender id\r\n * @return {Array.<string|number>} removedIds    The ids of all removed items\r\n */\r\nDataSet.prototype.clear = function (senderId) {\r\n  var i, len;\r\n  var ids = Object.keys(this._data);\r\n  var items = [];\r\n\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    items.push(this._data[ids[i]]);\r\n  }\r\n\r\n  this._data = {};\r\n  this.length = 0;\r\n\r\n  this._trigger('remove', {items: ids, oldData: items}, senderId);\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Find the item with maximum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.max = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      max = null,\r\n      maxField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!max || itemField > maxField)) {\r\n      max = item;\r\n      maxField = itemField;\r\n    }\r\n  }\r\n\r\n  return max;\r\n};\r\n\r\n/**\r\n * Find the item with minimum value of a specified field\r\n * @param {string} field\r\n * @return {Object | null} item  Item containing max value, or null if no items\r\n */\r\nDataSet.prototype.min = function (field) {\r\n  var data = this._data,\r\n      itemIds = Object.keys(data),\r\n      min = null,\r\n      minField = null,\r\n      i,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var itemField = item[field];\r\n    if (itemField != null && (!min || itemField < minField)) {\r\n      min = item;\r\n      minField = itemField;\r\n    }\r\n  }\r\n\r\n  return min;\r\n};\r\n\r\n/**\r\n * Find all distinct values of a specified field\r\n * @param {string} field\r\n * @return {Array} values  Array containing all distinct values. If data items\r\n *                         do not contain the specified field are ignored.\r\n *                         The returned array is unordered.\r\n */\r\nDataSet.prototype.distinct = function (field) {\r\n  var data = this._data;\r\n  var itemIds = Object.keys(data);\r\n  var values = [];\r\n  var fieldType = this._options.type && this._options.type[field] || null;\r\n  var count = 0;\r\n  var i,\r\n      j,\r\n      len;\r\n\r\n  for (i = 0, len = itemIds.length; i < len; i++) {\r\n    var id = itemIds[i];\r\n    var item = data[id];\r\n    var value = item[field];\r\n    var exists = false;\r\n    for (j = 0; j < count; j++) {\r\n      if (values[j] == value) {\r\n        exists = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!exists && (value !== undefined)) {\r\n      values[count] = value;\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (fieldType) {\r\n    for (i = 0, len = values.length; i < len; i++) {\r\n      values[i] = util.convert(values[i], fieldType);\r\n    }\r\n  }\r\n\r\n  return values;\r\n};\r\n\r\n/**\r\n * Add a single item. Will fail when an item with the same id already exists.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._addItem = function (item) {\r\n  var id = item[this._fieldId];\r\n\r\n  if (id != undefined) {\r\n    // check whether this id is already taken\r\n    if (this._data[id]) {\r\n      // item already exists\r\n      throw new Error('Cannot add item: item with id ' + id + ' already exists');\r\n    }\r\n  }\r\n  else {\r\n    // generate an id\r\n    id = util.randomUUID();\r\n    item[this._fieldId] = id;\r\n  }\r\n\r\n  var d = {},\r\n      fields = Object.keys(item),\r\n      i,\r\n      len;\r\n  for (i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n  this._data[id] = d;\r\n  this.length++;\r\n\r\n  return id;\r\n};\r\n\r\n/**\r\n * Get an item. Fields can be converted to a specific type\r\n * @param {string} id\r\n * @param {Object.<string, string>} [types]  field types to convert\r\n * @return {Object | null} item\r\n * @private\r\n */\r\nDataSet.prototype._getItem = function (id, types) {\r\n  var field, value, i, len;\r\n\r\n  // get the item from the dataset\r\n  var raw = this._data[id];\r\n  if (!raw) {\r\n    return null;\r\n  }\r\n\r\n  // convert the items field types\r\n  var converted = {},\r\n      fields = Object.keys(raw);\r\n\r\n  if (types) {\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = util.convert(value, types[field]);\r\n    }\r\n  }\r\n  else {\r\n    // no field types specified, no converting needed\r\n    for (i = 0, len = fields.length; i < len; i++) {\r\n      field = fields[i];\r\n      value = raw[field];\r\n      converted[field] = value;\r\n    }\r\n  }\r\n\r\n  if (!converted[this._fieldId]) {\r\n    converted[this._fieldId] = raw.id;\r\n  }\r\n\r\n  return converted;\r\n};\r\n\r\n/**\r\n * Update a single item: merge with existing item.\r\n * Will fail when the item has no id, or when there does not exist an item\r\n * with the same id.\r\n * @param {Object} item\r\n * @return {string} id\r\n * @private\r\n */\r\nDataSet.prototype._updateItem = function (item) {\r\n  var id = item[this._fieldId];\r\n  if (id == undefined) {\r\n    throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');\r\n  }\r\n  var d = this._data[id];\r\n  if (!d) {\r\n    // item doesn't exist\r\n    throw new Error('Cannot update item: no item with id ' + id + ' found');\r\n  }\r\n\r\n  // merge with current item\r\n  var fields = Object.keys(item);\r\n  for (var i = 0, len = fields.length; i < len; i++) {\r\n    var field = fields[i];\r\n    var fieldType = this._type[field];  // type may be undefined\r\n    d[field] = util.convert(item[field], fieldType);\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nmodule.exports = DataSet;\r\n","var util = require('../../../util');\r\n\r\nvar Label = require('./shared/Label').default;\r\nvar ComponentUtil = require('./shared/ComponentUtil').default;\r\nvar Box = require('./nodes/shapes/Box').default;\r\nvar Circle = require('./nodes/shapes/Circle').default;\r\nvar CircularImage = require('./nodes/shapes/CircularImage').default;\r\nvar Database = require('./nodes/shapes/Database').default;\r\nvar Diamond = require('./nodes/shapes/Diamond').default;\r\nvar Dot = require('./nodes/shapes/Dot').default;\r\nvar Ellipse = require('./nodes/shapes/Ellipse').default;\r\nvar Icon = require('./nodes/shapes/Icon').default;\r\nvar Image = require('./nodes/shapes/Image').default;\r\nvar Square = require('./nodes/shapes/Square').default;\r\nvar Hexagon = require('./nodes/shapes/Hexagon').default;\r\nvar Star = require('./nodes/shapes/Star').default;\r\nvar Text = require('./nodes/shapes/Text').default;\r\nvar Triangle = require('./nodes/shapes/Triangle').default;\r\nvar TriangleDown = require('./nodes/shapes/TriangleDown').default;\r\nvar { printStyle } = require(\"../../../shared/Validator\");\r\n\r\n\r\n/**\r\n * A node. A node can be connected to other nodes via one or multiple edges.\r\n */\r\nclass Node {\r\n  /**\r\n   *\r\n   * @param {object} options An object containing options for the node. All\r\n   *                            options are optional, except for the id.\r\n   *                              {number} id     Id of the node. Required\r\n   *                              {string} label  Text label for the node\r\n   *                              {number} x      Horizontal position of the node\r\n   *                              {number} y      Vertical position of the node\r\n   *                              {string} shape  Node shape\r\n   *                              {string} image  An image url\r\n   *                              {string} title  A title text, can be HTML\r\n   *                              {anytype} group A group name or number\r\n   *\r\n   * @param {Object} body               Shared state of current network instance\r\n   * @param {Network.Images} imagelist  A list with images. Only needed when the node has an image\r\n   * @param {Groups} grouplist          A list with groups. Needed for retrieving group options\r\n   * @param {Object} globalOptions      Current global node options; these serve as defaults for the node instance\r\n   * @param {Object} defaultOptions     Global default options for nodes; note that this is also the prototype\r\n   *                                    for parameter `globalOptions`.\r\n   */\r\n  constructor(options, body, imagelist, grouplist, globalOptions, defaultOptions) {\r\n    this.options = util.bridgeObject(globalOptions);\r\n    this.globalOptions = globalOptions;\r\n    this.defaultOptions = defaultOptions;\r\n    this.body = body;\r\n\r\n    this.edges = []; // all edges connected to this node\r\n\r\n    // set defaults for the options\r\n    this.id = undefined;\r\n    this.imagelist = imagelist;\r\n    this.grouplist = grouplist;\r\n\r\n    // state options\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.baseSize = this.options.size;\r\n    this.baseFontSize = this.options.font.size;\r\n    this.predefinedPosition = false; // used to check if initial fit should just take the range or approximate\r\n    this.selected = false;\r\n    this.hover = false;\r\n\r\n    this.labelModule = new Label(this.body, this.options, false /* Not edge label */);\r\n    this.setOptions(options);\r\n  }\r\n\r\n\r\n  /**\r\n   * Attach a edge to the node\r\n   * @param {Edge} edge\r\n   */\r\n  attachEdge(edge) {\r\n    if (this.edges.indexOf(edge) === -1) {\r\n      this.edges.push(edge);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Detach a edge from the node\r\n   *\r\n   * @param {Edge} edge\r\n   */\r\n  detachEdge(edge) {\r\n    var index = this.edges.indexOf(edge);\r\n    if (index != -1) {\r\n      this.edges.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Set or overwrite options for the node\r\n   *\r\n   * @param {Object} options an object with options\r\n   * @returns {null|boolean}\r\n   */\r\n  setOptions(options) {\r\n    let currentShape = this.options.shape;\r\n    if (!options) {\r\n      return;  // Note that the return value will be 'undefined'! This is OK.\r\n    }\r\n\r\n    // basic options\r\n    if (options.id !== undefined)    {this.id = options.id;}\r\n\r\n    if (this.id === undefined) {\r\n      throw new Error(\"Node must have an id\");\r\n    }\r\n\r\n    Node.checkMass(options, this.id);\r\n\r\n    // set these options locally\r\n    // clear x and y positions\r\n    if (options.x !== undefined) {\r\n      if (options.x === null) {this.x = undefined; this.predefinedPosition = false;}\r\n      else                    {this.x = parseInt(options.x); this.predefinedPosition = true;}\r\n    }\r\n    if (options.y !== undefined) {\r\n      if (options.y === null) {this.y = undefined; this.predefinedPosition = false;}\r\n      else                    {this.y = parseInt(options.y); this.predefinedPosition = true;}\r\n    }\r\n    if (options.size !== undefined)  {this.baseSize = options.size;}\r\n    if (options.value !== undefined) {options.value = parseFloat(options.value);}\r\n\r\n    // this transforms all shorthands into fully defined options\r\n    Node.parseOptions(this.options, options, true, this.globalOptions, this.grouplist);\r\n\r\n    let pile = [options, this.options, this.defaultOptions];\r\n    this.chooser = ComponentUtil.choosify('node', pile);\r\n\r\n    this._load_images();\r\n    this.updateLabelModule(options);\r\n    this.updateShape(currentShape);\r\n\r\n    return (options.hidden !== undefined || options.physics !== undefined);\r\n  }\r\n\r\n\r\n  /**\r\n   * Load the images from the options, for the nodes that need them.\r\n   *\r\n   * TODO: The imageObj members should be moved to CircularImageBase.\r\n   *       It's the only place where they are required.\r\n   *\r\n   * @private\r\n   */\r\n  _load_images() {\r\n    // Don't bother loading for nodes without images\r\n    if (this.options.shape !== 'circularImage' && this.options.shape !== 'image') {\r\n      return;\r\n    }\r\n\r\n    if (this.options.image === undefined) {\r\n      throw new Error(\"Option image must be defined for node type '\" + this.options.shape + \"'\");\r\n    }\r\n\r\n    if (this.imagelist === undefined) {\r\n      throw new Error(\"Internal Error: No images provided\");\r\n    }\r\n\r\n    if (typeof this.options.image === 'string') {\r\n      this.imageObj = this.imagelist.load(this.options.image, this.options.brokenImage, this.id);\r\n    } else {\r\n      if (this.options.image.unselected === undefined) {\r\n        throw new Error(\"No unselected image provided\");\r\n      }\r\n\r\n      this.imageObj = this.imagelist.load(this.options.image.unselected, this.options.brokenImage, this.id);\r\n\r\n      if (this.options.image.selected !== undefined) {\r\n        this.imageObjAlt = this.imagelist.load(this.options.image.selected, this.options.brokenImage, this.id);\r\n      } else {\r\n        this.imageObjAlt = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Copy group option values into the node options.\r\n   *\r\n   * The group options override the global node options, so the copy of group options\r\n   *  must happen *after* the global node options have been set.\r\n   *\r\n   * This method must also be called also if the global node options have changed and the group options did not.\r\n   *\r\n   * @param {Object} parentOptions\r\n   * @param {Object} newOptions  new values for the options, currently only passed in for check\r\n   * @param {Object} groupList\r\n   */\r\n  static updateGroupOptions(parentOptions, newOptions, groupList) {\r\n    if (groupList === undefined) return;  // No groups, nothing to do\r\n\r\n    var group = parentOptions.group;\r\n\r\n    // paranoia: the selected group is already merged into node options, check.\r\n    if (newOptions !== undefined && newOptions.group !== undefined && group !== newOptions.group) {\r\n      throw new Error(\"updateGroupOptions: group values in options don't match.\");\r\n    }\r\n\r\n    var hasGroup = (typeof group === 'number' || (typeof group === 'string' && group != ''));\r\n    if (!hasGroup) return;  // current node has no group, no need to merge\r\n\r\n    var groupObj = groupList.get(group);\r\n\r\n    // Skip merging of group font options into parent; these are required to be distinct for labels\r\n    // TODO: It might not be a good idea either to merge the rest of the options, investigate this. \r\n    util.selectiveNotDeepExtend(['font'], parentOptions, groupObj);\r\n\r\n    // the color object needs to be completely defined.\r\n    // Since groups can partially overwrite the colors, we parse it again, just in case.\r\n    parentOptions.color = util.parseColor(parentOptions.color);\r\n  }\r\n\r\n\r\n  /**\r\n   * This process all possible shorthands in the new options and makes sure that the parentOptions are fully defined.\r\n   * Static so it can also be used by the handler.\r\n   *\r\n   * @param {Object} parentOptions\r\n   * @param {Object} newOptions\r\n   * @param {boolean} [allowDeletion=false]\r\n   * @param {Object} [globalOptions={}]\r\n   * @param {Object} [groupList]\r\n   * @static\r\n   */\r\n  static parseOptions(parentOptions, newOptions, allowDeletion = false, globalOptions = {}, groupList) {\r\n\r\n    var fields = [\r\n      'color',\r\n      'fixed',\r\n      'shadow'\r\n    ];\r\n    util.selectiveNotDeepExtend(fields, parentOptions, newOptions, allowDeletion);\r\n\r\n    Node.checkMass(newOptions);\r\n\r\n    // merge the shadow options into the parent.\r\n    util.mergeOptions(parentOptions, newOptions, 'shadow', globalOptions);\r\n\r\n    // individual shape newOptions\r\n    if (newOptions.color !== undefined && newOptions.color !== null) {\r\n      let parsedColor = util.parseColor(newOptions.color);\r\n      util.fillIfDefined(parentOptions.color, parsedColor);\r\n    }\r\n    else if (allowDeletion === true && newOptions.color === null) {\r\n      parentOptions.color = util.bridgeObject(globalOptions.color); // set the object back to the global options\r\n    }\r\n\r\n    // handle the fixed options\r\n    if (newOptions.fixed !== undefined && newOptions.fixed !== null) {\r\n      if (typeof newOptions.fixed === 'boolean') {\r\n        parentOptions.fixed.x = newOptions.fixed;\r\n        parentOptions.fixed.y = newOptions.fixed;\r\n      }\r\n      else {\r\n        if (newOptions.fixed.x !== undefined && typeof newOptions.fixed.x === 'boolean') {\r\n          parentOptions.fixed.x = newOptions.fixed.x;\r\n        }\r\n        if (newOptions.fixed.y !== undefined && typeof newOptions.fixed.y === 'boolean') {\r\n          parentOptions.fixed.y = newOptions.fixed.y;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (allowDeletion === true && newOptions.font === null) {\r\n      parentOptions.font =  util.bridgeObject(globalOptions.font); // set the object back to the global options\r\n    }\r\n\r\n    Node.updateGroupOptions(parentOptions, newOptions, groupList);\r\n\r\n    // handle the scaling options, specifically the label part\r\n    if (newOptions.scaling !== undefined) {\r\n      util.mergeOptions(parentOptions.scaling, newOptions.scaling, 'label', globalOptions.scaling);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns {{color: *, borderWidth: *, borderColor: *, size: *, borderDashes: (boolean|Array|allOptions.nodes.shapeProperties.borderDashes|{boolean, array}), borderRadius: (number|allOptions.nodes.shapeProperties.borderRadius|{number}|Array), shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *}}\r\n   */\r\n  getFormattingValues() {\r\n    let values = {\r\n      color: this.options.color.background,\r\n      borderWidth: this.options.borderWidth,\r\n      borderColor: this.options.color.border,\r\n      size: this.options.size,\r\n      borderDashes: this.options.shapeProperties.borderDashes,\r\n      borderRadius: this.options.shapeProperties.borderRadius,\r\n      shadow: this.options.shadow.enabled,\r\n      shadowColor: this.options.shadow.color,\r\n      shadowSize: this.options.shadow.size,\r\n      shadowX: this.options.shadow.x,\r\n      shadowY: this.options.shadow.y\r\n    };\r\n    if (this.selected || this.hover) {\r\n      if (this.chooser === true) {\r\n        if (this.selected) {\r\n          values.borderWidth *= 2;\r\n          values.color = this.options.color.highlight.background;\r\n          values.borderColor = this.options.color.highlight.border;\r\n          values.shadow = this.options.shadow.enabled;\r\n        } else if (this.hover) {\r\n          values.color = this.options.color.hover.background;\r\n          values.borderColor = this.options.color.hover.border;\r\n          values.shadow = this.options.shadow.enabled;\r\n        }\r\n      } else if (typeof this.chooser === 'function') {\r\n        this.chooser(values, this.options.id, this.selected, this.hover);\r\n        if (values.shadow === false) {\r\n          if ((values.shadowColor !== this.options.shadow.color) ||\r\n              (values.shadowSize !== this.options.shadow.size) ||\r\n              (values.shadowX !== this.options.shadow.x) ||\r\n              (values.shadowY !== this.options.shadow.y)) {\r\n            values.shadow = true;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      values.shadow = this.options.shadow.enabled;\r\n    }\r\n    return values;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  updateLabelModule(options) {\r\n    if (this.options.label === undefined || this.options.label === null) {\r\n      this.options.label = '';\r\n    }\r\n\r\n    Node.updateGroupOptions(this.options, options, this.grouplist);\r\n\r\n    //\r\n    // Note:The prototype chain for this.options is:\r\n    //\r\n    // this.options ->    NodesHandler.options    -> NodesHandler.defaultOptions\r\n    //                 (also: this.globalOptions)\r\n    //\r\n    // Note that the prototypes are mentioned explicitly in the pile list below;\r\n    // WE DON'T WANT THE ORDER OF THE PROTOTYPES!!!! At least, not for font handling of labels.\r\n    // This is a good indication that the prototype usage of options is deficient.\r\n    //\r\n    var currentGroup = this.grouplist.get(this.options.group, false);\r\n    let pile = [\r\n      options,             // new options\r\n      this.options,        // current node options, see comment above for prototype\r\n      currentGroup,        // group options, if any\r\n      this.globalOptions,  // Currently set global node options\r\n      this.defaultOptions  // Default global node options\r\n    ];\r\n    this.labelModule.update(this.options, pile);\r\n\r\n    if (this.labelModule.baseSize !== undefined) {\r\n      this.baseFontSize = this.labelModule.baseSize;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {string} currentShape\r\n   */\r\n  updateShape(currentShape) {\r\n    if (currentShape === this.options.shape && this.shape) {\r\n      this.shape.setOptions(this.options, this.imageObj, this.imageObjAlt);\r\n    }\r\n    else {\r\n      // choose draw method depending on the shape\r\n      switch (this.options.shape) {\r\n        case 'box':\r\n          this.shape = new Box(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'circle':\r\n          this.shape = new Circle(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'circularImage':\r\n          this.shape = new CircularImage(this.options, this.body, this.labelModule, this.imageObj, this.imageObjAlt);\r\n          break;\r\n        case 'database':\r\n          this.shape = new Database(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'diamond':\r\n          this.shape = new Diamond(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'dot':\r\n          this.shape = new Dot(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'ellipse':\r\n          this.shape = new Ellipse(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'icon':\r\n          this.shape = new Icon(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'image':\r\n          this.shape = new Image(this.options, this.body, this.labelModule, this.imageObj, this.imageObjAlt);\r\n          break;\r\n        case 'square':\r\n          this.shape = new Square(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'hexagon':\r\n          this.shape = new Hexagon(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'star':\r\n          this.shape = new Star(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'text':\r\n          this.shape = new Text(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'triangle':\r\n          this.shape = new Triangle(this.options, this.body, this.labelModule);\r\n          break;\r\n        case 'triangleDown':\r\n          this.shape = new TriangleDown(this.options, this.body, this.labelModule);\r\n          break;\r\n        default:\r\n          this.shape = new Ellipse(this.options, this.body, this.labelModule);\r\n          break;\r\n      }\r\n    }\r\n    this.needsRefresh();\r\n  }\r\n\r\n\r\n  /**\r\n   * select this node\r\n   */\r\n  select() {\r\n    this.selected = true;\r\n    this.needsRefresh();\r\n  }\r\n\r\n\r\n  /**\r\n   * unselect this node\r\n   */\r\n  unselect() {\r\n    this.selected = false;\r\n    this.needsRefresh();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Reset the calculated size of the node, forces it to recalculate its size\r\n   */\r\n  needsRefresh() {\r\n    this.shape.refreshNeeded = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * get the title of this node.\r\n   * @return {string} title    The title of the node, or undefined when no title\r\n   *                           has been set.\r\n   */\r\n  getTitle() {\r\n    return this.options.title;\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate the distance to the border of the Node\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   * @param {number} angle        Angle in radians\r\n   * @returns {number} distance   Distance to the border in pixels\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this.shape.distanceToBorder(ctx,angle);\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if this node has a fixed x and y position\r\n   * @return {boolean}      true if fixed, false if not\r\n   */\r\n  isFixed() {\r\n    return (this.options.fixed.x && this.options.fixed.y);\r\n  }\r\n\r\n\r\n  /**\r\n   * check if this node is selecte\r\n   * @return {boolean} selected   True if node is selected, else false\r\n   */\r\n  isSelected() {\r\n    return this.selected;\r\n  }\r\n\r\n\r\n  /**\r\n   * Retrieve the value of the node. Can be undefined\r\n   * @return {number} value\r\n   */\r\n  getValue() {\r\n    return this.options.value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the current dimensions of the label\r\n   *\r\n   * @return {rect}\r\n   */\r\n  getLabelSize() {\r\n    return this.labelModule.size();\r\n  }\r\n\r\n\r\n  /**\r\n   * Adjust the value range of the node. The node will adjust it's size\r\n   * based on its value.\r\n   * @param {number} min\r\n   * @param {number} max\r\n   * @param {number} total\r\n   */\r\n  setValueRange(min, max, total) {\r\n    if (this.options.value !== undefined) {\r\n      var scale = this.options.scaling.customScalingFunction(min, max, total, this.options.value);\r\n      var sizeDiff = this.options.scaling.max - this.options.scaling.min;\r\n      if (this.options.scaling.label.enabled === true) {\r\n        var fontDiff = this.options.scaling.label.max - this.options.scaling.label.min;\r\n        this.options.font.size = this.options.scaling.label.min + scale * fontDiff;\r\n      }\r\n      this.options.size = this.options.scaling.min + scale * sizeDiff;\r\n    }\r\n    else {\r\n      this.options.size = this.baseSize;\r\n      this.options.font.size = this.baseFontSize;\r\n    }\r\n\r\n    this.updateLabelModule();\r\n  }\r\n\r\n\r\n  /**\r\n   * Draw this node in the given canvas\r\n   * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   */\r\n  draw(ctx) {\r\n    let values = this.getFormattingValues();\r\n    this.shape.draw(ctx, this.x, this.y, this.selected, this.hover, values);\r\n  }\r\n\r\n\r\n  /**\r\n   * Update the bounding box of the shape\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   */\r\n  updateBoundingBox(ctx) {\r\n    this.shape.updateBoundingBox(this.x,this.y,ctx);\r\n  }\r\n\r\n\r\n  /**\r\n   * Recalculate the size of this node in the given canvas\r\n   * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   */\r\n  resize(ctx) {\r\n    let values = this.getFormattingValues();\r\n    this.shape.resize(ctx, this.selected, this.hover, values);\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine all visual elements of this node instance, in which the given\r\n   * point falls within the bounding shape.\r\n   *\r\n   * @param {point} point\r\n   * @returns {Array.<nodeClickItem|nodeLabelClickItem>} list with the items which are on the point\r\n   */\r\n  getItemsOnPoint(point) {\r\n    var ret = [];\r\n\r\n    if (this.labelModule.visible()) {\r\n      if (ComponentUtil.pointInRect(this.labelModule.getSize(), point)) {\r\n        ret.push({nodeId:this.id, labelId:0});\r\n      }\r\n    }\r\n\r\n    if (ComponentUtil.pointInRect(this.shape.boundingBox, point)) {\r\n      ret.push({nodeId:this.id});\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if this object is overlapping with the provided object\r\n   * @param {Object} obj   an object with parameters left, top, right, bottom\r\n   * @return {boolean}     True if location is located on node\r\n   */\r\n  isOverlappingWith(obj) {\r\n    return (\r\n      this.shape.left < obj.right &&\r\n      this.shape.left + this.shape.width > obj.left &&\r\n      this.shape.top < obj.bottom &&\r\n      this.shape.top + this.shape.height > obj.top\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if this object is overlapping with the provided object\r\n   * @param {Object} obj   an object with parameters left, top, right, bottom\r\n   * @return {boolean}     True if location is located on node\r\n   */\r\n  isBoundingBoxOverlappingWith(obj) {\r\n    return (\r\n      this.shape.boundingBox.left < obj.right &&\r\n      this.shape.boundingBox.right > obj.left &&\r\n      this.shape.boundingBox.top < obj.bottom &&\r\n      this.shape.boundingBox.bottom > obj.top\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n  * Check valid values for mass\r\n  *\r\n  * The mass may not be negative or zero. If it is, reset to 1\r\n  *\r\n  * @param {object} options\r\n  * @param {Node.id} id\r\n   * @static\r\n  */\r\n  static checkMass(options, id) {\r\n    if (options.mass !== undefined && options.mass <= 0) {\r\n      let strId = '';\r\n      if (id !== undefined) {\r\n        strId = ' in node id: ' + id;\r\n      }\r\n      console.log('%cNegative or zero mass disallowed' + strId +\r\n                  ', setting mass to 1.' , printStyle);\r\n      options.mass = 1;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","/**\r\n * Definitions for param's in jsdoc.\r\n * These are more or less global within Network. Putting them here until I can figure out\r\n * where to really put them\r\n * \r\n * @typedef {string|number} Id\r\n * @typedef {Id} NodeId\r\n * @typedef {Id} EdgeId\r\n * @typedef {Id} LabelId\r\n *\r\n * @typedef {{x: number, y: number}} point\r\n * @typedef {{left: number, top: number, width: number, height: number}} rect\r\n * @typedef {{x: number, y:number, angle: number}} rotationPoint\r\n *   - point to rotate around and the angle in radians to rotate. angle == 0 means no rotation\r\n * @typedef {{nodeId:NodeId}} nodeClickItem\r\n * @typedef {{nodeId:NodeId, labelId:LabelId}} nodeLabelClickItem\r\n * @typedef {{edgeId:EdgeId}} edgeClickItem\r\n * @typedef {{edgeId:EdgeId, labelId:LabelId}} edgeLabelClickItem\r\n */\r\n\r\nlet util = require(\"../../../../util\");\r\n\r\n/**\r\n * Helper functions for components\r\n * @class\r\n */\r\nclass ComponentUtil {\r\n  /**\r\n   * Determine values to use for (sub)options of 'chosen'.\r\n   *\r\n   * This option is either a boolean or an object whose values should be examined further.\r\n   * The relevant structures are:\r\n   *\r\n   * - chosen: <boolean value>\r\n   * - chosen: { subOption: <boolean or function> }\r\n   *\r\n   * Where subOption is 'node', 'edge' or 'label'.\r\n   *\r\n   * The intention of this method appears to be to set a specific priority to the options;\r\n   * Since most properties are either bridged or merged into the local options objects, there\r\n   * is not much point in handling them separately.\r\n   * TODO: examine if 'most' in previous sentence can be replaced with 'all'. In that case, we\r\n   *       should be able to get rid of this method.\r\n   *\r\n   * @param {string}  subOption  option within object 'chosen' to consider; either 'node', 'edge' or 'label'\r\n   * @param {Object}  pile       array of options objects to consider\r\n   * \r\n   * @return {boolean|function}  value for passed subOption of 'chosen' to use\r\n   */\r\n  static choosify(subOption, pile) {\r\n    // allowed values for subOption\r\n    let allowed = [ 'node', 'edge', 'label'];\r\n    let value = true;\r\n\r\n    let chosen = util.topMost(pile, 'chosen');\r\n    if (typeof chosen === 'boolean') {\r\n      value = chosen;\r\n    } else if (typeof chosen === 'object') {\r\n      if (allowed.indexOf(subOption) === -1 ) {\r\n        throw new Error('choosify: subOption \\'' + subOption + '\\' should be one of '\r\n          + \"'\" + allowed.join(\"', '\") +  \"'\");\r\n      }\r\n\r\n      let chosenEdge = util.topMost(pile, ['chosen', subOption]);\r\n      if ((typeof chosenEdge === 'boolean') || (typeof chosenEdge === 'function')) {\r\n        value = chosenEdge;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if the point falls within the given rectangle.\r\n   *\r\n   * @param {rect} rect\r\n   * @param {point} point\r\n   * @param {rotationPoint} [rotationPoint] if specified, the rotation that applies to the rectangle.\r\n   * @returns {boolean}  true if point within rectangle, false otherwise\r\n   * @static\r\n   */\r\n  static pointInRect(rect, point, rotationPoint) {\r\n    if (rect.width <= 0 || rect.height <= 0) {\r\n      return false;  // early out\r\n    }\r\n\r\n    if (rotationPoint !== undefined) {\r\n      // Rotate the point the same amount as the rectangle\r\n      var tmp = {\r\n        x: point.x - rotationPoint.x,\r\n        y: point.y - rotationPoint.y\r\n      };\r\n\r\n      if (rotationPoint.angle !== 0) {\r\n        // In order to get the coordinates the same, you need to \r\n        // rotate in the reverse direction\r\n        var angle = -rotationPoint.angle;\r\n\r\n        var tmp2 = {\r\n          x: Math.cos(angle)*tmp.x - Math.sin(angle)*tmp.y,\r\n          y: Math.sin(angle)*tmp.x + Math.cos(angle)*tmp.y\r\n        };\r\n        point = tmp2;\r\n      } else {\r\n        point = tmp;\r\n      }\r\n\r\n      // Note that if a rotation is specified, the rectangle coordinates\r\n      // are **not* the full canvas coordinates. They are relative to the\r\n      // rotationPoint. Hence, the point coordinates need not be translated\r\n      // back in this case.\r\n    }\r\n\r\n    var right  = rect.x + rect.width;\r\n    var bottom = rect.y + rect.width;\r\n\r\n    return (\r\n      rect.left < point.x &&\r\n      right     > point.x &&\r\n      rect.top  < point.y &&\r\n      bottom    > point.y\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if given value is acceptable as a label text.\r\n   *\r\n   * @param {*} text value to check; can be anything at this point\r\n   * @returns {boolean} true if valid label value, false otherwise\r\n   */\r\n  static isValidLabel(text) {\r\n    // Note that this is quite strict: types that *might* be converted to string are disallowed\r\n    return  (typeof text === 'string' && text !== '');\r\n  }\r\n}\r\n\r\nexport default ComponentUtil;\r\n","/**\r\n * Register a touch event, taking place before a gesture\r\n * @param {Hammer} hammer       A hammer instance\r\n * @param {function} callback   Callback, called as callback(event)\r\n */\r\nexports.onTouch = function (hammer, callback) {\r\n  callback.inputHandler = function (event) {\r\n    if (event.isFirst) {\r\n      callback(event);\r\n    }\r\n  };\r\n\r\n  hammer.on('hammer.input', callback.inputHandler);\r\n};\r\n\r\n/**\r\n * Register a release event, taking place after a gesture\r\n * @param {Hammer} hammer       A hammer instance\r\n * @param {function} callback   Callback, called as callback(event)\r\n * @returns {*}\r\n */\r\nexports.onRelease = function (hammer, callback) {\r\n  callback.inputHandler = function (event) {\r\n    if (event.isFinal) {\r\n      callback(event);\r\n    }\r\n  };\r\n\r\n  return hammer.on('hammer.input', callback.inputHandler);\r\n};\r\n\r\n\r\n/**\r\n * Unregister a touch event, taking place before a gesture\r\n * @param {Hammer} hammer       A hammer instance\r\n * @param {function} callback   Callback, called as callback(event)\r\n */\r\nexports.offTouch = function (hammer, callback) {\r\n  hammer.off('hammer.input', callback.inputHandler);\r\n};\r\n\r\n/**\r\n * Unregister a release event, taking place before a gesture\r\n * @param {Hammer} hammer       A hammer instance\r\n * @param {function} callback   Callback, called as callback(event)\r\n */\r\nexports.offRelease = exports.offTouch;\r\n\r\n/**\r\n * Hack the PinchRecognizer such that it doesn't prevent default behavior\r\n * for vertical panning.\r\n *\r\n * Yeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932\r\n *\r\n * @param {Hammer.Pinch} pinchRecognizer\r\n * @return {Hammer.Pinch} returns the pinchRecognizer\r\n */\r\nexports.disablePreventDefaultVertically = function (pinchRecognizer) {\r\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\r\n\r\n  pinchRecognizer.getTouchAction = function() {\r\n    // default method returns [TOUCH_ACTION_NONE]\r\n    return [TOUCH_ACTION_PAN_Y];\r\n  };\r\n\r\n  return pinchRecognizer;\r\n};\r\n","let util = require(\"../../../../../util\");\r\nlet EndPoints = require(\"./EndPoints\").default;\r\n\r\n\r\n/**\r\n * The Base Class for all edges.\r\n *\r\n */\r\nclass EdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    this.body = body;\r\n    this.labelModule = labelModule;\r\n    this.options = {};\r\n    this.setOptions(options);\r\n    this.colorDirty = true;\r\n    this.color = {};\r\n    this.selectionWidth = 2;\r\n    this.hoverWidth = 1.5;\r\n    this.fromPoint = this.from;\r\n    this.toPoint = this.to;\r\n  }\r\n\r\n  /**\r\n   * Connects a node to itself\r\n   */\r\n  connect() {\r\n    this.from = this.body.nodes[this.options.from];\r\n    this.to = this.body.nodes[this.options.to];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean} always false\r\n   */\r\n  cleanup() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n    this.from = this.body.nodes[this.options.from];\r\n    this.to = this.body.nodes[this.options.to];\r\n    this.id = this.options.id;\r\n  }\r\n\r\n  /**\r\n   * Redraw a edge as a line\r\n   * Draw this edge in the given canvas\r\n   * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\r\n   *\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   * @param {Array} values\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {Node} viaNode\r\n   * @private\r\n   */\r\n  drawLine(ctx, values, selected, hover, viaNode) {\r\n    // set style\r\n    ctx.strokeStyle = this.getColor(ctx, values, selected, hover);\r\n    ctx.lineWidth = values.width;\r\n\r\n    if (values.dashes !== false) {\r\n      this._drawDashedLine(ctx, values, viaNode);\r\n    }\r\n    else {\r\n      this._drawLine(ctx, values, viaNode);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   * @param {Array} values\r\n   * @param {Node} viaNode\r\n   * @param {{x: number, y: number}} [fromPoint]\r\n   * @param {{x: number, y: number}} [toPoint]\r\n   * @private\r\n   */\r\n  _drawLine(ctx, values, viaNode, fromPoint, toPoint) {\r\n    if (this.from != this.to) {\r\n      // draw line\r\n      this._line(ctx, values, viaNode, fromPoint, toPoint);\r\n    }\r\n    else {\r\n      let [x,y,radius] = this._getCircleData(ctx);\r\n      this._circle(ctx, values, x, y, radius);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Array} values\r\n   * @param {Node} viaNode\r\n   * @param {{x: number, y: number}} [fromPoint]  TODO: Remove in next major release\r\n   * @param {{x: number, y: number}} [toPoint]    TODO: Remove in next major release\r\n   * @private\r\n   */\r\n  _drawDashedLine(ctx, values, viaNode, fromPoint, toPoint) {  // eslint-disable-line no-unused-vars\r\n    ctx.lineCap = 'round';\r\n    let pattern = [5,5];\r\n    if (Array.isArray(values.dashes) === true) {\r\n      pattern = values.dashes;\r\n    }\r\n\r\n    // only firefox and chrome support this method, else we use the legacy one.\r\n    if (ctx.setLineDash !== undefined) {\r\n      ctx.save();\r\n\r\n      // set dash settings for chrome or firefox\r\n      ctx.setLineDash(pattern);\r\n      ctx.lineDashOffset = 0;\r\n\r\n      // draw the line\r\n      if (this.from != this.to) {\r\n        // draw line\r\n        this._line(ctx, values, viaNode);\r\n      }\r\n      else {\r\n        let [x,y,radius] = this._getCircleData(ctx);\r\n        this._circle(ctx, values, x, y, radius);\r\n      }\r\n\r\n      // restore the dash settings.\r\n      ctx.setLineDash([0]);\r\n      ctx.lineDashOffset = 0;\r\n      ctx.restore();\r\n    }\r\n    else { // unsupporting smooth lines\r\n      if (this.from != this.to) {\r\n        // draw line\r\n        ctx.dashedLine(this.from.x, this.from.y, this.to.x, this.to.y, pattern);\r\n      }\r\n      else {\r\n        let [x,y,radius] = this._getCircleData(ctx);\r\n        this._circle(ctx, values, x, y, radius);\r\n      }\r\n      // draw shadow if enabled\r\n      this.enableShadow(ctx, values);\r\n\r\n      ctx.stroke();\r\n\r\n      // disable shadows for other elements.\r\n      this.disableShadow(ctx, values);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Object} options\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  findBorderPosition(nearNode, ctx, options) {\r\n    if (this.from != this.to) {\r\n      return this._findBorderPosition(nearNode, ctx, options);\r\n    }\r\n    else {\r\n      return this._findBorderPositionCircle(nearNode, ctx, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @returns {{from: ({x: number, y: number, t: number}|*), to: ({x: number, y: number, t: number}|*)}}\r\n   */\r\n  findBorderPositions(ctx) {\r\n    let from = {};\r\n    let to = {};\r\n    if (this.from != this.to) {\r\n      from = this._findBorderPosition(this.from, ctx);\r\n      to = this._findBorderPosition(this.to, ctx);\r\n    }\r\n    else {\r\n      let [x,y] = this._getCircleData(ctx).slice(0, 2);\r\n\r\n      from = this._findBorderPositionCircle(this.from, ctx, {x, y, low:0.25, high:0.6, direction:-1});\r\n      to = this._findBorderPositionCircle(this.from, ctx, {x, y, low:0.6, high:0.8, direction:1});\r\n    }\r\n    return {from, to};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @returns {Array.<number>} x, y, radius\r\n   * @private\r\n   */\r\n  _getCircleData(ctx) {\r\n    let x, y;\r\n    let node = this.from;\r\n    let radius = this.options.selfReferenceSize;\r\n\r\n    if (ctx !== undefined) {\r\n      if (node.shape.width === undefined) {\r\n        node.shape.resize(ctx);\r\n      }\r\n    }\r\n\r\n    // get circle coordinates\r\n    if (node.shape.width > node.shape.height) {\r\n      x = node.x + node.shape.width * 0.5;\r\n      y = node.y - radius;\r\n    }\r\n    else {\r\n      x = node.x + radius;\r\n      y = node.y - node.shape.height * 0.5;\r\n    }\r\n    return [x,y,radius];\r\n  }\r\n\r\n  /**\r\n   * Get a point on a circle\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} radius\r\n   * @param {number} percentage - Value between 0 (line start) and 1 (line end)\r\n   * @return {Object} point\r\n   * @private\r\n   */\r\n  _pointOnCircle(x, y, radius, percentage) {\r\n    let angle = percentage * 2 * Math.PI;\r\n    return {\r\n      x: x + radius * Math.cos(angle),\r\n      y: y - radius * Math.sin(angle)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function uses binary search to look for the point where the circle crosses the border of the node.\r\n   * @param {Node} node\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Object} options\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _findBorderPositionCircle(node, ctx, options) {\r\n    let x = options.x;\r\n    let y = options.y;\r\n    let low = options.low;\r\n    let high = options.high;\r\n    let direction = options.direction;\r\n\r\n    let maxIterations = 10;\r\n    let iteration = 0;\r\n    let radius = this.options.selfReferenceSize;\r\n    let pos, angle, distanceToBorder, distanceToPoint, difference;\r\n    let threshold = 0.05;\r\n    let middle = (low + high) * 0.5;\r\n\r\n    while (low <= high && iteration < maxIterations) {\r\n      middle = (low + high) * 0.5;\r\n\r\n      pos = this._pointOnCircle(x, y, radius, middle);\r\n      angle = Math.atan2((node.y - pos.y), (node.x - pos.x));\r\n      distanceToBorder = node.distanceToBorder(ctx, angle);\r\n      distanceToPoint = Math.sqrt(Math.pow(pos.x - node.x, 2) + Math.pow(pos.y - node.y, 2));\r\n      difference = distanceToBorder - distanceToPoint;\r\n      if (Math.abs(difference) < threshold) {\r\n        break; // found\r\n      }\r\n      else if (difference > 0) { // distance to nodes is larger than distance to border --> t needs to be bigger if we're looking at the to node.\r\n        if (direction > 0) {\r\n          low = middle;\r\n        }\r\n        else {\r\n          high = middle;\r\n        }\r\n      }\r\n      else {\r\n        if (direction > 0) {\r\n          high = middle;\r\n        }\r\n        else {\r\n          low = middle;\r\n        }\r\n      }\r\n      iteration++;\r\n\r\n    }\r\n    pos.t = middle;\r\n\r\n    return pos;\r\n  }\r\n\r\n  /**\r\n   * Get the line width of the edge. Depends on width and whether one of the\r\n   * connected nodes is selected.\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @returns {number} width\r\n   * @private\r\n   */\r\n  getLineWidth(selected, hover) {\r\n    if (selected === true) {\r\n      return Math.max(this.selectionWidth, 0.3 / this.body.view.scale);\r\n    }\r\n    else {\r\n      if (hover === true) {\r\n        return Math.max(this.hoverWidth, 0.3 / this.body.view.scale);\r\n      }\r\n      else {\r\n        return Math.max(this.options.width, 0.3 / this.body.view.scale);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @param {boolean} selected - Unused\r\n   * @param {boolean} hover - Unused\r\n   * @returns {string}\r\n   */\r\n  getColor(ctx, values, selected, hover) {  // eslint-disable-line no-unused-vars\r\n    if (values.inheritsColor !== false) {\r\n      // when this is a loop edge, just use the 'from' method\r\n      if ((values.inheritsColor === 'both') && (this.from.id !== this.to.id)) {\r\n        let grd = ctx.createLinearGradient(this.from.x, this.from.y, this.to.x, this.to.y);\r\n        let fromColor, toColor;\r\n        fromColor = this.from.options.color.highlight.border;\r\n        toColor = this.to.options.color.highlight.border;\r\n\r\n        if ((this.from.selected === false) && (this.to.selected === false)) {\r\n          fromColor = util.overrideOpacity(this.from.options.color.border, values.opacity);\r\n          toColor = util.overrideOpacity(this.to.options.color.border, values.opacity);\r\n        }\r\n        else if ((this.from.selected === true) && (this.to.selected === false)) {\r\n          toColor = this.to.options.color.border;\r\n        }\r\n        else if ((this.from.selected === false) && (this.to.selected === true)) {\r\n          fromColor = this.from.options.color.border;\r\n        }\r\n        grd.addColorStop(0, fromColor);\r\n        grd.addColorStop(1, toColor);\r\n\r\n        // -------------------- this returns -------------------- //\r\n        return grd;\r\n      }\r\n\r\n      if (values.inheritsColor === \"to\") {\r\n        return util.overrideOpacity(this.to.options.color.border, values.opacity);\r\n      } else { // \"from\"\r\n        return util.overrideOpacity(this.from.options.color.border, values.opacity);\r\n      }\r\n    } else {\r\n      return util.overrideOpacity(values.color, values.opacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw a line from a node to itself, a circle\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Array} values\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} radius\r\n   * @private\r\n   */\r\n  _circle(ctx, values, x, y, radius) {\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n\r\n    // draw a circle\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    ctx.stroke();\r\n\r\n    // disable shadows for other elements.\r\n    this.disableShadow(ctx, values);\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate the distance between a point (x3,y3) and a line segment from (x1,y1) to (x2,y2).\r\n   * (x3,y3) is the point.\r\n   *\r\n   * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @param {Node} via\r\n   * @param {Array} values\r\n   * @returns {number}\r\n   */\r\n  getDistanceToEdge(x1, y1, x2, y2, x3, y3, via, values) {  // eslint-disable-line no-unused-vars\r\n    let returnValue = 0;\r\n    if (this.from != this.to) {\r\n      returnValue = this._getDistanceToEdge(x1, y1, x2, y2, x3, y3, via)\r\n    }\r\n    else {\r\n      let [x,y,radius] = this._getCircleData(undefined);\r\n      let dx = x - x3;\r\n      let dy = y - y3;\r\n      returnValue = Math.abs(Math.sqrt(dx * dx + dy * dy) - radius);\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToLine(x1, y1, x2, y2, x3, y3) {\r\n    let px = x2 - x1;\r\n    let py = y2 - y1;\r\n    let something = px * px + py * py;\r\n    let u = ((x3 - x1) * px + (y3 - y1) * py) / something;\r\n\r\n    if (u > 1) {\r\n      u = 1;\r\n    }\r\n    else if (u < 0) {\r\n      u = 0;\r\n    }\r\n\r\n    let x = x1 + u * px;\r\n    let y = y1 + u * py;\r\n    let dx = x - x3;\r\n    let dy = y - y3;\r\n\r\n    //# Note: If the actual distance does not matter,\r\n    //# if you only want to compare what this function\r\n    //# returns to other results of this function, you\r\n    //# can just return the squared distance instead\r\n    //# (i.e. remove the sqrt) to gain a little performance\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {string} position\r\n   * @param {Node} viaNode\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {Array} values\r\n   * @returns {{point: *, core: {x: number, y: number}, angle: *, length: number, type: *}}\r\n   */\r\n  getArrowData(ctx, position, viaNode, selected, hover, values) {\r\n    // set lets\r\n    let angle;\r\n    let arrowPoint;\r\n    let node1;\r\n    let node2;\r\n    let guideOffset;\r\n    let scaleFactor;\r\n    let type;\r\n    let lineWidth = values.width;\r\n\r\n    if (position === 'from') {\r\n      node1 = this.from;\r\n      node2 = this.to;\r\n      guideOffset = 0.1;\r\n      scaleFactor = values.fromArrowScale;\r\n      type = values.fromArrowType;\r\n    }\r\n    else if (position === 'to') {\r\n      node1 = this.to;\r\n      node2 = this.from;\r\n      guideOffset = -0.1;\r\n      scaleFactor = values.toArrowScale;\r\n      type = values.toArrowType;\r\n    }\r\n    else {\r\n      node1 = this.to;\r\n      node2 = this.from;\r\n      scaleFactor = values.middleArrowScale;\r\n      type = values.middleArrowType;\r\n    }\r\n\r\n    // if not connected to itself\r\n    if (node1 != node2) {\r\n      if (position !== 'middle') {\r\n        // draw arrow head\r\n        if (this.options.smooth.enabled === true) {\r\n          arrowPoint = this.findBorderPosition(node1, ctx, { via: viaNode });\r\n          let guidePos = this.getPoint(Math.max(0.0, Math.min(1.0, arrowPoint.t + guideOffset)), viaNode);\r\n          angle = Math.atan2((arrowPoint.y - guidePos.y), (arrowPoint.x - guidePos.x));\r\n        } else {\r\n          angle = Math.atan2((node1.y - node2.y), (node1.x - node2.x));\r\n          arrowPoint = this.findBorderPosition(node1, ctx);\r\n        }\r\n      } else {\r\n        angle = Math.atan2((node1.y - node2.y), (node1.x - node2.x));\r\n        arrowPoint = this.getPoint(0.5, viaNode); // this is 0.6 to account for the size of the arrow.\r\n      }\r\n    } else {\r\n      // draw circle\r\n      let [x,y,radius] = this._getCircleData(ctx);\r\n\r\n      if (position === 'from') {\r\n        arrowPoint = this.findBorderPosition(this.from, ctx, { x, y, low: 0.25, high: 0.6, direction: -1 });\r\n        angle = arrowPoint.t * -2 * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI;\r\n      } else if (position === 'to') {\r\n        arrowPoint = this.findBorderPosition(this.from, ctx, { x, y, low: 0.6, high: 1.0, direction: 1 });\r\n        angle = arrowPoint.t * -2 * Math.PI + 1.5 * Math.PI - 1.1 * Math.PI;\r\n      } else {\r\n        arrowPoint = this._pointOnCircle(x, y, radius, 0.175);\r\n        angle = 3.9269908169872414; // === 0.175 * -2 * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI;\r\n      }\r\n    }\r\n\r\n    if (position === 'middle' && scaleFactor < 0) lineWidth *= -1; // reversed middle arrow\r\n    let length = 15 * scaleFactor + 3 * lineWidth; // 3* lineWidth is the width of the edge.\r\n\r\n    var xi = arrowPoint.x - length * 0.9 * Math.cos(angle);\r\n    var yi = arrowPoint.y - length * 0.9 * Math.sin(angle);\r\n    let arrowCore = { x: xi, y: yi };\r\n\r\n    return { point: arrowPoint, core: arrowCore, angle: angle, length: length, type: type };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {Object} arrowData\r\n   */\r\n  drawArrowHead(ctx, values, selected, hover, arrowData) {\r\n    // set style\r\n    ctx.strokeStyle = this.getColor(ctx, values, selected, hover);\r\n    ctx.fillStyle = ctx.strokeStyle;\r\n    ctx.lineWidth = values.width;\r\n\r\n    EndPoints.draw(ctx, arrowData);\r\n\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n    ctx.fill();\r\n    // disable shadows for other elements.\r\n    this.disableShadow(ctx, values);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  enableShadow(ctx, values) {\r\n    if (values.shadow === true) {\r\n      ctx.shadowColor = values.shadowColor;\r\n      ctx.shadowBlur = values.shadowSize;\r\n      ctx.shadowOffsetX = values.shadowX;\r\n      ctx.shadowOffsetY = values.shadowY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  disableShadow(ctx, values) {\r\n    if (values.shadow === true) {\r\n      ctx.shadowColor = 'rgba(0,0,0,0)';\r\n      ctx.shadowBlur = 0;\r\n      ctx.shadowOffsetX = 0;\r\n      ctx.shadowOffsetY = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport default EdgeBase;\r\n","var util = require('./util');\r\nvar DataSet = require('./DataSet');\r\n\r\n/**\r\n * DataView\r\n *\r\n * a dataview offers a filtered view on a dataset or an other dataview.\r\n *\r\n * @param {DataSet | DataView} data\r\n * @param {Object} [options]   Available options: see method get\r\n *\r\n * @constructor DataView\r\n */\r\nfunction DataView (data, options) {\r\n  this._data = null;\r\n  this._ids = {}; // ids of the items currently in memory (just contains a boolean true)\r\n  this.length = 0; // number of items in the DataView\r\n  this._options = options || {};\r\n  this._fieldId = 'id'; // name of the field containing id\r\n  this._subscribers = {}; // event subscribers\r\n\r\n  var me = this;\r\n  this.listener = function () {\r\n    me._onEvent.apply(me, arguments);\r\n  };\r\n\r\n  this.setData(data);\r\n}\r\n\r\n// TODO: implement a function .config() to dynamically update things like configured filter\r\n// and trigger changes accordingly\r\n\r\n/**\r\n * Set a data source for the view\r\n * @param {DataSet | DataView} data\r\n */\r\nDataView.prototype.setData = function (data) {\r\n  var ids, id, i, len, items;\r\n\r\n  if (this._data) {\r\n    // unsubscribe from current dataset\r\n    if (this._data.off) {\r\n      this._data.off('*', this.listener);\r\n    }\r\n\r\n    // trigger a remove of all items in memory\r\n    ids = this._data.getIds({filter: this._options && this._options.filter});\r\n    items = [];\r\n\r\n    for (i = 0, len = ids.length; i < len; i++) {\r\n      items.push(this._data._data[ids[i]]);\r\n    }\r\n\r\n    this._ids = {};\r\n    this.length = 0;\r\n    this._trigger('remove', {items: ids, oldData: items});\r\n  }\r\n\r\n  this._data = data;\r\n\r\n  if (this._data) {\r\n    // update fieldId\r\n    this._fieldId = this._options.fieldId ||\r\n        (this._data && this._data.options && this._data.options.fieldId) ||\r\n        'id';\r\n\r\n    // trigger an add of all added items\r\n    ids = this._data.getIds({filter: this._options && this._options.filter});\r\n    for (i = 0, len = ids.length; i < len; i++) {\r\n      id = ids[i];\r\n      this._ids[id] = true;\r\n    }\r\n    this.length = ids.length;\r\n    this._trigger('add', {items: ids});\r\n\r\n    // subscribe to new dataset\r\n    if (this._data.on) {\r\n      this._data.on('*', this.listener);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Refresh the DataView. Useful when the DataView has a filter function\r\n * containing a variable parameter.\r\n */\r\nDataView.prototype.refresh = function () {\r\n  var id, i, len;\r\n  var ids = this._data.getIds({filter: this._options && this._options.filter}),\r\n      oldIds = Object.keys(this._ids),\r\n      newIds = {},\r\n      addedIds = [],\r\n      removedIds = [],\r\n      removedItems = [];\r\n\r\n  // check for additions\r\n  for (i = 0, len = ids.length; i < len; i++) {\r\n    id = ids[i];\r\n    newIds[id] = true;\r\n    if (!this._ids[id]) {\r\n      addedIds.push(id);\r\n      this._ids[id] = true;\r\n    }\r\n  }\r\n\r\n  // check for removals\r\n  for (i = 0, len = oldIds.length; i < len; i++) {\r\n    id = oldIds[i];\r\n    if (!newIds[id]) {\r\n      removedIds.push(id);\r\n      removedItems.push(this._data._data[id]);\r\n      delete this._ids[id];\r\n    }\r\n  }\r\n\r\n  this.length += addedIds.length - removedIds.length;\r\n\r\n  // trigger events\r\n  if (addedIds.length) {\r\n    this._trigger('add', {items: addedIds});\r\n  }\r\n  if (removedIds.length) {\r\n    this._trigger('remove', {items: removedIds, oldData: removedItems});\r\n  }\r\n};\r\n\r\n/**\r\n * Get data from the data view\r\n *\r\n * Usage:\r\n *\r\n *     get()\r\n *     get(options: Object)\r\n *     get(options: Object, data: Array | DataTable)\r\n *\r\n *     get(id: Number)\r\n *     get(id: Number, options: Object)\r\n *     get(id: Number, options: Object, data: Array | DataTable)\r\n *\r\n *     get(ids: Number[])\r\n *     get(ids: Number[], options: Object)\r\n *     get(ids: Number[], options: Object, data: Array | DataTable)\r\n *\r\n * Where:\r\n *\r\n * {number | string} id         The id of an item\r\n * {number[] | string{}} ids    An array with ids of items\r\n * {Object} options             An Object with options. Available options:\r\n *                              {string} [type] Type of data to be returned. Can\r\n *                                              be 'DataTable' or 'Array' (default)\r\n *                              {Object.<string, string>} [convert]\r\n *                              {string[]} [fields] field names to be returned\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * {Array | DataTable} [data]   If provided, items will be appended to this\r\n *                              array or table. Required in case of Google\r\n *                              DataTable.\r\n * @param {Array} args\r\n * @return {DataSet|DataView}\r\n */\r\nDataView.prototype.get = function (args) {  // eslint-disable-line no-unused-vars\r\n  var me = this;\r\n\r\n  // parse the arguments\r\n  var ids, options, data;\r\n  var firstType = util.getType(arguments[0]);\r\n  if (firstType == 'String' || firstType == 'Number' || firstType == 'Array') {\r\n    // get(id(s) [, options] [, data])\r\n    ids = arguments[0];  // can be a single id or an array with ids\r\n    options = arguments[1];\r\n    data = arguments[2];\r\n  }\r\n  else {\r\n    // get([, options] [, data])\r\n    options = arguments[0];\r\n    data = arguments[1];\r\n  }\r\n\r\n  // extend the options with the default options and provided options\r\n  var viewOptions = util.extend({}, this._options, options);\r\n\r\n  // create a combined filter method when needed\r\n  if (this._options.filter && options && options.filter) {\r\n    viewOptions.filter = function (item) {\r\n      return me._options.filter(item) && options.filter(item);\r\n    }\r\n  }\r\n\r\n  // build up the call to the linked data set\r\n  var getArguments = [];\r\n  if (ids != undefined) {\r\n    getArguments.push(ids);\r\n  }\r\n  getArguments.push(viewOptions);\r\n  getArguments.push(data);\r\n\r\n  return this._data && this._data.get.apply(this._data, getArguments);\r\n};\r\n\r\n/**\r\n * Get ids of all items or from a filtered set of items.\r\n * @param {Object} [options]    An Object with options. Available options:\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Array.<string|number>} ids\r\n */\r\nDataView.prototype.getIds = function (options) {\r\n  var ids;\r\n\r\n  if (this._data) {\r\n    var defaultFilter = this._options.filter;\r\n    var filter;\r\n\r\n    if (options && options.filter) {\r\n      if (defaultFilter) {\r\n        filter = function (item) {\r\n          return defaultFilter(item) && options.filter(item);\r\n        }\r\n      }\r\n      else {\r\n        filter = options.filter;\r\n      }\r\n    }\r\n    else {\r\n      filter = defaultFilter;\r\n    }\r\n\r\n    ids = this._data.getIds({\r\n      filter: filter,\r\n      order: options && options.order\r\n    });\r\n  }\r\n  else {\r\n    ids = [];\r\n  }\r\n\r\n  return ids;\r\n};\r\n\r\n/**\r\n * Map every item in the dataset.\r\n * @param {function} callback\r\n * @param {Object} [options]    Available options:\r\n *                              {Object.<string, string>} [type]\r\n *                              {string[]} [fields] filter fields\r\n *                              {function} [filter] filter items\r\n *                              {string | function} [order] Order the items by\r\n *                                  a field name or custom sort function.\r\n * @return {Object[]} mappedItems\r\n */\r\nDataView.prototype.map = function (callback,options) {\r\n  var mappedItems = [];\r\n  if (this._data) {\r\n    var defaultFilter = this._options.filter;\r\n    var filter;\r\n\r\n    if (options && options.filter) {\r\n      if (defaultFilter) {\r\n        filter = function (item) {\r\n          return defaultFilter(item) && options.filter(item);\r\n        }\r\n      }\r\n      else {\r\n        filter = options.filter;\r\n      }\r\n    }\r\n    else {\r\n      filter = defaultFilter;\r\n    }\r\n\r\n    mappedItems = this._data.map(callback,{\r\n      filter: filter,\r\n      order: options && options.order\r\n    });\r\n  }\r\n  else {\r\n    mappedItems = [];\r\n  }\r\n\r\n  return mappedItems;\r\n};\r\n\r\n/**\r\n * Get the DataSet to which this DataView is connected. In case there is a chain\r\n * of multiple DataViews, the root DataSet of this chain is returned.\r\n * @return {DataSet} dataSet\r\n */\r\nDataView.prototype.getDataSet = function () {\r\n  var dataSet = this;\r\n  while (dataSet instanceof DataView) {\r\n    dataSet = dataSet._data;\r\n  }\r\n  return dataSet || null;\r\n};\r\n\r\n/**\r\n * Event listener. Will propagate all events from the connected data set to\r\n * the subscribers of the DataView, but will filter the items and only trigger\r\n * when there are changes in the filtered data set.\r\n * @param {string} event\r\n * @param {Object | null} params\r\n * @param {string} senderId\r\n * @private\r\n */\r\nDataView.prototype._onEvent = function (event, params, senderId) {\r\n  var i, len, id, item;\r\n  var ids = params && params.items;\r\n  var addedIds = [],\r\n      updatedIds = [],\r\n      removedIds = [],\r\n      oldItems = [],\r\n      updatedItems = [],\r\n      removedItems = [];\r\n\r\n  if (ids && this._data) {\r\n    switch (event) {\r\n      case 'add':\r\n        // filter the ids of the added items\r\n        for (i = 0, len = ids.length; i < len; i++) {\r\n          id = ids[i];\r\n          item = this.get(id);\r\n          if (item) {\r\n            this._ids[id] = true;\r\n            addedIds.push(id);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case 'update':\r\n        // determine the event from the views viewpoint: an updated\r\n        // item can be added, updated, or removed from this view.\r\n        for (i = 0, len = ids.length; i < len; i++) {\r\n          id = ids[i];\r\n          item = this.get(id);\r\n\r\n          if (item) {\r\n            if (this._ids[id]) {\r\n              updatedIds.push(id);\r\n              updatedItems.push(params.data[i]);\r\n              oldItems.push(params.oldData[i]);\r\n            }\r\n            else {\r\n              this._ids[id] = true;\r\n              addedIds.push(id);\r\n            }\r\n          }\r\n          else {\r\n            if (this._ids[id]) {\r\n              delete this._ids[id];\r\n              removedIds.push(id);\r\n              removedItems.push(params.oldData[i]);\r\n            }\r\n            else {\r\n              // nothing interesting for me :-(\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case 'remove':\r\n        // filter the ids of the removed items\r\n        for (i = 0, len = ids.length; i < len; i++) {\r\n          id = ids[i];\r\n          if (this._ids[id]) {\r\n            delete this._ids[id];\r\n            removedIds.push(id);\r\n            removedItems.push(params.oldData[i]);\r\n          }\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    this.length += addedIds.length - removedIds.length;\r\n\r\n    if (addedIds.length) {\r\n      this._trigger('add', {items: addedIds}, senderId);\r\n    }\r\n    if (updatedIds.length) {\r\n      this._trigger('update', {items: updatedIds, oldData: oldItems, data: updatedItems}, senderId);\r\n    }\r\n    if (removedIds.length) {\r\n      this._trigger('remove', {items: removedIds, oldData: removedItems}, senderId);\r\n    }\r\n  }\r\n};\r\n\r\n// copy subscription functionality from DataSet\r\nDataView.prototype.on = DataSet.prototype.on;\r\nDataView.prototype.off = DataSet.prototype.off;\r\nDataView.prototype._trigger = DataSet.prototype._trigger;\r\n\r\n// TODO: make these functions deprecated (replaced with `on` and `off` since version 0.5)\r\nDataView.prototype.subscribe = DataView.prototype.on;\r\nDataView.prototype.unsubscribe = DataView.prototype.off;\r\n\r\nmodule.exports = DataView;\r\n","\"use strict\";\r\n/**\r\n * Created by Alex on 11/6/2014.\r\n */\r\n\r\n// https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60\r\n// if the module has no dependencies, the above pattern can be simplified to\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.keycharm = factory();\r\n  }\r\n}(this, function () {\r\n\r\n  function keycharm(options) {\r\n    var preventDefault = options && options.preventDefault || false;\r\n\r\n    var container = options && options.container || window;\r\n\r\n    var _exportFunctions = {};\r\n    var _bound = {keydown:{}, keyup:{}};\r\n    var _keys = {};\r\n    var i;\r\n\r\n    // a - z\r\n    for (i = 97; i <= 122; i++) {_keys[String.fromCharCode(i)] = {code:65 + (i - 97), shift: false};}\r\n    // A - Z\r\n    for (i = 65; i <= 90; i++) {_keys[String.fromCharCode(i)] = {code:i, shift: true};}\r\n    // 0 - 9\r\n    for (i = 0;  i <= 9;   i++) {_keys['' + i] = {code:48 + i, shift: false};}\r\n    // F1 - F12\r\n    for (i = 1;  i <= 12;   i++) {_keys['F' + i] = {code:111 + i, shift: false};}\r\n    // num0 - num9\r\n    for (i = 0;  i <= 9;   i++) {_keys['num' + i] = {code:96 + i, shift: false};}\r\n\r\n    // numpad misc\r\n    _keys['num*'] = {code:106, shift: false};\r\n    _keys['num+'] = {code:107, shift: false};\r\n    _keys['num-'] = {code:109, shift: false};\r\n    _keys['num/'] = {code:111, shift: false};\r\n    _keys['num.'] = {code:110, shift: false};\r\n    // arrows\r\n    _keys['left']  = {code:37, shift: false};\r\n    _keys['up']    = {code:38, shift: false};\r\n    _keys['right'] = {code:39, shift: false};\r\n    _keys['down']  = {code:40, shift: false};\r\n    // extra keys\r\n    _keys['space'] = {code:32, shift: false};\r\n    _keys['enter'] = {code:13, shift: false};\r\n    _keys['shift'] = {code:16, shift: undefined};\r\n    _keys['esc']   = {code:27, shift: false};\r\n    _keys['backspace'] = {code:8, shift: false};\r\n    _keys['tab']       = {code:9, shift: false};\r\n    _keys['ctrl']      = {code:17, shift: false};\r\n    _keys['alt']       = {code:18, shift: false};\r\n    _keys['delete']    = {code:46, shift: false};\r\n    _keys['pageup']    = {code:33, shift: false};\r\n    _keys['pagedown']  = {code:34, shift: false};\r\n    // symbols\r\n    _keys['=']     = {code:187, shift: false};\r\n    _keys['-']     = {code:189, shift: false};\r\n    _keys[']']     = {code:221, shift: false};\r\n    _keys['[']     = {code:219, shift: false};\r\n\r\n\r\n\r\n    var down = function(event) {handleEvent(event,'keydown');};\r\n    var up = function(event) {handleEvent(event,'keyup');};\r\n\r\n    // handle the actualy bound key with the event\r\n    var handleEvent = function(event,type) {\r\n      if (_bound[type][event.keyCode] !== undefined) {\r\n        var bound = _bound[type][event.keyCode];\r\n        for (var i = 0; i < bound.length; i++) {\r\n          if (bound[i].shift === undefined) {\r\n            bound[i].fn(event);\r\n          }\r\n          else if (bound[i].shift == true && event.shiftKey == true) {\r\n            bound[i].fn(event);\r\n          }\r\n          else if (bound[i].shift == false && event.shiftKey == false) {\r\n            bound[i].fn(event);\r\n          }\r\n        }\r\n\r\n        if (preventDefault == true) {\r\n          event.preventDefault();\r\n        }\r\n      }\r\n    };\r\n\r\n    // bind a key to a callback\r\n    _exportFunctions.bind = function(key, callback, type) {\r\n      if (type === undefined) {\r\n        type = 'keydown';\r\n      }\r\n      if (_keys[key] === undefined) {\r\n        throw new Error(\"unsupported key: \" + key);\r\n      }\r\n      if (_bound[type][_keys[key].code] === undefined) {\r\n        _bound[type][_keys[key].code] = [];\r\n      }\r\n      _bound[type][_keys[key].code].push({fn:callback, shift:_keys[key].shift});\r\n    };\r\n\r\n\r\n    // bind all keys to a call back (demo purposes)\r\n    _exportFunctions.bindAll = function(callback, type) {\r\n      if (type === undefined) {\r\n        type = 'keydown';\r\n      }\r\n      for (var key in _keys) {\r\n        if (_keys.hasOwnProperty(key)) {\r\n          _exportFunctions.bind(key,callback,type);\r\n        }\r\n      }\r\n    };\r\n\r\n    // get the key label from an event\r\n    _exportFunctions.getKey = function(event) {\r\n      for (var key in _keys) {\r\n        if (_keys.hasOwnProperty(key)) {\r\n          if (event.shiftKey == true && _keys[key].shift == true && event.keyCode == _keys[key].code) {\r\n            return key;\r\n          }\r\n          else if (event.shiftKey == false && _keys[key].shift == false && event.keyCode == _keys[key].code) {\r\n            return key;\r\n          }\r\n          else if (event.keyCode == _keys[key].code && key == 'shift') {\r\n            return key;\r\n          }\r\n        }\r\n      }\r\n      return \"unknown key, currently not supported\";\r\n    };\r\n\r\n    // unbind either a specific callback from a key or all of them (by leaving callback undefined)\r\n    _exportFunctions.unbind = function(key, callback, type) {\r\n      if (type === undefined) {\r\n        type = 'keydown';\r\n      }\r\n      if (_keys[key] === undefined) {\r\n        throw new Error(\"unsupported key: \" + key);\r\n      }\r\n      if (callback !== undefined) {\r\n        var newBindings = [];\r\n        var bound = _bound[type][_keys[key].code];\r\n        if (bound !== undefined) {\r\n          for (var i = 0; i < bound.length; i++) {\r\n            if (!(bound[i].fn == callback && bound[i].shift == _keys[key].shift)) {\r\n              newBindings.push(_bound[type][_keys[key].code][i]);\r\n            }\r\n          }\r\n        }\r\n        _bound[type][_keys[key].code] = newBindings;\r\n      }\r\n      else {\r\n        _bound[type][_keys[key].code] = [];\r\n      }\r\n    };\r\n\r\n    // reset all bound variables.\r\n    _exportFunctions.reset = function() {\r\n      _bound = {keydown:{}, keyup:{}};\r\n    };\r\n\r\n    // unbind all listeners and reset all variables.\r\n    _exportFunctions.destroy = function() {\r\n      _bound = {keydown:{}, keyup:{}};\r\n      container.removeEventListener('keydown', down, true);\r\n      container.removeEventListener('keyup', up, true);\r\n    };\r\n\r\n    // create listeners.\r\n    container.addEventListener('keydown',down,true);\r\n    container.addEventListener('keyup',up,true);\r\n\r\n    // return the public functions.\r\n    return _exportFunctions;\r\n  }\r\n\r\n  return keycharm;\r\n}));\r\n\r\n\r\n","var util = require('../util');\r\n\r\nlet errorFound = false;\r\nlet allOptions;\r\nlet printStyle = 'background: #FFeeee; color: #dd0000';\r\n/**\r\n *  Used to validate options.\r\n */\r\nclass Validator {\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Main function to be called\r\n   * @param {Object} options\r\n   * @param {Object} referenceOptions\r\n   * @param {Object} subObject\r\n   * @returns {boolean}\r\n   * @static\r\n   */\r\n  static validate(options, referenceOptions, subObject) {\r\n    errorFound = false;\r\n    allOptions = referenceOptions;\r\n    let usedOptions = referenceOptions;\r\n    if (subObject !== undefined) {\r\n      usedOptions = referenceOptions[subObject];\r\n    }\r\n    Validator.parse(options, usedOptions, []);\r\n    return errorFound;\r\n  }\r\n\r\n\r\n  /**\r\n   * Will traverse an object recursively and check every value\r\n   * @param {Object} options\r\n   * @param {Object} referenceOptions\r\n   * @param {array} path    | where to look for the actual option\r\n   * @static\r\n   */\r\n  static parse(options, referenceOptions, path) {\r\n    for (let option in options) {\r\n      if (options.hasOwnProperty(option)) {\r\n        Validator.check(option, options, referenceOptions, path);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check every value. If the value is an object, call the parse function on that object.\r\n   * @param {string} option\r\n   * @param {Object} options\r\n   * @param {Object} referenceOptions\r\n   * @param {array} path    | where to look for the actual option\r\n   * @static\r\n   */\r\n  static check(option, options, referenceOptions, path) {\r\n    if (referenceOptions[option] === undefined && referenceOptions.__any__ === undefined) {\r\n      Validator.getSuggestion(option, referenceOptions, path);\r\n      return;\r\n    }\r\n\r\n    let referenceOption = option;\r\n    let is_object = true;\r\n\r\n    if (referenceOptions[option] === undefined && referenceOptions.__any__ !== undefined) {\r\n      // NOTE: This only triggers if the __any__ is in the top level of the options object.\r\n      //       THAT'S A REALLY BAD PLACE TO ALLOW IT!!!!\r\n      // TODO: Examine if needed, remove if possible\r\n\r\n      // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.\r\n      referenceOption = '__any__';\r\n\r\n      // if the any-subgroup is not a predefined object in the configurator,\r\n      // we do not look deeper into the object.\r\n      is_object = (Validator.getType(options[option]) === 'object');\r\n    }\r\n    else {\r\n      // Since all options in the reference are objects, we can check whether \r\n      // they are supposed to be the object to look for the __type__ field.\r\n      // if this is an object, we check if the correct type has been supplied to account for shorthand options.\r\n    }\r\n\r\n    let refOptionObj = referenceOptions[referenceOption];\r\n    if (is_object && refOptionObj.__type__ !== undefined) {\r\n      refOptionObj = refOptionObj.__type__;\r\n    }\r\n\r\n    Validator.checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string}  option           | the option property\r\n   * @param {Object}  options          | The supplied options object\r\n   * @param {Object}  referenceOptions | The reference options containing all options and their allowed formats\r\n   * @param {string}  referenceOption  | Usually this is the same as option, except when handling an __any__ tag.\r\n   * @param {string}  refOptionObj     | This is the type object from the reference options\r\n   * @param {Array}   path             | where in the object is the option\r\n   * @static\r\n   */\r\n  static checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path) {\r\n    let log = function(message) {\r\n      console.log('%c' + message + Validator.printLocation(path, option), printStyle);\r\n    };\r\n\r\n    let optionType = Validator.getType(options[option]);\r\n    let refOptionType = refOptionObj[optionType];\r\n\r\n    if (refOptionType !== undefined) {\r\n      // if the type is correct, we check if it is supposed to be one of a few select values\r\n      if (Validator.getType(refOptionType) === 'array' && refOptionType.indexOf(options[option]) === -1) {\r\n        log('Invalid option detected in \"' + option + '\".' +\r\n          ' Allowed values are:' + Validator.print(refOptionType) +\r\n          ' not \"' + options[option] + '\". ');\r\n        errorFound = true;\r\n      }\r\n      else if (optionType === 'object' && referenceOption !== \"__any__\") {\r\n        path = util.copyAndExtendArray(path, option);\r\n        Validator.parse(options[option], referenceOptions[referenceOption], path);\r\n      }\r\n    }\r\n    else if (refOptionObj['any'] === undefined) {\r\n      // type of the field is incorrect and the field cannot be any\r\n      log('Invalid type received for \"' + option +\r\n        '\". Expected: ' + Validator.print(Object.keys(refOptionObj)) +\r\n        '. Received ['  + optionType + '] \"' + options[option] + '\"');\r\n      errorFound = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object|boolean|number|string|Array.<number>|Date|Node|Moment|undefined|null} object\r\n   * @returns {string}\r\n   * @static\r\n   */\r\n  static getType(object) {\r\n    var type = typeof object;\r\n\r\n    if (type === 'object') {\r\n      if (object === null) {\r\n        return 'null';\r\n      }\r\n      if (object instanceof Boolean) {\r\n        return 'boolean';\r\n      }\r\n      if (object instanceof Number) {\r\n        return 'number';\r\n      }\r\n      if (object instanceof String) {\r\n        return 'string';\r\n      }\r\n      if (Array.isArray(object)) {\r\n        return 'array';\r\n      }\r\n      if (object instanceof Date) {\r\n        return 'date';\r\n      }\r\n      if (object.nodeType !== undefined) {\r\n        return 'dom';\r\n      }\r\n      if (object._isAMomentObject === true) {\r\n        return 'moment';\r\n      }\r\n      return 'object';\r\n    }\r\n    else if (type === 'number') {\r\n      return 'number';\r\n    }\r\n    else if (type === 'boolean') {\r\n      return 'boolean';\r\n    }\r\n    else if (type === 'string') {\r\n      return 'string';\r\n    }\r\n    else if (type === undefined) {\r\n      return 'undefined';\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * @param {string} option\r\n   * @param {Object} options\r\n   * @param {Array.<string>} path\r\n   * @static\r\n   */\r\n  static getSuggestion(option, options, path) {\r\n    let localSearch = Validator.findInOptions(option,options,path,false);\r\n    let globalSearch = Validator.findInOptions(option,allOptions,[],true);\r\n\r\n    let localSearchThreshold = 8;\r\n    let globalSearchThreshold = 4;\r\n\r\n    let msg;\r\n    if (localSearch.indexMatch !== undefined) {\r\n      msg = ' in ' + Validator.printLocation(localSearch.path, option,'') +\r\n        'Perhaps it was incomplete? Did you mean: \"' + localSearch.indexMatch + '\"?\\n\\n';\r\n    }\r\n    else if (globalSearch.distance <= globalSearchThreshold && localSearch.distance > globalSearch.distance) {\r\n      msg = ' in ' + Validator.printLocation(localSearch.path, option,'') +\r\n        'Perhaps it was misplaced? Matching option found at: ' +\r\n        Validator.printLocation(globalSearch.path, globalSearch.closestMatch,'');\r\n    }\r\n    else if (localSearch.distance <= localSearchThreshold) {\r\n      msg = '. Did you mean \"' + localSearch.closestMatch + '\"?' +\r\n        Validator.printLocation(localSearch.path, option);\r\n    }\r\n    else {\r\n      msg = '. Did you mean one of these: ' + Validator.print(Object.keys(options)) +\r\n      Validator.printLocation(path, option);\r\n    }\r\n\r\n    console.log('%cUnknown option detected: \"' + option + '\"' + msg, printStyle);\r\n    errorFound = true;\r\n  }\r\n\r\n  /**\r\n   * traverse the options in search for a match.\r\n   * @param {string} option\r\n   * @param {Object} options\r\n   * @param {Array} path    | where to look for the actual option\r\n   * @param {boolean} [recursive=false]\r\n   * @returns {{closestMatch: string, path: Array, distance: number}}\r\n   * @static\r\n   */\r\n  static findInOptions(option, options, path, recursive = false) {\r\n    let min = 1e9;\r\n    let closestMatch = '';\r\n    let closestMatchPath = [];\r\n    let lowerCaseOption = option.toLowerCase();\r\n    let indexMatch = undefined;\r\n    for (let op in options) {  // eslint-disable-line guard-for-in\r\n      let distance;\r\n      if (options[op].__type__ !== undefined && recursive === true) {\r\n        let result = Validator.findInOptions(option, options[op], util.copyAndExtendArray(path,op));\r\n        if (min > result.distance) {\r\n          closestMatch = result.closestMatch;\r\n          closestMatchPath = result.path;\r\n          min = result.distance;\r\n          indexMatch = result.indexMatch;\r\n        }\r\n      }\r\n      else {\r\n        if (op.toLowerCase().indexOf(lowerCaseOption) !== -1) {\r\n          indexMatch = op;\r\n        }\r\n        distance = Validator.levenshteinDistance(option, op);\r\n        if (min > distance) {\r\n          closestMatch = op;\r\n          closestMatchPath = util.copyArray(path);\r\n          min = distance;\r\n        }\r\n      }\r\n    }\r\n    return {closestMatch:closestMatch, path:closestMatchPath, distance:min, indexMatch: indexMatch};\r\n  }\r\n\r\n  /**\r\n   * @param {Array.<string>} path\r\n   * @param {Object} option\r\n   * @param {string} prefix\r\n   * @returns {String}\r\n   * @static\r\n   */\r\n  static printLocation(path, option, prefix = 'Problem value found at: \\n') {\r\n    let str = '\\n\\n' + prefix + 'options = {\\n';\r\n    for (let i = 0; i < path.length; i++) {\r\n      for (let j = 0; j < i + 1; j++) {\r\n        str += '  ';\r\n      }\r\n      str += path[i] + ': {\\n'\r\n    }\r\n    for (let j = 0; j < path.length + 1; j++) {\r\n      str += '  ';\r\n    }\r\n    str += option + '\\n';\r\n    for (let i = 0; i < path.length + 1; i++) {\r\n      for (let j = 0; j < path.length - i; j++) {\r\n        str += '  ';\r\n      }\r\n      str += '}\\n'\r\n    }\r\n    return str + '\\n\\n';\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   * @returns {String}\r\n   * @static\r\n   */\r\n  static print(options) {\r\n    return JSON.stringify(options).replace(/(\\\")|(\\[)|(\\])|(,\"__type__\")/g, \"\").replace(/(\\,)/g, ', ')\r\n  }\r\n\r\n\r\n  /**\r\n   *  Compute the edit distance between the two given strings\r\n   * http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript\r\n   *\r\n   * Copyright (c) 2011 Andrei Mackenzie\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n   *\r\n   * @param {string} a\r\n   * @param {string} b\r\n   * @returns {Array.<Array.<number>>}}\r\n   * @static\r\n   */\r\n  static levenshteinDistance(a, b) {\r\n    if (a.length === 0) return b.length;\r\n    if (b.length === 0) return a.length;\r\n\r\n    var matrix = [];\r\n\r\n    // increment along the first column of each row\r\n    var i;\r\n    for (i = 0; i <= b.length; i++) {\r\n      matrix[i] = [i];\r\n    }\r\n\r\n    // increment each column in the first row\r\n    var j;\r\n    for (j = 0; j <= a.length; j++) {\r\n      matrix[0][j] = j;\r\n    }\r\n\r\n    // Fill in the rest of the matrix\r\n    for (i = 1; i <= b.length; i++) {\r\n      for (j = 1; j <= a.length; j++) {\r\n        if (b.charAt(i - 1) == a.charAt(j - 1)) {\r\n          matrix[i][j] = matrix[i - 1][j - 1];\r\n        } else {\r\n          matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\r\n            Math.min(matrix[i][j - 1] + 1, // insertion\r\n              matrix[i - 1][j] + 1)); // deletion\r\n        }\r\n      }\r\n    }\r\n\r\n    return matrix[b.length][a.length];\r\n  }\r\n}\r\n\r\n\r\nexport default Validator;\r\nexport {printStyle}\r\n","var util = require('../../../util');\r\nvar Label = require('./shared/Label').default;\r\nvar ComponentUtil = require('./shared/ComponentUtil').default;\r\nvar CubicBezierEdge = require('./edges/CubicBezierEdge').default;\r\nvar BezierEdgeDynamic = require('./edges/BezierEdgeDynamic').default;\r\nvar BezierEdgeStatic = require('./edges/BezierEdgeStatic').default;\r\nvar StraightEdge = require('./edges/StraightEdge').default;\r\n\r\n\r\n/**\r\n * An edge connects two nodes and has a specific direction.\r\n */\r\nclass Edge {\r\n  /**\r\n   * @param {Object} options        values specific to this edge, must contain at least 'from' and 'to'\r\n   * @param {Object} body           shared state from Network instance\r\n   * @param {Object} globalOptions  options from the EdgesHandler instance\r\n   * @param {Object} defaultOptions default options from the EdgeHandler instance. Value and reference are constant\r\n   */\r\n  constructor(options, body, globalOptions, defaultOptions) {\r\n    if (body === undefined) {\r\n      throw new Error(\"No body provided\");\r\n    }\r\n\r\n    // Since globalOptions is constant in values as well as reference,\r\n    // Following needs to be done only once.\r\n\r\n    this.options = util.bridgeObject(globalOptions);\r\n    this.globalOptions = globalOptions;\r\n    this.defaultOptions = defaultOptions;\r\n    this.body = body;\r\n\r\n    // initialize variables\r\n    this.id = undefined;\r\n    this.fromId = undefined;\r\n    this.toId = undefined;\r\n    this.selected = false;\r\n    this.hover = false;\r\n    this.labelDirty = true;\r\n\r\n    this.baseWidth = this.options.width;\r\n    this.baseFontSize = this.options.font.size;\r\n\r\n    this.from = undefined; // a node\r\n    this.to   = undefined; // a node\r\n\r\n    this.edgeType = undefined;\r\n\r\n    this.connected = false;\r\n\r\n    this.labelModule = new Label(this.body, this.options, true /* It's an edge label */);\r\n    this.setOptions(options);\r\n  }\r\n\r\n\r\n  /**\r\n   * Set or overwrite options for the edge\r\n   * @param {Object} options  an object with options\r\n   * @returns {null|boolean} null if no options, boolean if date changed\r\n   */\r\n  setOptions(options) {\r\n    if (!options) {\r\n      return;\r\n    }\r\n\r\n    Edge.parseOptions(this.options, options, true, this.globalOptions);\r\n\r\n    if (options.id !== undefined) {\r\n      this.id = options.id;\r\n    }\r\n    if (options.from !== undefined) {\r\n      this.fromId = options.from;\r\n    }\r\n    if (options.to !== undefined) {\r\n      this.toId = options.to;\r\n    }\r\n    if (options.title !== undefined) {\r\n      this.title = options.title;\r\n    }\r\n    if (options.value !== undefined)  {\r\n      options.value = parseFloat(options.value);\r\n    }\r\n\r\n    let pile = [options, this.options, this.defaultOptions];\r\n    this.chooser = ComponentUtil.choosify('edge', pile);\r\n\r\n    // update label Module\r\n    this.updateLabelModule(options);\r\n\r\n    let dataChanged = this.updateEdgeType();\r\n\r\n    // if anything has been updates, reset the selection width and the hover width\r\n    this._setInteractionWidths();\r\n\r\n    // A node is connected when it has a from and to node that both exist in the network.body.nodes.\r\n    this.connect();\r\n\r\n    if (options.hidden !== undefined || options.physics !== undefined) {\r\n      dataChanged = true;\r\n    }\r\n\r\n    return dataChanged;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Object} parentOptions\r\n   * @param {Object} newOptions\r\n   * @param {boolean} [allowDeletion=false]\r\n   * @param {Object} [globalOptions={}]\r\n   * @param {boolean} [copyFromGlobals=false]\r\n   */\r\n  static parseOptions(parentOptions, newOptions, allowDeletion = false, globalOptions = {}, copyFromGlobals = false) {\r\n    var fields = [\r\n      'arrowStrikethrough',\r\n      'id',\r\n      'from',\r\n      'hidden',\r\n      'hoverWidth',\r\n      'labelHighlightBold',\r\n      'length',\r\n      'line',\r\n      'opacity',\r\n      'physics',\r\n      'scaling',\r\n      'selectionWidth',\r\n      'selfReferenceSize',\r\n      'to',\r\n      'title',\r\n      'value',\r\n      'width',\r\n      'font',\r\n      'chosen',\r\n      'widthConstraint'\r\n    ];\r\n\r\n    // only deep extend the items in the field array. These do not have shorthand.\r\n    util.selectiveDeepExtend(fields, parentOptions, newOptions, allowDeletion);\r\n\r\n    // Only copy label if it's a legal value.\r\n    if (ComponentUtil.isValidLabel(newOptions.label)) {\r\n      parentOptions.label = newOptions.label;\r\n    } else {\r\n      parentOptions.label = undefined;\r\n    }\r\n\r\n    util.mergeOptions(parentOptions, newOptions, 'smooth', globalOptions);\r\n    util.mergeOptions(parentOptions, newOptions, 'shadow', globalOptions);\r\n\r\n    if (newOptions.dashes !== undefined && newOptions.dashes !== null) {\r\n      parentOptions.dashes = newOptions.dashes;\r\n    }\r\n    else if (allowDeletion === true && newOptions.dashes === null) {\r\n      parentOptions.dashes = Object.create(globalOptions.dashes); // this sets the pointer of the option back to the global option.\r\n    }\r\n\r\n    // set the scaling newOptions\r\n    if (newOptions.scaling !== undefined && newOptions.scaling !== null) {\r\n      if (newOptions.scaling.min !== undefined) {parentOptions.scaling.min = newOptions.scaling.min;}\r\n      if (newOptions.scaling.max !== undefined) {parentOptions.scaling.max = newOptions.scaling.max;}\r\n      util.mergeOptions(parentOptions.scaling, newOptions.scaling, 'label', globalOptions.scaling);\r\n    }\r\n    else if (allowDeletion === true && newOptions.scaling === null) {\r\n      parentOptions.scaling = Object.create(globalOptions.scaling); // this sets the pointer of the option back to the global option.\r\n    }\r\n\r\n    // handle multiple input cases for arrows\r\n    if (newOptions.arrows !== undefined && newOptions.arrows !== null) {\r\n      if (typeof newOptions.arrows === 'string') {\r\n        let arrows = newOptions.arrows.toLowerCase();\r\n        parentOptions.arrows.to.enabled     = arrows.indexOf(\"to\")     != -1;\r\n        parentOptions.arrows.middle.enabled = arrows.indexOf(\"middle\") != -1;\r\n        parentOptions.arrows.from.enabled   = arrows.indexOf(\"from\")   != -1;\r\n      }\r\n      else if (typeof newOptions.arrows === 'object') {\r\n        util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'to',     globalOptions.arrows);\r\n        util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'middle', globalOptions.arrows);\r\n        util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'from',   globalOptions.arrows);\r\n      }\r\n      else {\r\n        throw new Error(\"The arrow newOptions can only be an object or a string. Refer to the documentation. You used:\" + JSON.stringify(newOptions.arrows));\r\n      }\r\n    }\r\n    else if (allowDeletion === true && newOptions.arrows === null) {\r\n      parentOptions.arrows = Object.create(globalOptions.arrows); // this sets the pointer of the option back to the global option.\r\n    }\r\n\r\n    // handle multiple input cases for color\r\n    if (newOptions.color !== undefined && newOptions.color !== null) {\r\n      let fromColor = newOptions.color;\r\n      let toColor   = parentOptions.color;\r\n\r\n      // If passed, fill in values from default options - required in the case of no prototype bridging\r\n      if (copyFromGlobals) {\r\n        util.deepExtend(toColor, globalOptions.color, false, allowDeletion);\r\n      } else {\r\n        // Clear local properties - need to do it like this in order to retain prototype bridges\r\n        for (var i in toColor) {\r\n          if (toColor.hasOwnProperty(i)) {\r\n            delete toColor[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      if (util.isString(toColor)) {\r\n        toColor.color     = toColor;\r\n        toColor.highlight = toColor;\r\n        toColor.hover     = toColor;\r\n        toColor.inherit   = false;\r\n        if (fromColor.opacity === undefined) {\r\n          toColor.opacity = 1.0;  // set default\r\n        }\r\n      }\r\n      else {\r\n        let colorsDefined = false;\r\n        if (fromColor.color     !== undefined) {toColor.color     = fromColor.color;     colorsDefined = true;}\r\n        if (fromColor.highlight !== undefined) {toColor.highlight = fromColor.highlight; colorsDefined = true;}\r\n        if (fromColor.hover     !== undefined) {toColor.hover     = fromColor.hover;     colorsDefined = true;}\r\n        if (fromColor.inherit   !== undefined) {toColor.inherit   = fromColor.inherit;}\r\n        if (fromColor.opacity   !== undefined) {toColor.opacity   = Math.min(1,Math.max(0,fromColor.opacity));}\r\n\r\n        if (colorsDefined === true) {\r\n          toColor.inherit = false;\r\n        } else {\r\n          if (toColor.inherit === undefined) {\r\n            toColor.inherit = 'from';  // Set default\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (allowDeletion === true && newOptions.color === null) {\r\n      parentOptions.color = util.bridgeObject(globalOptions.color); // set the object back to the global options\r\n    }\r\n\r\n    if (allowDeletion === true && newOptions.font === null) {\r\n      parentOptions.font = util.bridgeObject(globalOptions.font); // set the object back to the global options\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}}\r\n   */\r\n  getFormattingValues() {\r\n    let toArrow = (this.options.arrows.to === true) || (this.options.arrows.to.enabled === true)\r\n    let fromArrow = (this.options.arrows.from === true) || (this.options.arrows.from.enabled === true)\r\n    let middleArrow = (this.options.arrows.middle === true) || (this.options.arrows.middle.enabled === true)\r\n    let inheritsColor = this.options.color.inherit;\r\n    let values = {\r\n      toArrow: toArrow,\r\n      toArrowScale: this.options.arrows.to.scaleFactor,\r\n      toArrowType: this.options.arrows.to.type,\r\n      middleArrow: middleArrow,\r\n      middleArrowScale: this.options.arrows.middle.scaleFactor,\r\n      middleArrowType: this.options.arrows.middle.type,\r\n      fromArrow: fromArrow,\r\n      fromArrowScale: this.options.arrows.from.scaleFactor,\r\n      fromArrowType: this.options.arrows.from.type,\r\n      arrowStrikethrough: this.options.arrowStrikethrough,\r\n      color: (inheritsColor? undefined : this.options.color.color),\r\n      inheritsColor: inheritsColor,\r\n      opacity: this.options.color.opacity,\r\n      hidden: this.options.hidden,\r\n      length: this.options.length,\r\n      shadow: this.options.shadow.enabled,\r\n      shadowColor: this.options.shadow.color,\r\n      shadowSize: this.options.shadow.size,\r\n      shadowX: this.options.shadow.x,\r\n      shadowY: this.options.shadow.y,\r\n      dashes: this.options.dashes,\r\n      width: this.options.width\r\n    };\r\n    if (this.selected || this.hover) {\r\n      if (this.chooser === true) {\r\n        if (this.selected) {\r\n          let selectedWidth = this.options.selectionWidth;\r\n          if (typeof selectedWidth === 'function') {\r\n            values.width = selectedWidth(values.width);\r\n          } else if (typeof selectedWidth === 'number') {\r\n            values.width += selectedWidth;\r\n          }\r\n          values.width = Math.max(values.width, 0.3 / this.body.view.scale);\r\n          values.color = this.options.color.highlight;\r\n          values.shadow = this.options.shadow.enabled;\r\n        } else if (this.hover) {\r\n          let hoverWidth = this.options.hoverWidth;\r\n          if (typeof hoverWidth === 'function') {\r\n            values.width = hoverWidth(values.width);\r\n          } else if (typeof hoverWidth === 'number') {\r\n            values.width += hoverWidth;\r\n          }\r\n          values.width = Math.max(values.width, 0.3 / this.body.view.scale);\r\n          values.color = this.options.color.hover;\r\n          values.shadow = this.options.shadow.enabled;\r\n        }\r\n      } else if (typeof this.chooser === 'function') {\r\n        this.chooser(values, this.options.id, this.selected, this.hover);\r\n        if (values.color !== undefined) {\r\n          values.inheritsColor = false;\r\n        }\r\n        if (values.shadow === false) {\r\n          if ((values.shadowColor !== this.options.shadow.color) ||\r\n              (values.shadowSize !== this.options.shadow.size) ||\r\n              (values.shadowX !== this.options.shadow.x) ||\r\n              (values.shadowY !== this.options.shadow.y)) {\r\n            values.shadow = true;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      values.shadow = this.options.shadow.enabled;\r\n      values.width = Math.max(values.width, 0.3 / this.body.view.scale);\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * update the options in the label module\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  updateLabelModule(options) {\r\n    let pile = [\r\n      options,\r\n      this.options,\r\n      this.globalOptions,  // Currently set global edge options\r\n      this.defaultOptions\r\n    ];\r\n\r\n    this.labelModule.update(this.options, pile);\r\n\r\n    if (this.labelModule.baseSize !== undefined) {\r\n      this.baseFontSize = this.labelModule.baseSize;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * update the edge type, set the options\r\n   * @returns {boolean}\r\n   */\r\n  updateEdgeType() {\r\n    let smooth = this.options.smooth;\r\n    let dataChanged = false;\r\n    let changeInType = true;\r\n    if (this.edgeType !== undefined) {\r\n      if ((((this.edgeType instanceof BezierEdgeDynamic) &&\r\n            (smooth.enabled === true) &&\r\n            (smooth.type === 'dynamic'))) ||\r\n          (((this.edgeType instanceof CubicBezierEdge) &&\r\n            (smooth.enabled === true) &&\r\n            (smooth.type === 'cubicBezier'))) ||\r\n          (((this.edgeType instanceof BezierEdgeStatic) &&\r\n            (smooth.enabled === true) &&\r\n            (smooth.type !== 'dynamic') &&\r\n            (smooth.type !== 'cubicBezier'))) ||\r\n          (((this.edgeType instanceof StraightEdge) &&\r\n            (smooth.type.enabled === false)))) {\r\n        changeInType = false;\r\n      }\r\n      if (changeInType === true) {\r\n        dataChanged = this.cleanup();\r\n      }\r\n    }\r\n    if (changeInType === true) {\r\n      if (smooth.enabled === true) {\r\n        if (smooth.type === 'dynamic') {\r\n          dataChanged = true;\r\n          this.edgeType = new BezierEdgeDynamic(this.options, this.body, this.labelModule);\r\n        } else if (smooth.type === 'cubicBezier') {\r\n          this.edgeType = new CubicBezierEdge(this.options, this.body, this.labelModule);\r\n        } else {\r\n          this.edgeType = new BezierEdgeStatic(this.options, this.body, this.labelModule);\r\n        }\r\n      } else {\r\n        this.edgeType = new StraightEdge(this.options, this.body, this.labelModule);\r\n      }\r\n    } else { // if nothing changes, we just set the options.\r\n      this.edgeType.setOptions(this.options);\r\n    }\r\n    return dataChanged;\r\n  }\r\n\r\n  /**\r\n   * Connect an edge to its nodes\r\n   */\r\n  connect() {\r\n    this.disconnect();\r\n\r\n    this.from = this.body.nodes[this.fromId] || undefined;\r\n    this.to = this.body.nodes[this.toId] || undefined;\r\n    this.connected = (this.from !== undefined && this.to !== undefined);\r\n\r\n    if (this.connected === true) {\r\n      this.from.attachEdge(this);\r\n      this.to.attachEdge(this);\r\n    }\r\n    else {\r\n      if (this.from) {\r\n        this.from.detachEdge(this);\r\n      }\r\n      if (this.to) {\r\n        this.to.detachEdge(this);\r\n      }\r\n    }\r\n\r\n    this.edgeType.connect();\r\n  }\r\n\r\n\r\n  /**\r\n   * Disconnect an edge from its nodes\r\n   */\r\n  disconnect() {\r\n    if (this.from) {\r\n      this.from.detachEdge(this);\r\n      this.from = undefined;\r\n    }\r\n    if (this.to) {\r\n      this.to.detachEdge(this);\r\n      this.to = undefined;\r\n    }\r\n\r\n    this.connected = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * get the title of this edge.\r\n   * @return {string} title    The title of the edge, or undefined when no title\r\n   *                           has been set.\r\n   */\r\n  getTitle() {\r\n    return this.title;\r\n  }\r\n\r\n\r\n  /**\r\n   * check if this node is selecte\r\n   * @return {boolean} selected   True if node is selected, else false\r\n   */\r\n  isSelected() {\r\n    return this.selected;\r\n  }\r\n\r\n\r\n  /**\r\n   * Retrieve the value of the edge. Can be undefined\r\n   * @return {number} value\r\n   */\r\n  getValue() {\r\n    return this.options.value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Adjust the value range of the edge. The edge will adjust it's width\r\n   * based on its value.\r\n   * @param {number} min\r\n   * @param {number} max\r\n   * @param {number} total\r\n   */\r\n  setValueRange(min, max, total) {\r\n    if (this.options.value !== undefined) {\r\n      var scale = this.options.scaling.customScalingFunction(min, max, total, this.options.value);\r\n      var widthDiff = this.options.scaling.max - this.options.scaling.min;\r\n      if (this.options.scaling.label.enabled === true) {\r\n        var fontDiff = this.options.scaling.label.max - this.options.scaling.label.min;\r\n        this.options.font.size = this.options.scaling.label.min + scale * fontDiff;\r\n      }\r\n      this.options.width = this.options.scaling.min + scale * widthDiff;\r\n    }\r\n    else {\r\n      this.options.width = this.baseWidth;\r\n      this.options.font.size = this.baseFontSize;\r\n    }\r\n\r\n    this._setInteractionWidths();\r\n    this.updateLabelModule();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _setInteractionWidths() {\r\n    if (typeof this.options.hoverWidth === 'function') {\r\n      this.edgeType.hoverWidth = this.options.hoverWidth(this.options.width);\r\n    } else {\r\n      this.edgeType.hoverWidth = this.options.hoverWidth + this.options.width;\r\n    }\r\n    if (typeof this.options.selectionWidth === 'function') {\r\n      this.edgeType.selectionWidth = this.options.selectionWidth(this.options.width);\r\n    } else {\r\n      this.edgeType.selectionWidth = this.options.selectionWidth + this.options.width;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Redraw a edge\r\n   * Draw this edge in the given canvas\r\n   * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   */\r\n  draw(ctx) {\r\n    let values = this.getFormattingValues();\r\n    if (values.hidden) {\r\n      return;\r\n    }\r\n\r\n    // get the via node from the edge type\r\n    let viaNode = this.edgeType.getViaNode();\r\n    let arrowData = {};\r\n\r\n    // restore edge targets to defaults\r\n    this.edgeType.fromPoint = this.edgeType.from;\r\n    this.edgeType.toPoint = this.edgeType.to;\r\n\r\n    // from and to arrows give a different end point for edges. we set them here\r\n    if (values.fromArrow) {\r\n      arrowData.from = this.edgeType.getArrowData(ctx, 'from', viaNode, this.selected, this.hover, values);\r\n      if (values.arrowStrikethrough === false)\r\n        this.edgeType.fromPoint = arrowData.from.core;\r\n    }\r\n    if (values.toArrow) {\r\n      arrowData.to = this.edgeType.getArrowData(ctx, 'to', viaNode, this.selected, this.hover, values);\r\n      if (values.arrowStrikethrough === false)\r\n        this.edgeType.toPoint = arrowData.to.core;\r\n    }\r\n\r\n    // the middle arrow depends on the line, which can depend on the to and from arrows so we do this one lastly.\r\n    if (values.middleArrow) {\r\n      arrowData.middle = this.edgeType.getArrowData(ctx,'middle', viaNode, this.selected, this.hover, values);\r\n    }\r\n\r\n    // draw everything\r\n    this.edgeType.drawLine(ctx, values, this.selected, this.hover, viaNode);\r\n    this.drawArrows(ctx, arrowData, values);\r\n    this.drawLabel(ctx, viaNode);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Object} arrowData\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  drawArrows(ctx, arrowData, values) {\r\n    if (values.fromArrow) {\r\n      this.edgeType.drawArrowHead(ctx, values, this.selected, this.hover, arrowData.from);\r\n    }\r\n    if (values.middleArrow) {\r\n      this.edgeType.drawArrowHead(ctx, values, this.selected, this.hover, arrowData.middle);\r\n    }\r\n    if (values.toArrow) {\r\n      this.edgeType.drawArrowHead(ctx, values, this.selected, this.hover, arrowData.to);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Node} viaNode\r\n   */\r\n  drawLabel(ctx, viaNode) {\r\n    if (this.options.label !== undefined) {\r\n      // set style\r\n      var node1 = this.from;\r\n      var node2 = this.to;\r\n\r\n      if (this.labelModule.differentState(this.selected, this.hover)) {\r\n        this.labelModule.getTextSize(ctx, this.selected, this.hover);\r\n      }\r\n\r\n      if (node1.id != node2.id) {\r\n        this.labelModule.pointToSelf = false;\r\n        var point = this.edgeType.getPoint(0.5, viaNode);\r\n        ctx.save();\r\n\r\n        let rotationPoint = this._getRotation(ctx);\r\n        if (rotationPoint.angle != 0) {\r\n          ctx.translate(rotationPoint.x, rotationPoint.y);\r\n          ctx.rotate(rotationPoint.angle);\r\n        }\r\n\r\n        // draw the label\r\n        this.labelModule.draw(ctx, point.x, point.y, this.selected, this.hover);\r\n\r\n/*\r\n        // Useful debug code: draw a border around the label\r\n        // This should **not** be enabled in production!\r\n        var size = this.labelModule.getSize();; // ;; intentional so lint catches it\r\n        ctx.strokeStyle = \"#ff0000\";\r\n        ctx.strokeRect(size.left, size.top, size.width, size.height);\r\n        // End  debug code\r\n*/\r\n\r\n        ctx.restore();\r\n      }\r\n      else {\r\n        // Ignore the orientations.\r\n        this.labelModule.pointToSelf = true;\r\n        var x, y;\r\n        var radius = this.options.selfReferenceSize;\r\n        if (node1.shape.width > node1.shape.height) {\r\n          x = node1.x + node1.shape.width * 0.5;\r\n          y = node1.y - radius;\r\n        }\r\n        else {\r\n          x = node1.x + radius;\r\n          y = node1.y - node1.shape.height * 0.5;\r\n        }\r\n        point = this._pointOnCircle(x, y, radius, 0.125);\r\n        this.labelModule.draw(ctx, point.x, point.y, this.selected, this.hover);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine all visual elements of this edge instance, in which the given\r\n   * point falls within the bounding shape.\r\n   *\r\n   * @param {point} point\r\n   * @returns {Array.<edgeClickItem|edgeLabelClickItem>} list with the items which are on the point\r\n   */\r\n  getItemsOnPoint(point) {\r\n    var ret = [];\r\n\r\n    if (this.labelModule.visible()) {\r\n      let rotationPoint = this._getRotation();\r\n      if (ComponentUtil.pointInRect(this.labelModule.getSize(), point, rotationPoint)) {\r\n        ret.push({edgeId:this.id, labelId:0});\r\n      }\r\n    }\r\n\r\n    let obj = {\r\n      left: point.x,\r\n      top: point.y\r\n    };\r\n\r\n    if (this.isOverlappingWith(obj)) {\r\n      ret.push({edgeId:this.id});\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if this object is overlapping with the provided object\r\n   * @param {Object} obj   an object with parameters left, top\r\n   * @return {boolean}     True if location is located on the edge\r\n   */\r\n  isOverlappingWith(obj) {\r\n    if (this.connected) {\r\n      var distMax = 10;\r\n      var xFrom = this.from.x;\r\n      var yFrom = this.from.y;\r\n      var xTo = this.to.x;\r\n      var yTo = this.to.y;\r\n      var xObj = obj.left;\r\n      var yObj = obj.top;\r\n\r\n      var dist = this.edgeType.getDistanceToEdge(xFrom, yFrom, xTo, yTo, xObj, yObj);\r\n\r\n      return (dist < distMax);\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  /** \r\n   * Determine the rotation point, if any.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [ctx] if passed, do a recalculation of the label size\r\n   * @returns {rotationPoint} the point to rotate around and the angle in radians to rotate\r\n   * @private\r\n   */\r\n  _getRotation(ctx) {\r\n    let viaNode = this.edgeType.getViaNode();\r\n    let point = this.edgeType.getPoint(0.5, viaNode);\r\n\r\n    if (ctx !== undefined) {\r\n      this.labelModule.calculateLabelSize(ctx, this.selected, this.hover, point.x, point.y);\r\n    }\r\n\r\n    let ret = {\r\n      x: point.x,\r\n      y: this.labelModule.size.yLine,\r\n      angle: 0\r\n    };\r\n\r\n    if (!this.labelModule.visible()) {\r\n      return ret;  // Don't even bother doing the atan2, there's nothing to draw\r\n    }\r\n\r\n    if (this.options.font.align === \"horizontal\") {\r\n      return ret;  // No need to calculate angle\r\n    }\r\n\r\n    var dy = this.from.y - this.to.y;\r\n    var dx = this.from.x - this.to.x;\r\n    var angle = Math.atan2(dy, dx);  // radians\r\n\r\n    // rotate so that label is readable\r\n    if ((angle < -1 && dx < 0) || (angle > 0 && dx < 0)) {\r\n      angle += Math.PI;\r\n    }\r\n    ret.angle = angle;\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get a point on a circle\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} radius\r\n   * @param {number} percentage Value between 0 (line start) and 1 (line end)\r\n   * @return {Object} point\r\n   * @private\r\n   */\r\n  _pointOnCircle(x, y, radius, percentage) {\r\n    var angle = percentage * 2 * Math.PI;\r\n    return {\r\n      x: x + radius * Math.cos(angle),\r\n      y: y - radius * Math.sin(angle)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets selected state to true\r\n   */\r\n  select() {\r\n    this.selected = true;\r\n  }\r\n\r\n  /**\r\n   * Sets selected state to false\r\n   */\r\n  unselect() {\r\n    this.selected = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * cleans all required things on delete\r\n   * @returns {*}\r\n   */\r\n  cleanup() {\r\n    return this.edgeType.cleanup();\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove edge from the list and perform necessary cleanup.\r\n   */\r\n  remove() {\r\n    this.cleanup();\r\n    this.disconnect();\r\n    delete this.body.edges[this.id];\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if both connecting nodes exist\r\n   * @returns {boolean}\r\n   */\r\n  endPointsValid() {\r\n    return this.body.nodes[this.fromId] !== undefined\r\n        && this.body.nodes[this.toId]   !== undefined;\r\n  }\r\n}\r\n\r\nexport default Edge;\r\n","let util = require(\"../util\");\r\n\r\n/**\r\n * Utility Class\r\n */\r\nclass NetworkUtil {\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Find the center position of the network considering the bounding boxes\r\n   *\r\n   * @param {Array.<Node>} allNodes\r\n   * @param {Array.<Node>} [specificNodes=[]]\r\n   * @returns {{minX: number, maxX: number, minY: number, maxY: number}}\r\n   * @static\r\n   */\r\n  static getRange(allNodes, specificNodes = []) {\r\n    var minY = 1e9, maxY = -1e9, minX = 1e9, maxX = -1e9, node;\r\n    if (specificNodes.length > 0) {\r\n      for (var i = 0; i < specificNodes.length; i++) {\r\n        node = allNodes[specificNodes[i]];\r\n        if (minX > node.shape.boundingBox.left) {\r\n          minX = node.shape.boundingBox.left;\r\n        }\r\n        if (maxX < node.shape.boundingBox.right) {\r\n          maxX = node.shape.boundingBox.right;\r\n        }\r\n        if (minY > node.shape.boundingBox.top) {\r\n          minY = node.shape.boundingBox.top;\r\n        } // top is negative, bottom is positive\r\n        if (maxY < node.shape.boundingBox.bottom) {\r\n          maxY = node.shape.boundingBox.bottom;\r\n        } // top is negative, bottom is positive\r\n      }\r\n    }\r\n\r\n    if (minX === 1e9 && maxX === -1e9 && minY === 1e9 && maxY === -1e9) {\r\n      minY = 0, maxY = 0, minX = 0, maxX = 0;\r\n    }\r\n    return {minX: minX, maxX: maxX, minY: minY, maxY: maxY};\r\n  }\r\n\r\n  /**\r\n   * Find the center position of the network\r\n   *\r\n   * @param {Array.<Node>} allNodes\r\n   * @param {Array.<Node>} [specificNodes=[]]\r\n   * @returns {{minX: number, maxX: number, minY: number, maxY: number}}\r\n   * @static\r\n   */\r\n  static getRangeCore(allNodes, specificNodes = []) {\r\n    var minY = 1e9, maxY = -1e9, minX = 1e9, maxX = -1e9, node;\r\n    if (specificNodes.length > 0) {\r\n      for (var i = 0; i < specificNodes.length; i++) {\r\n        node = allNodes[specificNodes[i]];\r\n        if (minX > node.x) {\r\n          minX = node.x;\r\n        }\r\n        if (maxX < node.x) {\r\n          maxX = node.x;\r\n        }\r\n        if (minY > node.y) {\r\n          minY = node.y;\r\n        } // top is negative, bottom is positive\r\n        if (maxY < node.y) {\r\n          maxY = node.y;\r\n        } // top is negative, bottom is positive\r\n      }\r\n    }\r\n\r\n    if (minX === 1e9 && maxX === -1e9 && minY === 1e9 && maxY === -1e9) {\r\n      minY = 0, maxY = 0, minX = 0, maxX = 0;\r\n    }\r\n    return {minX: minX, maxX: maxX, minY: minY, maxY: maxY};\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {object} range = {minX: minX, maxX: maxX, minY: minY, maxY: maxY};\r\n   * @returns {{x: number, y: number}}\r\n   * @static\r\n   */\r\n  static findCenter(range) {\r\n    return {x: (0.5 * (range.maxX + range.minX)),\r\n      y: (0.5 * (range.maxY + range.minY))};\r\n  }\r\n\r\n\r\n  /**\r\n   * This returns a clone of the options or options of the edge or node to be used for construction of new edges or check functions for new nodes.\r\n   * @param {vis.Item} item\r\n   * @param {'node'|undefined} type\r\n   * @returns {{}}\r\n   * @static\r\n   */\r\n  static cloneOptions(item, type) {\r\n    let clonedOptions = {};\r\n    if (type === undefined || type === 'node') {\r\n      util.deepExtend(clonedOptions, item.options, true);\r\n      clonedOptions.x = item.x;\r\n      clonedOptions.y = item.y;\r\n      clonedOptions.amountOfConnections = item.edges.length;\r\n    }\r\n    else {\r\n      util.deepExtend(clonedOptions, item.options, true);\r\n    }\r\n    return clonedOptions;\r\n  }\r\n\r\n}\r\n\r\nexport default NetworkUtil;","/**\r\n * Barnes Hut Solver\r\n */\r\nclass BarnesHutSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.barnesHutTree;\r\n    this.setOptions(options);\r\n    this.randomSeed = 5;\r\n\r\n    // debug: show grid\r\n    // this.body.emitter.on(\"afterDrawing\", (ctx) => {this._debug(ctx,'#ff0000')})\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n    this.thetaInversed = 1 / this.options.theta;\r\n\r\n    // if 1 then min distance = 0.5, if 0.5 then min distance = 0.5 + 0.5*node.shape.radius\r\n    this.overlapAvoidanceFactor = 1 - Math.max(0, Math.min(1, this.options.avoidOverlap));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number} random integer\r\n   */\r\n  seededRandom() {\r\n    var x = Math.sin(this.randomSeed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n\r\n  /**\r\n   * This function calculates the forces the nodes apply on each other based on a gravitational model.\r\n   * The Barnes Hut method is used to speed up this N-body simulation.\r\n   *\r\n   * @private\r\n   */\r\n  solve() {\r\n    if (this.options.gravitationalConstant !== 0 && this.physicsBody.physicsNodeIndices.length > 0) {\r\n      let node;\r\n      let nodes = this.body.nodes;\r\n      let nodeIndices = this.physicsBody.physicsNodeIndices;\r\n      let nodeCount = nodeIndices.length;\r\n\r\n      // create the tree\r\n      let barnesHutTree = this._formBarnesHutTree(nodes, nodeIndices);\r\n\r\n      // for debugging\r\n      this.barnesHutTree = barnesHutTree;\r\n\r\n      // place the nodes one by one recursively\r\n      for (let i = 0; i < nodeCount; i++) {\r\n        node = nodes[nodeIndices[i]];\r\n        if (node.options.mass > 0) {\r\n          // starting with root is irrelevant, it never passes the BarnesHutSolver condition\r\n          this._getForceContributions(barnesHutTree.root, node);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Object} parentBranch\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _getForceContributions(parentBranch, node) {\r\n    this._getForceContribution(parentBranch.children.NW, node);\r\n    this._getForceContribution(parentBranch.children.NE, node);\r\n    this._getForceContribution(parentBranch.children.SW, node);\r\n    this._getForceContribution(parentBranch.children.SE, node);\r\n  }\r\n\r\n\r\n  /**\r\n   * This function traverses the barnesHutTree. It checks when it can approximate distant nodes with their center of mass.\r\n   * If a region contains a single node, we check if it is not itself, then we apply the force.\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _getForceContribution(parentBranch, node) {\r\n    // we get no force contribution from an empty region\r\n    if (parentBranch.childrenCount > 0) {\r\n      let dx, dy, distance;\r\n\r\n      // get the distance from the center of mass to the node.\r\n      dx = parentBranch.centerOfMass.x - node.x;\r\n      dy = parentBranch.centerOfMass.y - node.y;\r\n      distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      // BarnesHutSolver condition\r\n      // original condition : s/d < theta = passed  ===  d/s > 1/theta = passed\r\n      // calcSize = 1/s --> d * 1/s > 1/theta = passed\r\n      if (distance * parentBranch.calcSize > this.thetaInversed) {\r\n        this._calculateForces(distance, dx, dy, node, parentBranch);\r\n      }\r\n      else {\r\n        // Did not pass the condition, go into children if available\r\n        if (parentBranch.childrenCount === 4) {\r\n          this._getForceContributions(parentBranch, node);\r\n        }\r\n        else { // parentBranch must have only one node, if it was empty we wouldnt be here\r\n          if (parentBranch.children.data.id != node.id) { // if it is not self\r\n            this._calculateForces(distance, dx, dy, node, parentBranch);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate the forces based on the distance.\r\n   *\r\n   * @param {number} distance\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   * @param {Node} node\r\n   * @param {Object} parentBranch\r\n   * @private\r\n   */\r\n  _calculateForces(distance, dx, dy, node, parentBranch) {\r\n    if (distance === 0) {\r\n      distance = 0.1;\r\n      dx = distance;\r\n    }\r\n\r\n    if (this.overlapAvoidanceFactor < 1 && node.shape.radius) {\r\n      distance = Math.max(0.1 + (this.overlapAvoidanceFactor * node.shape.radius), distance - node.shape.radius);\r\n    }\r\n\r\n    // the dividing by the distance cubed instead of squared allows us to get the fx and fy components without sines and cosines\r\n    // it is shorthand for gravityforce with distance squared and fx = dx/distance * gravityForce\r\n    let gravityForce = this.options.gravitationalConstant * parentBranch.mass * node.options.mass / Math.pow(distance,3);\r\n    let fx = dx * gravityForce;\r\n    let fy = dy * gravityForce;\r\n\r\n    this.physicsBody.forces[node.id].x += fx;\r\n    this.physicsBody.forces[node.id].y += fy;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function constructs the barnesHut tree recursively. It creates the root, splits it and starts placing the nodes.\r\n   *\r\n   * @param {Array.<Node>} nodes\r\n   * @param {Array.<number>} nodeIndices\r\n   * @returns {{root: {centerOfMass: {x: number, y: number}, mass: number, range: {minX: number, maxX: number, minY: number, maxY: number}, size: number, calcSize: number, children: {data: null}, maxWidth: number, level: number, childrenCount: number}}} BarnesHutTree\r\n   * @private\r\n   */\r\n  _formBarnesHutTree(nodes, nodeIndices) {\r\n    let node;\r\n    let nodeCount = nodeIndices.length;\r\n\r\n    let minX = nodes[nodeIndices[0]].x;\r\n    let minY = nodes[nodeIndices[0]].y;\r\n    let maxX = nodes[nodeIndices[0]].x;\r\n    let maxY = nodes[nodeIndices[0]].y;\r\n\r\n    // get the range of the nodes\r\n    for (let i = 1; i < nodeCount; i++) {\r\n      let node = nodes[nodeIndices[i]];\r\n      let x = node.x;\r\n      let y = node.y;\r\n      if (node.options.mass > 0) {\r\n        if (x < minX) {\r\n          minX = x;\r\n        }\r\n        if (x > maxX) {\r\n          maxX = x;\r\n        }\r\n        if (y < minY) {\r\n          minY = y;\r\n        }\r\n        if (y > maxY) {\r\n          maxY = y;\r\n        }\r\n      }\r\n    }\r\n    // make the range a square\r\n    let sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY); // difference between X and Y\r\n    if (sizeDiff > 0) {\r\n      minY -= 0.5 * sizeDiff;\r\n      maxY += 0.5 * sizeDiff;\r\n    } // xSize > ySize\r\n    else {\r\n      minX += 0.5 * sizeDiff;\r\n      maxX -= 0.5 * sizeDiff;\r\n    } // xSize < ySize\r\n\r\n\r\n    let minimumTreeSize = 1e-5;\r\n    let rootSize = Math.max(minimumTreeSize, Math.abs(maxX - minX));\r\n    let halfRootSize = 0.5 * rootSize;\r\n    let centerX = 0.5 * (minX + maxX), centerY = 0.5 * (minY + maxY);\r\n\r\n    // construct the barnesHutTree\r\n    let barnesHutTree = {\r\n      root: {\r\n        centerOfMass: {x: 0, y: 0},\r\n        mass: 0,\r\n        range: {\r\n          minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\r\n          minY: centerY - halfRootSize, maxY: centerY + halfRootSize\r\n        },\r\n        size: rootSize,\r\n        calcSize: 1 / rootSize,\r\n        children: {data: null},\r\n        maxWidth: 0,\r\n        level: 0,\r\n        childrenCount: 4\r\n      }\r\n    };\r\n    this._splitBranch(barnesHutTree.root);\r\n\r\n    // place the nodes one by one recursively\r\n    for (let i = 0; i < nodeCount; i++) {\r\n      node = nodes[nodeIndices[i]];\r\n      if (node.options.mass > 0) {\r\n        this._placeInTree(barnesHutTree.root, node);\r\n      }\r\n    }\r\n\r\n    // make global\r\n    return barnesHutTree\r\n  }\r\n\r\n\r\n  /**\r\n   * this updates the mass of a branch. this is increased by adding a node.\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _updateBranchMass(parentBranch, node) {\r\n    let centerOfMass = parentBranch.centerOfMass;\r\n    let totalMass = parentBranch.mass + node.options.mass;\r\n    let totalMassInv = 1 / totalMass;\r\n\r\n    centerOfMass.x = centerOfMass.x * parentBranch.mass + node.x * node.options.mass;\r\n    centerOfMass.x *= totalMassInv;\r\n\r\n    centerOfMass.y = centerOfMass.y * parentBranch.mass + node.y * node.options.mass;\r\n    centerOfMass.y *= totalMassInv;\r\n\r\n    parentBranch.mass = totalMass;\r\n    let biggestSize = Math.max(Math.max(node.height, node.radius), node.width);\r\n    parentBranch.maxWidth = (parentBranch.maxWidth < biggestSize) ? biggestSize : parentBranch.maxWidth;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * determine in which branch the node will be placed.\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @param {Node} node\r\n   * @param {boolean} skipMassUpdate\r\n   * @private\r\n   */\r\n  _placeInTree(parentBranch, node, skipMassUpdate) {\r\n    if (skipMassUpdate != true || skipMassUpdate === undefined) {\r\n      // update the mass of the branch.\r\n      this._updateBranchMass(parentBranch, node);\r\n    }\r\n\r\n    let range = parentBranch.children.NW.range;\r\n    let region;\r\n    if (range.maxX > node.x) { // in NW or SW\r\n      if (range.maxY > node.y) {\r\n        region = \"NW\";\r\n      }\r\n      else {\r\n        region = \"SW\";\r\n      }\r\n    }\r\n    else { // in NE or SE\r\n      if (range.maxY > node.y) {\r\n        region = \"NE\";\r\n      }\r\n      else {\r\n        region = \"SE\";\r\n      }\r\n    }\r\n\r\n    this._placeInRegion(parentBranch, node, region);\r\n  }\r\n\r\n\r\n  /**\r\n   * actually place the node in a region (or branch)\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @param {Node} node\r\n   * @param {'NW'| 'NE' | 'SW' | 'SE'} region\r\n   * @private\r\n   */\r\n  _placeInRegion(parentBranch, node, region) {\r\n    let children = parentBranch.children[region];\r\n\r\n    switch (children.childrenCount) {\r\n      case 0: // place node here\r\n        children.children.data = node;\r\n        children.childrenCount = 1;\r\n        this._updateBranchMass(children, node);\r\n        break;\r\n      case 1: // convert into children\r\n              // if there are two nodes exactly overlapping (on init, on opening of cluster etc.)\r\n              // we move one node a little bit and we do not put it in the tree.\r\n        if (children.children.data.x === node.x && children.children.data.y === node.y) {\r\n          node.x += this.seededRandom();\r\n          node.y += this.seededRandom();\r\n        }\r\n        else {\r\n          this._splitBranch(children);\r\n          this._placeInTree(children, node);\r\n        }\r\n        break;\r\n      case 4: // place in branch\r\n        this._placeInTree(children, node);\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * this function splits a branch into 4 sub branches. If the branch contained a node, we place it in the subbranch\r\n   * after the split is complete.\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @private\r\n   */\r\n  _splitBranch(parentBranch) {\r\n    // if the branch is shaded with a node, replace the node in the new subset.\r\n    let containedNode = null;\r\n    if (parentBranch.childrenCount === 1) {\r\n      containedNode = parentBranch.children.data;\r\n      parentBranch.mass = 0;\r\n      parentBranch.centerOfMass.x = 0;\r\n      parentBranch.centerOfMass.y = 0;\r\n    }\r\n    parentBranch.childrenCount = 4;\r\n    parentBranch.children.data = null;\r\n    this._insertRegion(parentBranch, \"NW\");\r\n    this._insertRegion(parentBranch, \"NE\");\r\n    this._insertRegion(parentBranch, \"SW\");\r\n    this._insertRegion(parentBranch, \"SE\");\r\n\r\n    if (containedNode != null) {\r\n      this._placeInTree(parentBranch, containedNode);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This function subdivides the region into four new segments.\r\n   * Specifically, this inserts a single new segment.\r\n   * It fills the children section of the parentBranch\r\n   *\r\n   * @param {Object} parentBranch\r\n   * @param {'NW'| 'NE' | 'SW' | 'SE'} region\r\n   * @private\r\n   */\r\n  _insertRegion(parentBranch, region) {\r\n    let minX, maxX, minY, maxY;\r\n    let childSize = 0.5 * parentBranch.size;\r\n    switch (region) {\r\n      case \"NW\":\r\n        minX = parentBranch.range.minX;\r\n        maxX = parentBranch.range.minX + childSize;\r\n        minY = parentBranch.range.minY;\r\n        maxY = parentBranch.range.minY + childSize;\r\n        break;\r\n      case \"NE\":\r\n        minX = parentBranch.range.minX + childSize;\r\n        maxX = parentBranch.range.maxX;\r\n        minY = parentBranch.range.minY;\r\n        maxY = parentBranch.range.minY + childSize;\r\n        break;\r\n      case \"SW\":\r\n        minX = parentBranch.range.minX;\r\n        maxX = parentBranch.range.minX + childSize;\r\n        minY = parentBranch.range.minY + childSize;\r\n        maxY = parentBranch.range.maxY;\r\n        break;\r\n      case \"SE\":\r\n        minX = parentBranch.range.minX + childSize;\r\n        maxX = parentBranch.range.maxX;\r\n        minY = parentBranch.range.minY + childSize;\r\n        maxY = parentBranch.range.maxY;\r\n        break;\r\n    }\r\n\r\n\r\n    parentBranch.children[region] = {\r\n      centerOfMass: {x: 0, y: 0},\r\n      mass: 0,\r\n      range: {minX: minX, maxX: maxX, minY: minY, maxY: maxY},\r\n      size: 0.5 * parentBranch.size,\r\n      calcSize: 2 * parentBranch.calcSize,\r\n      children: {data: null},\r\n      maxWidth: 0,\r\n      level: parentBranch.level + 1,\r\n      childrenCount: 0\r\n    };\r\n  }\r\n\r\n\r\n  //---------------------------  DEBUGGING BELOW  ---------------------------//\r\n\r\n\r\n  /**\r\n   * This function is for debugging purposed, it draws the tree.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {string} color\r\n   * @private\r\n   */\r\n  _debug(ctx, color) {\r\n    if (this.barnesHutTree !== undefined) {\r\n\r\n      ctx.lineWidth = 1;\r\n\r\n      this._drawBranch(this.barnesHutTree.root, ctx, color);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is for debugging purposes. It draws the branches recursively.\r\n   *\r\n   * @param {Object} branch\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {string} color\r\n   * @private\r\n   */\r\n  _drawBranch(branch, ctx, color) {\r\n    if (color === undefined) {\r\n      color = \"#FF0000\";\r\n    }\r\n\r\n    if (branch.childrenCount === 4) {\r\n      this._drawBranch(branch.children.NW, ctx);\r\n      this._drawBranch(branch.children.NE, ctx);\r\n      this._drawBranch(branch.children.SE, ctx);\r\n      this._drawBranch(branch.children.SW, ctx);\r\n    }\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.moveTo(branch.range.minX, branch.range.minY);\r\n    ctx.lineTo(branch.range.maxX, branch.range.minY);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(branch.range.maxX, branch.range.minY);\r\n    ctx.lineTo(branch.range.maxX, branch.range.maxY);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(branch.range.maxX, branch.range.maxY);\r\n    ctx.lineTo(branch.range.minX, branch.range.maxY);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(branch.range.minX, branch.range.maxY);\r\n    ctx.lineTo(branch.range.minX, branch.range.minY);\r\n    ctx.stroke();\r\n\r\n    /*\r\n     if (branch.mass > 0) {\r\n     ctx.circle(branch.centerOfMass.x, branch.centerOfMass.y, 3*branch.mass);\r\n     ctx.stroke();\r\n     }\r\n     */\r\n  }\r\n}\r\n\r\n\r\nexport default BarnesHutSolver;\r\n","/**\r\n * Central Gravity Solver\r\n */\r\nclass CentralGravitySolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * Calculates forces for each node\r\n   */\r\n  solve() {\r\n    let dx, dy, distance, node;\r\n    let nodes = this.body.nodes;\r\n    let nodeIndices = this.physicsBody.physicsNodeIndices;\r\n    let forces = this.physicsBody.forces;\r\n\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      node = nodes[nodeId];\r\n      dx = -node.x;\r\n      dy = -node.y;\r\n      distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      this._calculateForces(distance, dx, dy, forces, node);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the forces based on the distance.\r\n   * @param {number} distance\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   * @param {Object<Node.id, vis.Node>} forces\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _calculateForces(distance, dx, dy, forces, node) {\r\n    let gravityForce = (distance === 0) ? 0 : (this.options.centralGravity / distance);\r\n    forces[node.id].x = dx * gravityForce;\r\n    forces[node.id].y = dy * gravityForce;\r\n  }\r\n}\r\n\r\n\r\nexport default CentralGravitySolver;","// utils\r\nexports.util = require('./lib/util');\r\nexports.DOMutil = require('./lib/DOMutil');\r\n\r\n// data\r\nexports.DataSet = require('./lib/DataSet');\r\nexports.DataView = require('./lib/DataView');\r\nexports.Queue = require('./lib/Queue');\r\n\r\n// Network\r\nexports.Network = require('./lib/network/Network');\r\nexports.network = {\r\n  Images: require('./lib/network/Images'),\r\n  dotparser: require('./lib/network/dotparser'),\r\n  gephiParser: require('./lib/network/gephiParser'),\r\n  allOptions: require('./lib/network/options')\r\n};\r\nexports.network.convertDot   = function (input) {return exports.network.dotparser.DOTToGraph(input)};\r\nexports.network.convertGephi = function (input,options) {return exports.network.gephiParser.parseGephi(input,options)};\r\n\r\n// bundled external libraries\r\nexports.moment = require('./lib/module/moment');\r\nexports.Hammer = require('./lib/module/hammer');\r\nexports.keycharm = require('keycharm');","// first check if moment.js is already loaded in the browser window, if so,\r\n// use this instance. Else, load via commonjs.\r\nmodule.exports = (typeof window !== 'undefined') && window['moment'] || require('moment');\r\n","/**\r\n * A queue\r\n * @param {Object} options\r\n *            Available options:\r\n *            - delay: number    When provided, the queue will be flushed\r\n *                               automatically after an inactivity of this delay\r\n *                               in milliseconds.\r\n *                               Default value is null.\r\n *            - max: number      When the queue exceeds the given maximum number\r\n *                               of entries, the queue is flushed automatically.\r\n *                               Default value of max is Infinity.\r\n * @constructor Queue\r\n */\r\nfunction Queue(options) {\r\n  // options\r\n  this.delay = null;\r\n  this.max = Infinity;\r\n\r\n  // properties\r\n  this._queue = [];\r\n  this._timeout = null;\r\n  this._extended = null;\r\n\r\n  this.setOptions(options);\r\n}\r\n\r\n/**\r\n * Update the configuration of the queue\r\n * @param {Object} options\r\n *            Available options:\r\n *            - delay: number    When provided, the queue will be flushed\r\n *                               automatically after an inactivity of this delay\r\n *                               in milliseconds.\r\n *                               Default value is null.\r\n *            - max: number      When the queue exceeds the given maximum number\r\n *                               of entries, the queue is flushed automatically.\r\n *                               Default value of max is Infinity.\r\n */\r\nQueue.prototype.setOptions = function (options) {\r\n  if (options && typeof options.delay !== 'undefined') {\r\n    this.delay = options.delay;\r\n  }\r\n  if (options && typeof options.max !== 'undefined') {\r\n    this.max = options.max;\r\n  }\r\n\r\n  this._flushIfNeeded();\r\n};\r\n\r\n/**\r\n * Extend an object with queuing functionality.\r\n * The object will be extended with a function flush, and the methods provided\r\n * in options.replace will be replaced with queued ones.\r\n * @param {Object} object\r\n * @param {Object} options\r\n *            Available options:\r\n *            - replace: Array.<string>\r\n *                               A list with method names of the methods\r\n *                               on the object to be replaced with queued ones.\r\n *            - delay: number    When provided, the queue will be flushed\r\n *                               automatically after an inactivity of this delay\r\n *                               in milliseconds.\r\n *                               Default value is null.\r\n *            - max: number      When the queue exceeds the given maximum number\r\n *                               of entries, the queue is flushed automatically.\r\n *                               Default value of max is Infinity.\r\n * @return {Queue} Returns the created queue\r\n */\r\nQueue.extend = function (object, options) {\r\n  var queue = new Queue(options);\r\n\r\n  if (object.flush !== undefined) {\r\n    throw new Error('Target object already has a property flush');\r\n  }\r\n  object.flush = function () {\r\n    queue.flush();\r\n  };\r\n\r\n  var methods = [{\r\n    name: 'flush',\r\n    original: undefined\r\n  }];\r\n\r\n  if (options && options.replace) {\r\n    for (var i = 0; i < options.replace.length; i++) {\r\n      var name = options.replace[i];\r\n      methods.push({\r\n        name: name,\r\n        original: object[name]\r\n      });\r\n      queue.replace(object, name);\r\n    }\r\n  }\r\n\r\n  queue._extended = {\r\n    object: object,\r\n    methods: methods\r\n  };\r\n\r\n  return queue;\r\n};\r\n\r\n/**\r\n * Destroy the queue. The queue will first flush all queued actions, and in\r\n * case it has extended an object, will restore the original object.\r\n */\r\nQueue.prototype.destroy = function () {\r\n  this.flush();\r\n\r\n  if (this._extended) {\r\n    var object = this._extended.object;\r\n    var methods = this._extended.methods;\r\n    for (var i = 0; i < methods.length; i++) {\r\n      var method = methods[i];\r\n      if (method.original) {\r\n        object[method.name] = method.original;\r\n      }\r\n      else {\r\n        delete object[method.name];\r\n      }\r\n    }\r\n    this._extended = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Replace a method on an object with a queued version\r\n * @param {Object} object   Object having the method\r\n * @param {string} method   The method name\r\n */\r\nQueue.prototype.replace = function(object, method) {\r\n  var me = this;\r\n  var original = object[method];\r\n  if (!original) {\r\n    throw new Error('Method ' + method + ' undefined');\r\n  }\r\n\r\n  object[method] = function () {\r\n    // create an Array with the arguments\r\n    var args = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    // add this call to the queue\r\n    me.queue({\r\n      args: args,\r\n      fn: original,\r\n      context: this\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Queue a call\r\n * @param {function | {fn: function, args: Array} | {fn: function, args: Array, context: Object}} entry\r\n */\r\nQueue.prototype.queue = function(entry) {\r\n  if (typeof entry === 'function') {\r\n    this._queue.push({fn: entry});\r\n  }\r\n  else {\r\n    this._queue.push(entry);\r\n  }\r\n\r\n  this._flushIfNeeded();\r\n};\r\n\r\n/**\r\n * Check whether the queue needs to be flushed\r\n * @private\r\n */\r\nQueue.prototype._flushIfNeeded = function () {\r\n  // flush when the maximum is exceeded.\r\n  if (this._queue.length > this.max) {\r\n    this.flush();\r\n  }\r\n\r\n  // flush after a period of inactivity when a delay is configured\r\n  clearTimeout(this._timeout);\r\n  if (this.queue.length > 0 && typeof this.delay === 'number') {\r\n    var me = this;\r\n    this._timeout = setTimeout(function () {\r\n      me.flush();\r\n    }, this.delay);\r\n  }\r\n};\r\n\r\n/**\r\n * Flush all queued calls\r\n */\r\nQueue.prototype.flush = function () {\r\n  while (this._queue.length > 0) {\r\n    var entry = this._queue.shift();\r\n    entry.fn.apply(entry.context || entry.fn, entry.args || []);\r\n  }\r\n};\r\n\r\nmodule.exports = Queue;\r\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\r\n * Parse a text source containing data in DOT language into a JSON object.\r\n * The object contains two lists: one with nodes and one with edges.\r\n *\r\n * DOT language reference: http://www.graphviz.org/doc/info/lang.html\r\n *\r\n * DOT language attributes: http://graphviz.org/content/attrs\r\n *\r\n * @param {string} data     Text containing a graph in DOT-notation\r\n * @return {Object} graph   An object containing two parameters:\r\n *                          {Object[]} nodes\r\n *                          {Object[]} edges\r\n *\r\n * -------------------------------------------\r\n * TODO\r\n * ====\r\n *\r\n * For label handling, this is an incomplete implementation. From docs (quote #3015):\r\n * \r\n * > the escape sequences \"\\n\", \"\\l\" and \"\\r\" divide the label into lines, centered, \r\n * > left-justified, and right-justified, respectively.\r\n *\r\n * Source: http://www.graphviz.org/content/attrs#kescString\r\n *\r\n * > As another aid for readability, dot allows double-quoted strings to span multiple physical\r\n * > lines using the standard C convention of a backslash immediately preceding a newline\r\n * > character\r\n * > In addition, double-quoted strings can be concatenated using a '+' operator.\r\n * > As HTML strings can contain newline characters, which are used solely for formatting,\r\n * > the language does not allow escaped newlines or concatenation operators to be used\r\n * > within them.\r\n *\r\n * - Currently, only '\\\\n' is handled\r\n * - Note that text explicitly says 'labels'; the dot parser currently handles escape\r\n *   sequences in **all** strings.\r\n */\r\nfunction parseDOT (data) {\r\n  dot = data;\r\n  return parseGraph();\r\n}\r\n\r\n// mapping of attributes from DOT (the keys) to vis.js (the values)\r\nvar NODE_ATTR_MAPPING = {\r\n  'fontsize': 'font.size',\r\n  'fontcolor': 'font.color',\r\n  'labelfontcolor': 'font.color',\r\n  'fontname': 'font.face',\r\n  'color': ['color.border', 'color.background'],\r\n  'fillcolor': 'color.background',\r\n  'tooltip': 'title',\r\n  'labeltooltip': 'title'\r\n};\r\nvar EDGE_ATTR_MAPPING = Object.create(NODE_ATTR_MAPPING);\r\nEDGE_ATTR_MAPPING.color = 'color.color';\r\nEDGE_ATTR_MAPPING.style = 'dashes';\r\n\r\n// token types enumeration\r\nvar TOKENTYPE = {\r\n  NULL : 0,\r\n  DELIMITER : 1,\r\n  IDENTIFIER: 2,\r\n  UNKNOWN : 3\r\n};\r\n\r\n// map with all delimiters\r\nvar DELIMITERS = {\r\n  '{': true,\r\n  '}': true,\r\n  '[': true,\r\n  ']': true,\r\n  ';': true,\r\n  '=': true,\r\n  ',': true,\r\n\r\n  '->': true,\r\n  '--': true\r\n};\r\n\r\nvar dot = '';                   // current dot file\r\nvar index = 0;                  // current index in dot file\r\nvar c = '';                     // current token character in expr\r\nvar token = '';                 // current token\r\nvar tokenType = TOKENTYPE.NULL; // type of the token\r\n\r\n/**\r\n * Get the first character from the dot file.\r\n * The character is stored into the char c. If the end of the dot file is\r\n * reached, the function puts an empty string in c.\r\n */\r\nfunction first() {\r\n  index = 0;\r\n  c = dot.charAt(0);\r\n}\r\n\r\n/**\r\n * Get the next character from the dot file.\r\n * The character is stored into the char c. If the end of the dot file is\r\n * reached, the function puts an empty string in c.\r\n */\r\nfunction next() {\r\n  index++;\r\n  c = dot.charAt(index);\r\n}\r\n\r\n/**\r\n * Preview the next character from the dot file.\r\n * @return {string} cNext\r\n */\r\nfunction nextPreview() {\r\n  return dot.charAt(index + 1);\r\n}\r\n\r\nvar regexAlphaNumeric = /[a-zA-Z_0-9.:#]/;\r\n/**\r\n * Test whether given character is alphabetic or numeric\r\n * @param {string} c\r\n * @return {Boolean} isAlphaNumeric\r\n */\r\nfunction isAlphaNumeric(c) {\r\n  return regexAlphaNumeric.test(c);\r\n}\r\n\r\n/**\r\n * Merge all options of object b into object b\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object} a\r\n */\r\nfunction merge (a, b) {\r\n  if (!a) {\r\n    a = {};\r\n  }\r\n\r\n  if (b) {\r\n    for (var name in b) {\r\n      if (b.hasOwnProperty(name)) {\r\n        a[name] = b[name];\r\n      }\r\n    }\r\n  }\r\n  return a;\r\n}\r\n\r\n/**\r\n * Set a value in an object, where the provided parameter name can be a\r\n * path with nested parameters. For example:\r\n *\r\n *     var obj = {a: 2};\r\n *     setValue(obj, 'b.c', 3);     // obj = {a: 2, b: {c: 3}}\r\n *\r\n * @param {Object} obj\r\n * @param {string} path  A parameter name or dot-separated parameter path,\r\n *                      like \"color.highlight.border\".\r\n * @param {*} value\r\n */\r\nfunction setValue(obj, path, value) {\r\n  var keys = path.split('.');\r\n  var o = obj;\r\n  while (keys.length) {\r\n    var key = keys.shift();\r\n    if (keys.length) {\r\n      // this isn't the end point\r\n      if (!o[key]) {\r\n        o[key] = {};\r\n      }\r\n      o = o[key];\r\n    }\r\n    else {\r\n      // this is the end point\r\n      o[key] = value;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Add a node to a graph object. If there is already a node with\r\n * the same id, their attributes will be merged.\r\n * @param {Object} graph\r\n * @param {Object} node\r\n */\r\nfunction addNode(graph, node) {\r\n  var i, len;\r\n  var current = null;\r\n\r\n  // find root graph (in case of subgraph)\r\n  var graphs = [graph]; // list with all graphs from current graph to root graph\r\n  var root = graph;\r\n  while (root.parent) {\r\n    graphs.push(root.parent);\r\n    root = root.parent;\r\n  }\r\n\r\n  // find existing node (at root level) by its id\r\n  if (root.nodes) {\r\n    for (i = 0, len = root.nodes.length; i < len; i++) {\r\n      if (node.id === root.nodes[i].id) {\r\n        current = root.nodes[i];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!current) {\r\n    // this is a new node\r\n    current = {\r\n      id: node.id\r\n    };\r\n    if (graph.node) {\r\n      // clone default attributes\r\n      current.attr = merge(current.attr, graph.node);\r\n    }\r\n  }\r\n\r\n  // add node to this (sub)graph and all its parent graphs\r\n  for (i = graphs.length - 1; i >= 0; i--) {\r\n    var g = graphs[i];\r\n\r\n    if (!g.nodes) {\r\n      g.nodes = [];\r\n    }\r\n    if (g.nodes.indexOf(current) === -1) {\r\n      g.nodes.push(current);\r\n    }\r\n  }\r\n\r\n  // merge attributes\r\n  if (node.attr) {\r\n    current.attr = merge(current.attr, node.attr);\r\n  }\r\n}\r\n\r\n/**\r\n * Add an edge to a graph object\r\n * @param {Object} graph\r\n * @param {Object} edge\r\n */\r\nfunction addEdge(graph, edge) {\r\n  if (!graph.edges) {\r\n    graph.edges = [];\r\n  }\r\n  graph.edges.push(edge);\r\n  if (graph.edge) {\r\n    var attr = merge({}, graph.edge);     // clone default attributes\r\n    edge.attr = merge(attr, edge.attr); // merge attributes\r\n  }\r\n}\r\n\r\n/**\r\n * Create an edge to a graph object\r\n * @param {Object} graph\r\n * @param {string | number | Object} from\r\n * @param {string | number | Object} to\r\n * @param {string} type\r\n * @param {Object | null} attr\r\n * @return {Object} edge\r\n */\r\nfunction createEdge(graph, from, to, type, attr) {\r\n  var edge = {\r\n    from: from,\r\n    to: to,\r\n    type: type\r\n  };\r\n\r\n  if (graph.edge) {\r\n    edge.attr = merge({}, graph.edge);  // clone default attributes\r\n  }\r\n  edge.attr = merge(edge.attr || {}, attr); // merge attributes\r\n\r\n  return edge;\r\n}\r\n\r\n/**\r\n * Get next token in the current dot file.\r\n * The token and token type are available as token and tokenType\r\n */\r\nfunction getToken() {\r\n  tokenType = TOKENTYPE.NULL;\r\n  token = '';\r\n\r\n  // skip over whitespaces\r\n  while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {  // space, tab, enter\r\n    next();\r\n  }\r\n\r\n  do {\r\n    var isComment = false;\r\n\r\n    // skip comment\r\n    if (c === '#') {\r\n      // find the previous non-space character\r\n      var i = index - 1;\r\n      while (dot.charAt(i) === ' ' || dot.charAt(i) === '\\t') {\r\n        i--;\r\n      }\r\n      if (dot.charAt(i) === '\\n' || dot.charAt(i) === '') {\r\n        // the # is at the start of a line, this is indeed a line comment\r\n        while (c != '' && c != '\\n') {\r\n          next();\r\n        }\r\n        isComment = true;\r\n      }\r\n    }\r\n    if (c === '/' && nextPreview() === '/') {\r\n      // skip line comment\r\n      while (c != '' && c != '\\n') {\r\n        next();\r\n      }\r\n      isComment = true;\r\n    }\r\n    if (c === '/' && nextPreview() === '*') {\r\n      // skip block comment\r\n      while (c != '') {\r\n        if (c === '*' && nextPreview() === '/') {\r\n          // end of block comment found. skip these last two characters\r\n          next();\r\n          next();\r\n          break;\r\n        }\r\n        else {\r\n          next();\r\n        }\r\n      }\r\n      isComment = true;\r\n    }\r\n\r\n    // skip over whitespaces\r\n    while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {  // space, tab, enter\r\n      next();\r\n    }\r\n  }\r\n  while (isComment);\r\n\r\n  // check for end of dot file\r\n  if (c === '') {\r\n    // token is still empty\r\n    tokenType = TOKENTYPE.DELIMITER;\r\n    return;\r\n  }\r\n\r\n  // check for delimiters consisting of 2 characters\r\n  var c2 = c + nextPreview();\r\n  if (DELIMITERS[c2]) {\r\n    tokenType = TOKENTYPE.DELIMITER;\r\n    token = c2;\r\n    next();\r\n    next();\r\n    return;\r\n  }\r\n\r\n  // check for delimiters consisting of 1 character\r\n  if (DELIMITERS[c]) {\r\n    tokenType = TOKENTYPE.DELIMITER;\r\n    token = c;\r\n    next();\r\n    return;\r\n  }\r\n\r\n  // check for an identifier (number or string)\r\n  // TODO: more precise parsing of numbers/strings (and the port separator ':')\r\n  if (isAlphaNumeric(c) || c === '-') {\r\n    token += c;\r\n    next();\r\n\r\n    while (isAlphaNumeric(c)) {\r\n      token += c;\r\n      next();\r\n    }\r\n    if (token === 'false') {\r\n      token = false;   // convert to boolean\r\n    }\r\n    else if (token === 'true') {\r\n      token = true;   // convert to boolean\r\n    }\r\n    else if (!isNaN(Number(token))) {\r\n      token = Number(token); // convert to number\r\n    }\r\n    tokenType = TOKENTYPE.IDENTIFIER;\r\n    return;\r\n  }\r\n\r\n  // check for a string enclosed by double quotes\r\n  if (c === '\"') {\r\n    next();\r\n    while (c != '' && (c != '\"' || (c === '\"' && nextPreview() === '\"'))) {\r\n      if (c === '\"') {                                  // skip the escape character\r\n        token += c;\r\n        next();\r\n      } else if (c === '\\\\' && nextPreview() === 'n') { // Honor a newline escape sequence\r\n        token += '\\n';\r\n        next();\r\n      } else {\r\n        token += c;\r\n      }\r\n      next();\r\n    }\r\n    if (c != '\"') {\r\n      throw newSyntaxError('End of string \" expected');\r\n    }\r\n    next();\r\n    tokenType = TOKENTYPE.IDENTIFIER;\r\n    return;\r\n  }\r\n\r\n  // something unknown is found, wrong characters, a syntax error\r\n  tokenType = TOKENTYPE.UNKNOWN;\r\n  while (c != '') {\r\n    token += c;\r\n    next();\r\n  }\r\n  throw new SyntaxError('Syntax error in part \"' + chop(token, 30) + '\"');\r\n}\r\n\r\n/**\r\n * Parse a graph.\r\n * @returns {Object} graph\r\n */\r\nfunction parseGraph() {\r\n  var graph = {};\r\n\r\n  first();\r\n  getToken();\r\n\r\n  // optional strict keyword\r\n  if (token === 'strict') {\r\n    graph.strict = true;\r\n    getToken();\r\n  }\r\n\r\n  // graph or digraph keyword\r\n  if (token === 'graph' || token === 'digraph') {\r\n    graph.type = token;\r\n    getToken();\r\n  }\r\n\r\n  // optional graph id\r\n  if (tokenType === TOKENTYPE.IDENTIFIER) {\r\n    graph.id = token;\r\n    getToken();\r\n  }\r\n\r\n  // open angle bracket\r\n  if (token != '{') {\r\n    throw newSyntaxError('Angle bracket { expected');\r\n  }\r\n  getToken();\r\n\r\n  // statements\r\n  parseStatements(graph);\r\n\r\n  // close angle bracket\r\n  if (token != '}') {\r\n    throw newSyntaxError('Angle bracket } expected');\r\n  }\r\n  getToken();\r\n\r\n  // end of file\r\n  if (token !== '') {\r\n    throw newSyntaxError('End of file expected');\r\n  }\r\n  getToken();\r\n\r\n  // remove temporary default options\r\n  delete graph.node;\r\n  delete graph.edge;\r\n  delete graph.graph;\r\n\r\n  return graph;\r\n}\r\n\r\n/**\r\n * Parse a list with statements.\r\n * @param {Object} graph\r\n */\r\nfunction parseStatements (graph) {\r\n  while (token !== '' && token != '}') {\r\n    parseStatement(graph);\r\n    if (token === ';') {\r\n      getToken();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single statement. Can be a an attribute statement, node\r\n * statement, a series of node statements and edge statements, or a\r\n * parameter.\r\n * @param {Object} graph\r\n */\r\nfunction parseStatement(graph) {\r\n  // parse subgraph\r\n  var subgraph = parseSubgraph(graph);\r\n  if (subgraph) {\r\n    // edge statements\r\n    parseEdge(graph, subgraph);\r\n\r\n    return;\r\n  }\r\n\r\n  // parse an attribute statement\r\n  var attr = parseAttributeStatement(graph);\r\n  if (attr) {\r\n    return;\r\n  }\r\n\r\n  // parse node\r\n  if (tokenType != TOKENTYPE.IDENTIFIER) {\r\n    throw newSyntaxError('Identifier expected');\r\n  }\r\n  var id = token; // id can be a string or a number\r\n  getToken();\r\n\r\n  if (token === '=') {\r\n    // id statement\r\n    getToken();\r\n    if (tokenType != TOKENTYPE.IDENTIFIER) {\r\n      throw newSyntaxError('Identifier expected');\r\n    }\r\n    graph[id] = token;\r\n    getToken();\r\n    // TODO: implement comma separated list with \"a_list: ID=ID [','] [a_list] \"\r\n  }\r\n  else {\r\n    parseNodeStatement(graph, id);\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a subgraph\r\n * @param {Object} graph    parent graph object\r\n * @return {Object | null} subgraph\r\n */\r\nfunction parseSubgraph (graph) {\r\n  var subgraph = null;\r\n\r\n  // optional subgraph keyword\r\n  if (token === 'subgraph') {\r\n    subgraph = {};\r\n    subgraph.type = 'subgraph';\r\n    getToken();\r\n\r\n    // optional graph id\r\n    if (tokenType === TOKENTYPE.IDENTIFIER) {\r\n      subgraph.id = token;\r\n      getToken();\r\n    }\r\n  }\r\n\r\n  // open angle bracket\r\n  if (token === '{') {\r\n    getToken();\r\n\r\n    if (!subgraph) {\r\n      subgraph = {};\r\n    }\r\n    subgraph.parent = graph;\r\n    subgraph.node = graph.node;\r\n    subgraph.edge = graph.edge;\r\n    subgraph.graph = graph.graph;\r\n\r\n    // statements\r\n    parseStatements(subgraph);\r\n\r\n    // close angle bracket\r\n    if (token != '}') {\r\n      throw newSyntaxError('Angle bracket } expected');\r\n    }\r\n    getToken();\r\n\r\n    // remove temporary default options\r\n    delete subgraph.node;\r\n    delete subgraph.edge;\r\n    delete subgraph.graph;\r\n    delete subgraph.parent;\r\n\r\n    // register at the parent graph\r\n    if (!graph.subgraphs) {\r\n      graph.subgraphs = [];\r\n    }\r\n    graph.subgraphs.push(subgraph);\r\n  }\r\n\r\n  return subgraph;\r\n}\r\n\r\n/**\r\n * parse an attribute statement like \"node [shape=circle fontSize=16]\".\r\n * Available keywords are 'node', 'edge', 'graph'.\r\n * The previous list with default attributes will be replaced\r\n * @param {Object} graph\r\n * @returns {String | null} keyword Returns the name of the parsed attribute\r\n *                                  (node, edge, graph), or null if nothing\r\n *                                  is parsed.\r\n */\r\nfunction parseAttributeStatement (graph) {\r\n  // attribute statements\r\n  if (token === 'node') {\r\n    getToken();\r\n\r\n    // node attributes\r\n    graph.node = parseAttributeList();\r\n    return 'node';\r\n  }\r\n  else if (token === 'edge') {\r\n    getToken();\r\n\r\n    // edge attributes\r\n    graph.edge = parseAttributeList();\r\n    return 'edge';\r\n  }\r\n  else if (token === 'graph') {\r\n    getToken();\r\n\r\n    // graph attributes\r\n    graph.graph = parseAttributeList();\r\n    return 'graph';\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * parse a node statement\r\n * @param {Object} graph\r\n * @param {string | number} id\r\n */\r\nfunction parseNodeStatement(graph, id) {\r\n  // node statement\r\n  var node = {\r\n    id: id\r\n  };\r\n  var attr = parseAttributeList();\r\n  if (attr) {\r\n    node.attr = attr;\r\n  }\r\n  addNode(graph, node);\r\n\r\n  // edge statements\r\n  parseEdge(graph, id);\r\n}\r\n\r\n/**\r\n * Parse an edge or a series of edges\r\n * @param {Object} graph\r\n * @param {string | number} from        Id of the from node\r\n */\r\nfunction parseEdge(graph, from) {\r\n  while (token === '->' || token === '--') {\r\n    var to;\r\n    var type = token;\r\n    getToken();\r\n\r\n    var subgraph = parseSubgraph(graph);\r\n    if (subgraph) {\r\n      to = subgraph;\r\n    }\r\n    else {\r\n      if (tokenType != TOKENTYPE.IDENTIFIER) {\r\n        throw newSyntaxError('Identifier or subgraph expected');\r\n      }\r\n      to = token;\r\n      addNode(graph, {\r\n        id: to\r\n      });\r\n      getToken();\r\n    }\r\n\r\n    // parse edge attributes\r\n    var attr = parseAttributeList();\r\n\r\n    // create edge\r\n    var edge = createEdge(graph, from, to, type, attr);\r\n    addEdge(graph, edge);\r\n\r\n    from = to;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a set with attributes,\r\n * for example [label=\"1.000\", shape=solid]\r\n * @return {Object | null} attr\r\n */\r\nfunction parseAttributeList() {\r\n  var attr = null;\r\n\r\n  // edge styles of dot and vis\r\n  var edgeStyles = {\r\n    'dashed': true,\r\n    'solid': false,\r\n    'dotted': [1, 5]\r\n  };\r\n\r\n  while (token === '[') {\r\n    getToken();\r\n    attr = {};\r\n    while (token !== '' && token != ']') {\r\n      if (tokenType != TOKENTYPE.IDENTIFIER) {\r\n        throw newSyntaxError('Attribute name expected');\r\n      }\r\n      var name = token;\r\n\r\n      getToken();\r\n      if (token != '=') {\r\n        throw newSyntaxError('Equal sign = expected');\r\n      }\r\n      getToken();\r\n\r\n      if (tokenType != TOKENTYPE.IDENTIFIER) {\r\n        throw newSyntaxError('Attribute value expected');\r\n      }\r\n      var value = token;\r\n\r\n      // convert from dot style to vis\r\n      if (name === 'style') {\r\n        value = edgeStyles[value];\r\n      }\r\n\r\n      setValue(attr, name, value); // name can be a path\r\n\r\n      getToken();\r\n      if (token ==',') {\r\n        getToken();\r\n      }\r\n    }\r\n\r\n    if (token != ']') {\r\n      throw newSyntaxError('Bracket ] expected');\r\n    }\r\n    getToken();\r\n  }\r\n\r\n  return attr;\r\n}\r\n\r\n/**\r\n * Create a syntax error with extra information on current token and index.\r\n * @param {string} message\r\n * @returns {SyntaxError} err\r\n */\r\nfunction newSyntaxError(message) {\r\n  return new SyntaxError(message + ', got \"' + chop(token, 30) + '\" (char ' + index + ')');\r\n}\r\n\r\n/**\r\n * Chop off text after a maximum length\r\n * @param {string} text\r\n * @param {number} maxLength\r\n * @returns {String}\r\n */\r\nfunction chop (text, maxLength) {\r\n  return (text.length <= maxLength) ? text : (text.substr(0, 27) + '...');\r\n}\r\n\r\n/**\r\n * Execute a function fn for each pair of elements in two arrays\r\n * @param {Array | *} array1\r\n * @param {Array | *} array2\r\n * @param {function} fn\r\n */\r\nfunction forEach2(array1, array2, fn) {\r\n  if (Array.isArray(array1)) {\r\n    array1.forEach(function (elem1) {\r\n      if (Array.isArray(array2)) {\r\n        array2.forEach(function (elem2)  {\r\n          fn(elem1, elem2);\r\n        });\r\n      }\r\n      else {\r\n        fn(elem1, array2);\r\n      }\r\n    });\r\n  }\r\n  else {\r\n    if (Array.isArray(array2)) {\r\n      array2.forEach(function (elem2)  {\r\n        fn(array1, elem2);\r\n      });\r\n    }\r\n    else {\r\n      fn(array1, array2);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Set a nested property on an object\r\n * When nested objects are missing, they will be created.\r\n * For example setProp({}, 'font.color', 'red') will return {font: {color: 'red'}}\r\n * @param {Object} object\r\n * @param {string} path   A dot separated string like 'font.color'\r\n * @param {*} value       Value for the property\r\n * @return {Object} Returns the original object, allows for chaining.\r\n */\r\nfunction setProp(object, path, value) {\r\n  var names = path.split('.');\r\n  var prop = names.pop();\r\n\r\n  // traverse over the nested objects\r\n  var obj = object;\r\n  for (var i = 0; i < names.length; i++) {\r\n    var name = names[i];\r\n    if (!(name in obj)) {\r\n      obj[name] = {};\r\n    }\r\n    obj = obj[name];\r\n  }\r\n\r\n  // set the property value\r\n  obj[prop] = value;\r\n\r\n  return object;\r\n}\r\n\r\n/**\r\n * Convert an object with DOT attributes to their vis.js equivalents.\r\n * @param {Object} attr     Object with DOT attributes\r\n * @param {Object} mapping\r\n * @return {Object}         Returns an object with vis.js attributes\r\n */\r\nfunction convertAttr (attr, mapping) {\r\n  var converted = {};\r\n\r\n  for (var prop in attr) {\r\n    if (attr.hasOwnProperty(prop)) {\r\n      var visProp = mapping[prop];\r\n      if (Array.isArray(visProp)) {\r\n        visProp.forEach(function (visPropI) {\r\n          setProp(converted, visPropI, attr[prop]);\r\n        })\r\n      }\r\n      else if (typeof visProp === 'string') {\r\n        setProp(converted, visProp, attr[prop]);\r\n      }\r\n      else {\r\n        setProp(converted, prop, attr[prop]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return converted;\r\n}\r\n\r\n/**\r\n * Convert a string containing a graph in DOT language into a map containing\r\n * with nodes and edges in the format of graph.\r\n * @param {string} data         Text containing a graph in DOT-notation\r\n * @return {Object} graphData\r\n */\r\nfunction DOTToGraph (data) {\r\n  // parse the DOT file\r\n  var dotData = parseDOT(data);\r\n  var graphData = {\r\n    nodes: [],\r\n    edges: [],\r\n    options: {}\r\n  };\r\n\r\n  // copy the nodes\r\n  if (dotData.nodes) {\r\n    dotData.nodes.forEach(function (dotNode) {\r\n      var graphNode = {\r\n        id: dotNode.id,\r\n        label: String(dotNode.label || dotNode.id)\r\n      };\r\n      merge(graphNode, convertAttr(dotNode.attr, NODE_ATTR_MAPPING));\r\n      if (graphNode.image) {\r\n        graphNode.shape = 'image';\r\n      }\r\n      graphData.nodes.push(graphNode);\r\n    });\r\n  }\r\n\r\n  // copy the edges\r\n  if (dotData.edges) {\r\n    /**\r\n     * Convert an edge in DOT format to an edge with VisGraph format\r\n     * @param {Object} dotEdge\r\n     * @returns {Object} graphEdge\r\n     */\r\n    var convertEdge = function (dotEdge) {\r\n      var graphEdge = {\r\n        from: dotEdge.from,\r\n        to: dotEdge.to\r\n      };\r\n      merge(graphEdge, convertAttr(dotEdge.attr, EDGE_ATTR_MAPPING));\r\n      graphEdge.arrows = (dotEdge.type === '->') ? 'to' : undefined;\r\n\r\n      return graphEdge;\r\n    };\r\n\r\n    dotData.edges.forEach(function (dotEdge) {\r\n      var from, to;\r\n      if (dotEdge.from instanceof Object) {\r\n        from = dotEdge.from.nodes;\r\n      }\r\n      else {\r\n        from = {\r\n          id: dotEdge.from\r\n        }\r\n      }\r\n\r\n      // TODO: support for attributes 'dir' and 'arrowhead' (edge arrows)\r\n\r\n      if (dotEdge.to instanceof Object) {\r\n        to = dotEdge.to.nodes;\r\n      }\r\n      else {\r\n        to = {\r\n          id: dotEdge.to\r\n        }\r\n      }\r\n\r\n      if (dotEdge.from instanceof Object && dotEdge.from.edges) {\r\n        dotEdge.from.edges.forEach(function (subEdge) {\r\n          var graphEdge = convertEdge(subEdge);\r\n          graphData.edges.push(graphEdge);\r\n        });\r\n      }\r\n\r\n      forEach2(from, to, function (from, to) {\r\n        var subEdge = createEdge(graphData, from.id, to.id, dotEdge.type, dotEdge.attr);\r\n        var graphEdge = convertEdge(subEdge);\r\n        graphData.edges.push(graphEdge);\r\n      });\r\n\r\n      if (dotEdge.to instanceof Object && dotEdge.to.edges) {\r\n        dotEdge.to.edges.forEach(function (subEdge) {\r\n          var graphEdge = convertEdge(subEdge);\r\n          graphData.edges.push(graphEdge);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // copy the options\r\n  if (dotData.attr) {\r\n    graphData.options = dotData.attr;\r\n  }\r\n\r\n  return graphData;\r\n}\r\n\r\n// exports\r\nexports.parseDOT   = parseDOT;\r\nexports.DOTToGraph = DOTToGraph;\r\n","/**\r\n *\r\n * @param {json} gephiJSON\r\n * @param {obj} optionsObj\r\n * @returns {{nodes: Array, edges: Array}}\r\n */\r\nfunction parseGephi(gephiJSON, optionsObj) {\r\n  var edges = [];\r\n  var nodes = [];\r\n  var options = {\r\n    edges: {\r\n      inheritColor: false\r\n    },\r\n    nodes: {\r\n      fixed: false,\r\n      parseColor: false\r\n    }\r\n  };\r\n\r\n  if (optionsObj !== undefined) {\r\n    if (optionsObj.fixed !== undefined)        {options.nodes.fixed = optionsObj.fixed}\r\n    if (optionsObj.parseColor !== undefined)   {options.nodes.parseColor = optionsObj.parseColor}\r\n    if (optionsObj.inheritColor !== undefined) {options.edges.inheritColor = optionsObj.inheritColor}\r\n  }\r\n\r\n  var gEdges = gephiJSON.edges;\r\n  var gNodes = gephiJSON.nodes;\r\n  for (var i = 0; i < gEdges.length; i++) {\r\n    var edge = {};\r\n    var gEdge = gEdges[i];\r\n    edge['id'] = gEdge.id;\r\n    edge['from'] = gEdge.source;\r\n    edge['to'] = gEdge.target;\r\n    edge['attributes'] = gEdge.attributes;\r\n    edge['label'] = gEdge.label;\r\n    edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\r\n    if (gEdge['type'] === 'Directed') {\r\n      edge['arrows'] = 'to';\r\n    }\r\n//    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\r\n//    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\r\n    if (gEdge.color && options.inheritColor === false) {\r\n      edge['color'] = gEdge.color;\r\n    }\r\n    edges.push(edge);\r\n  }\r\n\r\n  for (var j = 0; j < gNodes.length; j++) {\r\n    var node = {};\r\n    var gNode = gNodes[j];\r\n    node['id'] = gNode.id;\r\n    node['attributes'] = gNode.attributes;\r\n    node['x'] = gNode.x;\r\n    node['y'] = gNode.y;\r\n    node['label'] = gNode.label;\r\n    node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : gNode.title;\r\n    if (options.nodes.parseColor === true) {\r\n      node['color'] = gNode.color;\r\n    }\r\n    else {\r\n      node['color'] = gNode.color !== undefined ? {background:gNode.color, border:gNode.color, highlight: {background:gNode.color, border:gNode.color}, hover:{background:gNode.color, border:gNode.color}} : undefined;\r\n    }\r\n    node['size'] = gNode.size;\r\n    node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\r\n    nodes.push(node);\r\n  }\r\n\r\n  return {nodes:nodes, edges:edges};\r\n}\r\n\r\nexports.parseGephi = parseGephi;\r\n","let util = require('../../../../util');\r\nlet ComponentUtil = require('./ComponentUtil').default;\r\nlet LabelSplitter = require('./LabelSplitter').default;\r\n\r\n/**\r\n * @typedef {'bold'|'ital'|'boldital'|'mono'|'normal'} MultiFontStyle\r\n *\r\n * The allowed specifiers of multi-fonts.\r\n */\r\n\r\n/**\r\n * @typedef {{color:string, size:number, face:string, mod:string, vadjust:number}} MultiFontOptions\r\n *\r\n * The full set of options of a given multi-font.\r\n */\r\n\r\n/**\r\n * @typedef {Array.<object>} Pile\r\n *\r\n * Sequence of option objects, the order is significant.\r\n * The sequence is used to determine the value of a given option.\r\n *\r\n * Usage principles:\r\n *\r\n *  - All search is done in the sequence of the pile.\r\n *  - As soon as a value is found, the searching stops.\r\n *  - prototypes are totally ignored. The idea is to add option objects used as prototypes\r\n *    to the pile, in the correct order.\r\n */\r\n\r\n\r\n/**\r\n * List of special styles for multi-fonts\r\n * @private\r\n */\r\nconst multiFontStyle = ['bold', 'ital', 'boldital', 'mono'];\r\n\r\n/**\r\n * A Label to be used for Nodes or Edges.\r\n */\r\nclass Label {\r\n\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Object} options\r\n   * @param {boolean} [edgelabel=false]\r\n   */\r\n  constructor(body, options, edgelabel = false) {\r\n    this.body = body;\r\n    this.pointToSelf = false;\r\n    this.baseSize = undefined;\r\n    this.fontOptions = {};      // instance variable containing the *instance-local* font options\r\n    this.setOptions(options);\r\n    this.size = {top: 0, left: 0, width: 0, height: 0, yLine: 0};\r\n    this.isEdgeLabel = edgelabel;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {Object} options the options of the parent Node-instance\r\n   */\r\n  setOptions(options) {\r\n    this.elementOptions = options;  // Reference to the options of the parent Node-instance \r\n\r\n    this.initFontOptions(options.font);\r\n\r\n    if (ComponentUtil.isValidLabel(options.label)) {\r\n      this.labelDirty = true;\r\n    } else {\r\n      // Bad label! Change the option value to prevent bad stuff happening\r\n      options.label = '';\r\n    }\r\n\r\n    if (options.font !== undefined && options.font !== null) { // font options can be deleted at various levels\r\n      if (typeof options.font === 'string') {\r\n        this.baseSize = this.fontOptions.size;\r\n      }\r\n      else if (typeof options.font === 'object') {\r\n        let size = options.font.size;\r\n \r\n        if (size !== undefined) {\r\n          this.baseSize = size;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Init the font Options structure.\r\n   *\r\n   * Member fontOptions serves as an accumulator for the current font options.\r\n   * As such, it needs to be completely separated from the node options.\r\n   *\r\n   * @param {Object} newFontOptions the new font options to process\r\n   * @private\r\n   */\r\n  initFontOptions(newFontOptions) {\r\n    // Prepare the multi-font option objects.\r\n    // These will be filled in propagateFonts(), if required\r\n    util.forEach(multiFontStyle, (style) => {\r\n      this.fontOptions[style] = {};\r\n    });\r\n\r\n    // Handle shorthand option, if present\r\n    if (Label.parseFontString(this.fontOptions, newFontOptions)) {\r\n      this.fontOptions.vadjust = 0;\r\n      return;\r\n    }\r\n\r\n    // Copy over the non-multifont options, if specified\r\n    util.forEach(newFontOptions, (prop, n) => {\r\n      if (prop !== undefined && prop !== null && typeof prop !== 'object') {\r\n        this.fontOptions[n] = prop;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * If in-variable is a string, parse it as a font specifier.\r\n   *\r\n   * Note that following is not done here and have to be done after the call:\r\n   * - No number conversion (size)\r\n   * - Not all font options are set (vadjust, mod)\r\n   *\r\n   * @param {Object} outOptions  out-parameter, object in which to store the parse results (if any)\r\n   * @param {Object} inOptions  font options to parse\r\n   * @return {boolean} true if font parsed as string, false otherwise\r\n   * @static\r\n   */\r\n  static parseFontString(outOptions, inOptions) {\r\n    if (!inOptions || typeof inOptions !== 'string') return false;\r\n\r\n    let newOptionsArray = inOptions.split(\" \");\r\n\r\n    outOptions.size  = newOptionsArray[0].replace(\"px\",'');\r\n    outOptions.face  = newOptionsArray[1];\r\n    outOptions.color = newOptionsArray[2];\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the width and height constraints based on 'nearest' value\r\n   *\r\n   * @param {Array} pile array of option objects to consider\r\n   * @returns {object} the actual constraint values to use\r\n   * @private\r\n   */\r\n  constrain(pile) {\r\n    // NOTE: constrainWidth and  constrainHeight never set!\r\n    // NOTE: for edge labels, only 'maxWdt' set\r\n    // Node labels can set all the fields\r\n    let fontOptions = {\r\n      constrainWidth: false,\r\n      maxWdt: -1,\r\n      minWdt: -1,\r\n      constrainHeight: false,\r\n      minHgt: -1,\r\n      valign: 'middle',\r\n    }\r\n\r\n    let widthConstraint = util.topMost(pile, 'widthConstraint');\r\n    if (typeof widthConstraint === 'number') {\r\n      fontOptions.maxWdt = Number(widthConstraint);\r\n      fontOptions.minWdt = Number(widthConstraint);\r\n    } else if (typeof widthConstraint === 'object') {\r\n      let widthConstraintMaximum = util.topMost(pile, ['widthConstraint', 'maximum']);\r\n      if (typeof widthConstraintMaximum === 'number') {\r\n        fontOptions.maxWdt = Number(widthConstraintMaximum);\r\n      }\r\n      let widthConstraintMinimum = util.topMost(pile, ['widthConstraint', 'minimum'])\r\n      if (typeof widthConstraintMinimum === 'number') {\r\n        fontOptions.minWdt = Number(widthConstraintMinimum);\r\n      }\r\n    }\r\n\r\n\r\n    let heightConstraint = util.topMost(pile, 'heightConstraint');\r\n    if (typeof heightConstraint === 'number') {\r\n      fontOptions.minHgt = Number(heightConstraint);\r\n    } else if (typeof heightConstraint === 'object') {\r\n      let heightConstraintMinimum = util.topMost(pile, ['heightConstraint', 'minimum']);\r\n      if (typeof heightConstraintMinimum === 'number') {\r\n        fontOptions.minHgt = Number(heightConstraintMinimum);\r\n      }\r\n      let heightConstraintValign = util.topMost(pile, ['heightConstraint', 'valign']);\r\n      if (typeof heightConstraintValign === 'string') {\r\n        if ((heightConstraintValign === 'top')|| (heightConstraintValign === 'bottom')) {\r\n          fontOptions.valign = heightConstraintValign;\r\n        }\r\n      }\r\n    }\r\n\r\n    return fontOptions;\r\n  }\r\n\r\n\r\n  /**\r\n   * Set options and update internal state\r\n   *\r\n   * @param {Object} options  options to set\r\n   * @param {Array}  pile     array of option objects to consider for option 'chosen'\r\n   */\r\n  update(options, pile) {\r\n    this.setOptions(options, true);\r\n    this.propagateFonts(pile);\r\n    util.deepExtend(this.fontOptions, this.constrain(pile));\r\n    this.fontOptions.chooser = ComponentUtil.choosify('label', pile);\r\n  }\r\n\r\n\r\n  /**\r\n   * When margins are set in an element, adjust sizes is called to remove them\r\n   * from the width/height constraints. This must be done prior to label sizing.\r\n   *\r\n   * @param {{top: number, right: number, bottom: number, left: number}} margins\r\n   */\r\n  adjustSizes(margins) {\r\n    let widthBias =  (margins) ? (margins.right + margins.left) : 0;\r\n    if (this.fontOptions.constrainWidth) {\r\n      this.fontOptions.maxWdt -= widthBias;\r\n      this.fontOptions.minWdt -= widthBias;\r\n    }\r\n    let heightBias = (margins) ? (margins.top + margins.bottom)  : 0;\r\n    if (this.fontOptions.constrainHeight) {\r\n      this.fontOptions.minHgt -= heightBias;\r\n    }\r\n  }\r\n\r\n\r\n/////////////////////////////////////////////////////////\r\n// Methods for handling options piles\r\n// Eventually, these will be moved to a separate class\r\n/////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * Add the font members of the passed list of option objects to the pile.\r\n   *\r\n   * @param {Pile} dstPile  pile of option objects add to \r\n   * @param {Pile} srcPile  pile of option objects to take font options from\r\n   * @private\r\n   */\r\n  addFontOptionsToPile(dstPile, srcPile) {\r\n    for (let i = 0; i < srcPile.length; ++i) {\r\n      this.addFontToPile(dstPile, srcPile[i]);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add given font option object to the list of objects (the 'pile') to consider for determining\r\n   * multi-font option values.\r\n   *\r\n   * @param {Pile} pile  pile of option objects to use\r\n   * @param {object} options  instance to add to pile\r\n   * @private\r\n   */\r\n  addFontToPile(pile, options) {\r\n    if (options === undefined) return;\r\n    if (options.font === undefined || options.font === null) return;\r\n\r\n    let item = options.font;\r\n    pile.push(item);\r\n  }\r\n\r\n\r\n  /**\r\n   * Collect all own-property values from the font pile that aren't multi-font option objectss.\r\n   *\r\n   * @param {Pile} pile  pile of option objects to use\r\n   * @returns {object} object with all current own basic font properties\r\n   * @private\r\n   */\r\n  getBasicOptions(pile) {\r\n    let ret = {};\r\n\r\n    // Scans the whole pile to get all options present\r\n    for (let n = 0; n < pile.length; ++n) {\r\n      let fontOptions = pile[n];\r\n\r\n      // Convert shorthand if necessary\r\n      let tmpShorthand = {};\r\n      if (Label.parseFontString(tmpShorthand, fontOptions)) {\r\n        fontOptions = tmpShorthand;\r\n      }\r\n\r\n      util.forEach(fontOptions, (opt, name) => {\r\n        if (opt === undefined) return;        // multi-font option need not be present \r\n        if (ret.hasOwnProperty(name)) return; // Keep first value we encounter\r\n\r\n        if (multiFontStyle.indexOf(name) !== -1) {\r\n          // Skip multi-font properties but we do need the structure\r\n          ret[name] = {};\r\n        } else {\r\n          ret[name] = opt;\r\n        }\r\n      });\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the value for given option for the given multi-font.\r\n   *\r\n   * All available option objects are trawled in the set order to construct the option values.\r\n   *\r\n   * ---------------------------------------------------------------------\r\n   * ## Traversal of pile for multi-fonts\r\n   *\r\n   * The determination of multi-font option values is a special case, because any values not\r\n   * present in the multi-font options should by definition be taken from the main font options,\r\n   * i.e. from the current 'parent' object of the multi-font option.\r\n   *\r\n   * ### Search order for multi-fonts\r\n   *\r\n   * 'bold' used as example:\r\n   *\r\n   *   - search in option group 'bold' in local properties\r\n   *   - search in main font option group in local properties\r\n   *\r\n   * ---------------------------------------------------------------------\r\n   *\r\n   * @param {Pile} pile  pile of option objects to use\r\n   * @param {MultiFontStyle} multiName sub path for the multi-font\r\n   * @param {string} option  the option to search for, for the given multi-font\r\n   * @returns {string|number} the value for the given option\r\n   * @private\r\n   */\r\n  getFontOption(pile, multiName, option) {\r\n    let multiFont;\r\n\r\n    // Search multi font in local properties\r\n    for (let n = 0; n < pile.length; ++n) {\r\n      let fontOptions = pile[n];\r\n\r\n      if (fontOptions.hasOwnProperty(multiName)) {\r\n        multiFont = fontOptions[multiName];\r\n        if (multiFont === undefined || multiFont === null) continue;\r\n\r\n        // Convert shorthand if necessary\r\n        // TODO: inefficient to do this conversion every time; find a better way.\r\n        let tmpShorthand = {};\r\n        if (Label.parseFontString(tmpShorthand, multiFont)) {\r\n          multiFont = tmpShorthand;\r\n        }\r\n\r\n        if (multiFont.hasOwnProperty(option)) {\r\n          return multiFont[option];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Option is not mentioned in the multi font options; take it from the parent font options.\r\n    // These have already been converted with getBasicOptions(), so use the converted values.\r\n    if (this.fontOptions.hasOwnProperty(option)) {\r\n      return this.fontOptions[option];\r\n    }\r\n\r\n    // A value **must** be found; you should never get here.\r\n    throw new Error(\"Did not find value for multi-font for property: '\" + option + \"'\");\r\n  }\r\n\r\n\r\n  /**\r\n   * Return all options values for the given multi-font.\r\n   *\r\n   * All available option objects are trawled in the set order to construct the option values.\r\n   *\r\n   * @param {Pile} pile  pile of option objects to use\r\n   * @param {MultiFontStyle} multiName sub path for the mod-font\r\n   * @returns {MultiFontOptions}\r\n   * @private\r\n   */\r\n  getFontOptions(pile, multiName) {\r\n    let result = {};\r\n    let optionNames = ['color', 'size', 'face', 'mod', 'vadjust'];  // List of allowed options per multi-font\r\n\r\n    for (let i = 0; i < optionNames.length; ++i) {\r\n      let mod = optionNames[i];\r\n      result[mod] = this.getFontOption(pile, multiName, mod);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n/////////////////////////////////////////////////////////\r\n// End methods for handling options piles\r\n/////////////////////////////////////////////////////////\r\n\r\n\r\n  /**\r\n   * Collapse the font options for the multi-font to single objects, from\r\n   * the chain of option objects passed (the 'pile').\r\n   *\r\n   * @param {Pile} pile  sequence of option objects to consider.\r\n   *                     First item in list assumed to be the newly set options.\r\n   */\r\n  propagateFonts(pile) {\r\n    let fontPile = [];   // sequence of font objects to consider, order important\r\n\r\n    // Note that this.elementOptions is not used here.\r\n    this.addFontOptionsToPile(fontPile, pile);\r\n    this.fontOptions = this.getBasicOptions(fontPile);\r\n\r\n    // We set multifont values even if multi === false, for consistency (things break otherwise)\r\n    for (let i = 0; i < multiFontStyle.length; ++i) {\r\n      let mod = multiFontStyle[i];\r\n      let modOptions  = this.fontOptions[mod];\r\n      let tmpMultiFontOptions = this.getFontOptions(fontPile, mod);\r\n\r\n      // Copy over found values\r\n      util.forEach(tmpMultiFontOptions, (option, n) => {\r\n        modOptions[n] = option;\r\n      });\r\n\r\n      modOptions.size    = Number(modOptions.size);\r\n      modOptions.vadjust = Number(modOptions.vadjust);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Main function. This is called from anything that wants to draw a label.\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {string} [baseline='middle']\r\n   */\r\n  draw(ctx, x, y, selected, hover, baseline = 'middle') {\r\n    // if no label, return\r\n    if (this.elementOptions.label === undefined)\r\n      return;\r\n\r\n    // check if we have to render the label\r\n    let viewFontSize = this.fontOptions.size * this.body.view.scale;\r\n    if (this.elementOptions.label && viewFontSize < this.elementOptions.scaling.label.drawThreshold - 1)\r\n      return;\r\n\r\n    // This ensures that there will not be HUGE letters on screen\r\n    // by setting an upper limit on the visible text size (regardless of zoomLevel)\r\n    if (viewFontSize >= this.elementOptions.scaling.label.maxVisible) {\r\n      viewFontSize = Number(this.elementOptions.scaling.label.maxVisible) / this.body.view.scale;\r\n    }\r\n\r\n    // update the size cache if required\r\n    this.calculateLabelSize(ctx, selected, hover, x, y, baseline);\r\n    this._drawBackground(ctx);\r\n    this._drawText(ctx, x, this.size.yLine, baseline, viewFontSize);\r\n  }\r\n\r\n\r\n  /**\r\n   * Draws the label background\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @private\r\n   */\r\n  _drawBackground(ctx) {\r\n    if (this.fontOptions.background !== undefined && this.fontOptions.background !== \"none\") {\r\n      ctx.fillStyle = this.fontOptions.background;\r\n      let size = this.getSize();\r\n      ctx.fillRect(size.left, size.top, size.width, size.height);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {string} [baseline='middle']\r\n   * @param {number} viewFontSize \r\n   * @private\r\n   */\r\n  _drawText(ctx, x, y, baseline = 'middle', viewFontSize) {\r\n    [x, y] = this._setAlignment(ctx, x, y, baseline);\r\n\r\n    ctx.textAlign = 'left';\r\n    x = x - this.size.width / 2; // Shift label 1/2-distance to the left\r\n    if ((this.fontOptions.valign) && (this.size.height > this.size.labelHeight)) {\r\n      if (this.fontOptions.valign === 'top') {\r\n        y -= (this.size.height - this.size.labelHeight) / 2;\r\n      }\r\n      if (this.fontOptions.valign === 'bottom') {\r\n        y += (this.size.height - this.size.labelHeight) / 2;\r\n      }\r\n    }\r\n\r\n    // draw the text\r\n    for (let i = 0; i < this.lineCount; i++) {\r\n      let line = this.lines[i];\r\n      if (line && line.blocks) {\r\n        let width = 0;\r\n        if (this.isEdgeLabel || this.fontOptions.align === 'center') {\r\n          width += (this.size.width - line.width) / 2\r\n        } else if (this.fontOptions.align === 'right') {\r\n          width += (this.size.width - line.width)\r\n        }\r\n        for (let j = 0; j < line.blocks.length; j++) {\r\n          let block = line.blocks[j];\r\n          ctx.font = block.font;\r\n          let [fontColor, strokeColor] = this._getColor(block.color, viewFontSize, block.strokeColor);\r\n          if (block.strokeWidth > 0) {\r\n            ctx.lineWidth = block.strokeWidth;\r\n            ctx.strokeStyle = strokeColor;\r\n            ctx.lineJoin = 'round';\r\n          }\r\n          ctx.fillStyle = fontColor;\r\n\r\n          if (block.strokeWidth > 0) {\r\n            ctx.strokeText(block.text, x + width, y + block.vadjust);\r\n          }\r\n          ctx.fillText(block.text, x + width, y + block.vadjust);\r\n          width += block.width;\r\n        }\r\n        y += line.height;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {string} baseline\r\n   * @returns {Array.<number>}\r\n   * @private\r\n   */\r\n  _setAlignment(ctx, x, y, baseline) {\r\n    // check for label alignment (for edges)\r\n    // TODO: make alignment for nodes\r\n    if (this.isEdgeLabel && this.fontOptions.align !== 'horizontal' && this.pointToSelf === false) {\r\n      x = 0;\r\n      y = 0;\r\n\r\n      let lineMargin = 2;\r\n      if (this.fontOptions.align === 'top') {\r\n        ctx.textBaseline = 'alphabetic';\r\n        y -= 2 * lineMargin; // distance from edge, required because we use alphabetic. Alphabetic has less difference between browsers\r\n      }\r\n      else if (this.fontOptions.align === 'bottom') {\r\n        ctx.textBaseline = 'hanging';\r\n        y += 2 * lineMargin;// distance from edge, required because we use hanging. Hanging has less difference between browsers\r\n      }\r\n      else {\r\n        ctx.textBaseline = 'middle';\r\n      }\r\n    }\r\n    else {\r\n      ctx.textBaseline = baseline;\r\n    }\r\n    return [x,y];\r\n  }\r\n\r\n  /**\r\n   * fade in when relative scale is between threshold and threshold - 1.\r\n   * If the relative scale would be smaller than threshold -1 the draw function would have returned before coming here.\r\n   *\r\n   * @param {string} color  The font color to use\r\n   * @param {number} viewFontSize\r\n   * @param {string} initialStrokeColor\r\n   * @returns {Array.<string>} An array containing the font color and stroke color\r\n   * @private\r\n   */\r\n  _getColor(color, viewFontSize, initialStrokeColor) {\r\n    let fontColor = color || '#000000';\r\n    let strokeColor = initialStrokeColor || '#ffffff';\r\n    if (viewFontSize <= this.elementOptions.scaling.label.drawThreshold) {\r\n      let opacity = Math.max(0, Math.min(1, 1 - (this.elementOptions.scaling.label.drawThreshold - viewFontSize)));\r\n      fontColor = util.overrideOpacity(fontColor, opacity);\r\n      strokeColor = util.overrideOpacity(strokeColor, opacity);\r\n    }\r\n    return [fontColor, strokeColor];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @returns {{width: number, height: number}}\r\n   */\r\n  getTextSize(ctx, selected = false, hover = false) {\r\n    this._processLabel(ctx, selected, hover);\r\n    return {\r\n      width: this.size.width,\r\n      height: this.size.height,\r\n      lineCount: this.lineCount\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the current dimensions of the label\r\n   *\r\n   * @return {rect}\r\n   */\r\n  getSize() {\r\n    let lineMargin = 2;\r\n    let x = this.size.left;                 // default values which might be overridden below\r\n    let y = this.size.top - 0.5*lineMargin; // idem\r\n\r\n    if (this.isEdgeLabel) {\r\n      const x2 = -this.size.width * 0.5;\r\n\r\n      switch (this.fontOptions.align) {\r\n        case 'middle':\r\n          x = x2;\r\n          y = -this.size.height * 0.5\r\n          break;\r\n        case 'top':\r\n          x = x2;\r\n          y = -(this.size.height + lineMargin);\r\n          break;\r\n        case 'bottom':\r\n          x = x2;\r\n          y = lineMargin;\r\n          break;\r\n      }\r\n    }\r\n\r\n    var ret = {\r\n      left  : x,\r\n      top   : y,\r\n      width : this.size.width,\r\n      height: this.size.height,\r\n    };\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {number} [x=0]\r\n   * @param {number} [y=0]\r\n   * @param {'middle'|'hanging'} [baseline='middle']\r\n   */\r\n  calculateLabelSize(ctx, selected, hover, x = 0, y = 0, baseline = 'middle') {\r\n    this._processLabel(ctx, selected, hover);\r\n    this.size.left = x - this.size.width * 0.5;\r\n    this.size.top = y - this.size.height * 0.5;\r\n    this.size.yLine = y + (1 - this.lineCount) * 0.5 * this.fontOptions.size;\r\n    if (baseline === \"hanging\") {\r\n      this.size.top += 0.5 * this.fontOptions.size;\r\n      this.size.top += 4;   // distance from node, required because we use hanging. Hanging has less difference between browsers\r\n      this.size.yLine += 4; // distance from node\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {string} mod\r\n   * @returns {{color, size, face, mod, vadjust, strokeWidth: *, strokeColor: (*|string|allOptions.edges.font.strokeColor|{string}|allOptions.nodes.font.strokeColor|Array)}}\r\n   */\r\n  getFormattingValues(ctx, selected, hover, mod) {\r\n    let getValue = function(fontOptions, mod, option) {\r\n      if (mod === \"normal\") {\r\n        if (option === 'mod' ) return \"\";\r\n        return fontOptions[option];\r\n      }\r\n\r\n      if (fontOptions[mod][option] !== undefined) {  // Grumbl leaving out test on undefined equals false for \"\" \r\n        return fontOptions[mod][option];\r\n      } else {\r\n        // Take from parent font option\r\n        return fontOptions[option];\r\n      }\r\n    };\r\n\r\n    let values = {\r\n      color  : getValue(this.fontOptions, mod, 'color'  ),\r\n      size   : getValue(this.fontOptions, mod, 'size'   ),\r\n      face   : getValue(this.fontOptions, mod, 'face'   ),\r\n      mod    : getValue(this.fontOptions, mod, 'mod'    ),\r\n      vadjust: getValue(this.fontOptions, mod, 'vadjust'),\r\n      strokeWidth: this.fontOptions.strokeWidth,\r\n      strokeColor: this.fontOptions.strokeColor\r\n    };\r\n    if (selected || hover) {\r\n      if (mod === \"normal\" && (this.fontOptions.chooser === true) && (this.elementOptions.labelHighlightBold)) {\r\n          values.mod = 'bold';\r\n      } else {\r\n        if (typeof this.fontOptions.chooser === 'function') {\r\n          this.fontOptions.chooser(values, this.elementOptions.id, selected, hover);\r\n        }\r\n      }\r\n    }\r\n\r\n    let fontString = \"\";\r\n    if (values.mod !== undefined && values.mod !== \"\") {  // safeguard for undefined - this happened\r\n      fontString += values.mod + \" \";\r\n    }\r\n    fontString += values.size + \"px \" + values.face;\r\n\r\n    ctx.font = fontString.replace(/\"/g, \"\");\r\n    values.font = ctx.font;\r\n    values.height = values.size;\r\n    return values;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @returns {boolean}\r\n   */\r\n  differentState(selected, hover) {\r\n    return ((selected !== this.selectedState) || (hover !== this.hoverState));\r\n  }\r\n   \r\n\r\n  /**\r\n   * This explodes the passed text into lines and determines the width, height and number of lines.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {string} inText  the text to explode\r\n   * @returns {{width, height, lines}|*}\r\n   * @private\r\n   */\r\n  _processLabelText(ctx, selected, hover, inText) {\r\n    let splitter = new LabelSplitter(ctx, this, selected, hover);\r\n    return splitter.process(inText);\r\n  }\r\n\r\n\r\n  /**\r\n   * This explodes the label string into lines and sets the width, height and number of lines.\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @private\r\n   */\r\n  _processLabel(ctx, selected, hover) {\r\n\r\n    if(this.labelDirty === false && !this.differentState(selected,hover))\r\n      return;\r\n    \r\n    let state = this._processLabelText(ctx, selected, hover, this.elementOptions.label);\r\n\r\n    if ((this.fontOptions.minWdt > 0) && (state.width < this.fontOptions.minWdt)) {\r\n      state.width = this.fontOptions.minWdt;\r\n    }\r\n\r\n    this.size.labelHeight =state.height;\r\n    if ((this.fontOptions.minHgt > 0) && (state.height < this.fontOptions.minHgt)) {\r\n      state.height = this.fontOptions.minHgt;\r\n    }\r\n\r\n    this.lines = state.lines;\r\n    this.lineCount = state.lines.length;\r\n    this.size.width = state.width;\r\n    this.size.height = state.height;\r\n    this.selectedState = selected;\r\n    this.hoverState = hover;\r\n\r\n    this.labelDirty = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if this label is visible\r\n   *\r\n   * @return {boolean} true if this label will be show, false otherwise\r\n   */\r\n  visible() {\r\n    if ((this.size.width === 0 || this.size.height === 0)\r\n      || this.elementOptions.label === undefined) {\r\n      return false;  // nothing to display\r\n    }\r\n\r\n    let viewFontSize = this.fontOptions.size * this.body.view.scale;\r\n    if (viewFontSize < this.elementOptions.scaling.label.drawThreshold - 1) {\r\n      return false;  // Too small or too far away to show\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Label;\r\n","/** ============================================================================\r\n * Location of all the endpoint drawing routines.\r\n *\r\n * Every endpoint has its own drawing routine, which contains an endpoint definition.\r\n *\r\n * The endpoint definitions must have the following properies:\r\n *\r\n * - (0,0) is the connection point to the node it attaches to\r\n * - The endpoints are orientated to the positive x-direction\r\n * - The length of the endpoint is at most 1\r\n *\r\n * As long as the endpoint classes remain simple and not too numerous, they will\r\n * be contained within this module.\r\n * All classes here except `EndPoints` should be considered as private to this module.\r\n *\r\n * -----------------------------------------------------------------------------\r\n * ### Further Actions\r\n *\r\n * After adding a new endpoint here, you also need to do the following things:\r\n *\r\n * - Add the new endpoint name to `network/options.js` in array `endPoints`.\r\n * - Add the new endpoint name to the documentation.\r\n *   Scan for 'arrows.to.type` and add it to the description.\r\n * - Add the endpoint to the examples. At the very least, add it to example\r\n *   `edgeStyles/arrowTypes`.\r\n * ============================================================================= */\r\n\r\n// NOTE: When a typedef is isolated in a separate comment block, an actual description is generated for it,\r\n//       using the rest of the commenting in the code block. Usage of typedef in other comments then\r\n//       link to there. TIL.\r\n//\r\n//       Also noteworthy, all typedef's set up in this manner are collected in a single, global page 'global.html'.\r\n//       In other words, it doesn't matter *where* the typedef's are defined in the code.\r\n//\r\n//\r\n// TODO: add descriptive commenting to given typedef's\r\n\r\n/**\r\n * @typedef {{type:string, point:Point, angle:number, length:number}} ArrowData\r\n *\r\n * Object containing instantiation data for a given endpoint.\r\n */\r\n\r\n/**\r\n * @typedef {{x:number, y:number}} Point\r\n * \r\n * A point in view-coordinates.\r\n */\r\n\r\n/**\r\n * Common methods for endpoints\r\n *\r\n * @class\r\n */\r\nclass EndPoint {\r\n\r\n  /**\r\n   * Apply transformation on points for display.\r\n   *\r\n   * The following is done:\r\n   * - rotate by the specified angle\r\n   * - multiply the (normalized) coordinates by the passed length\r\n   * - offset by the target coordinates\r\n   *\r\n   * @param {Array<Point>} points\r\n   * @param {ArrowData} arrowData\r\n   * @static\r\n   */\r\n  static transform(points, arrowData) {\r\n    if (!(points instanceof Array)) {\r\n      points = [points];\r\n    }\r\n\r\n    var x = arrowData.point.x;\r\n    var y = arrowData.point.y;\r\n    var angle = arrowData.angle\r\n    var length = arrowData.length;\r\n\r\n    for(var i = 0; i < points.length; ++i) {\r\n      var p  = points[i];\r\n      var xt = p.x * Math.cos(angle) - p.y * Math.sin(angle);\r\n      var yt = p.x * Math.sin(angle) + p.y * Math.cos(angle);\r\n\r\n      p.x = x + length*xt;\r\n      p.y = y + length*yt;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Draw a closed path using the given real coordinates.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Array.<Point>} points\r\n   * @static\r\n   */\r\n  static drawPath(ctx, points) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(points[0].x, points[0].y);\r\n    for(var i = 1; i < points.length; ++i) {\r\n      ctx.lineTo(points[i].x, points[i].y);\r\n    }\r\n    ctx.closePath();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Drawing methods for the arrow endpoint.\r\n * @extends EndPoint\r\n */\r\nclass Arrow extends EndPoint {\r\n\r\n  /**\r\n   * Draw this shape at the end of a line.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {ArrowData} arrowData\r\n   * @static\r\n   */\r\n  static draw(ctx, arrowData) {\r\n    // Normalized points of closed path, in the order that they should be drawn.\r\n    // (0, 0) is the attachment point, and the point around which should be rotated\r\n    var points = [\r\n      { x: 0  , y: 0  },\r\n      { x:-1  , y: 0.3},\r\n      { x:-0.9, y: 0  },\r\n      { x:-1  , y:-0.3},\r\n    ];\r\n\r\n    EndPoint.transform(points, arrowData);\r\n    EndPoint.drawPath(ctx, points);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Drawing methods for the circle endpoint.\r\n */\r\nclass Circle {\r\n\r\n  /**\r\n   * Draw this shape at the end of a line.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {ArrowData} arrowData\r\n   * @static\r\n   */\r\n  static draw(ctx, arrowData) {\r\n    var point = {x:-0.4, y:0};\r\n\r\n    EndPoint.transform(point, arrowData);\r\n    ctx.circle(point.x, point.y, arrowData.length*0.4);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Drawing methods for the bar endpoint.\r\n */\r\nclass Bar {\r\n\r\n  /**\r\n   * Draw this shape at the end of a line.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {ArrowData} arrowData\r\n   * @static\r\n   */\r\n  static draw(ctx, arrowData) {\r\n/*\r\n    var points = [\r\n      {x:0, y:0.5},\r\n      {x:0, y:-0.5}\r\n    ];\r\n\r\n    EndPoint.transform(points, arrowData);\r\n    ctx.beginPath();\r\n    ctx.moveTo(points[0].x, points[0].y);\r\n    ctx.lineTo(points[1].x, points[1].y);\r\n    ctx.stroke();\r\n*/\r\n\r\n    var points = [\r\n      {x:0, y:0.5},\r\n      {x:0, y:-0.5},\r\n      {x:-0.15, y:-0.5},\r\n      {x:-0.15, y:0.5},\r\n    ];\r\n\r\n    EndPoint.transform(points, arrowData);\r\n    EndPoint.drawPath(ctx, points);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Drawing methods for the endpoints.\r\n */\r\nclass EndPoints {\r\n\r\n  /**\r\n   * Draw an endpoint\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {ArrowData} arrowData\r\n   * @static\r\n   */\r\n  static draw(ctx, arrowData) {\r\n    var type;\r\n    if (arrowData.type) {\r\n      type = arrowData.type.toLowerCase();\r\n    }\r\n\r\n    switch (type) {\r\n    case 'circle':\r\n      Circle.draw(ctx, arrowData);\r\n      break;\r\n    case 'bar':\r\n      Bar.draw(ctx, arrowData);\r\n      break;\r\n    case 'arrow':  // fall-through\r\n    default:\r\n      Arrow.draw(ctx, arrowData);\r\n    }\r\n  }\r\n}\r\n\r\nexport default EndPoints;\r\n","/**\r\n * This object contains all possible options. It will check if the types are correct, if required if the option is one\r\n * of the allowed values.\r\n *\r\n * __any__ means that the name of the property does not matter.\r\n * __type__ is a required field for all objects and contains the allowed types of all objects\r\n */\r\nlet string = 'string';\r\nlet bool = 'boolean';\r\nlet number = 'number';\r\nlet array = 'array';\r\nlet object = 'object'; // should only be in a __type__ property\r\nlet dom = 'dom';\r\nlet any = 'any';\r\n\r\n// List of endpoints\r\nlet endPoints = ['arrow', 'circle', 'bar'];\r\n\r\nlet allOptions = {\r\n  configure: {\r\n    enabled: { boolean: bool },\r\n    filter: { boolean: bool, string, array, 'function': 'function' },\r\n    container: { dom },\r\n    showButton: { boolean: bool },\r\n    __type__: { object, boolean: bool, string, array, 'function': 'function' }\r\n  },\r\n  edges: {\r\n    arrows: {\r\n      to: { enabled: { boolean: bool }, scaleFactor: { number }, type: { string: endPoints }, __type__: { object, boolean: bool } },\r\n      middle: { enabled: { boolean: bool }, scaleFactor: { number }, type: { string: endPoints }, __type__: { object, boolean: bool } },\r\n      from: { enabled: { boolean: bool }, scaleFactor: { number }, type: { string: endPoints }, __type__: { object, boolean: bool } },\r\n      __type__: { string: ['from', 'to', 'middle'], object }\r\n    },\r\n    arrowStrikethrough: { boolean: bool },\r\n    chosen: {\r\n      label: { boolean: bool, 'function': 'function' },\r\n      edge: { boolean: bool, 'function': 'function' },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    color: {\r\n      color: { string },\r\n      highlight: { string },\r\n      hover: { string },\r\n      inherit: { string: ['from', 'to', 'both'], boolean: bool },\r\n      opacity: { number },\r\n      __type__: { object, string }\r\n    },\r\n    dashes: { boolean: bool, array },\r\n    font: {\r\n      color: { string },\r\n      size: { number }, // px\r\n      face: { string },\r\n      background: { string },\r\n      strokeWidth: { number }, // px\r\n      strokeColor: { string },\r\n      align: { string: ['horizontal', 'top', 'middle', 'bottom'] },\r\n      vadjust: { number },\r\n      multi: { boolean: bool, string },\r\n      bold: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      boldital: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      ital: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      mono: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      __type__: { object, string }\r\n    },\r\n    hidden: { boolean: bool },\r\n    hoverWidth: { 'function': 'function', number },\r\n    label: { string, 'undefined': 'undefined' },\r\n    labelHighlightBold: { boolean: bool },\r\n    length: { number, 'undefined': 'undefined' },\r\n    physics: { boolean: bool },\r\n    scaling: {\r\n      min: { number },\r\n      max: { number },\r\n      label: {\r\n        enabled: { boolean: bool },\r\n        min: { number },\r\n        max: { number },\r\n        maxVisible: { number },\r\n        drawThreshold: { number },\r\n        __type__: { object, boolean: bool }\r\n      },\r\n      customScalingFunction: { 'function': 'function' },\r\n      __type__: { object }\r\n    },\r\n    selectionWidth: { 'function': 'function', number },\r\n    selfReferenceSize: { number },\r\n    shadow: {\r\n      enabled: { boolean: bool },\r\n      color: { string },\r\n      size: { number },\r\n      x: { number },\r\n      y: { number },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    smooth: {\r\n      enabled: { boolean: bool },\r\n      type: { string: ['dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier'] },\r\n      roundness: { number },\r\n      forceDirection: { string: ['horizontal', 'vertical', 'none'], boolean: bool },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    title: { string, 'undefined': 'undefined' },\r\n    width: { number },\r\n    widthConstraint: {\r\n      maximum: { number },\r\n      __type__: { object, boolean: bool, number }\r\n    },\r\n    value: { number, 'undefined': 'undefined' },\r\n    __type__: { object }\r\n  },\r\n  groups: {\r\n    useDefaultGroups: { boolean: bool },\r\n    __any__: 'get from nodes, will be overwritten below',\r\n    __type__: { object }\r\n  },\r\n  interaction: {\r\n    dragNodes: { boolean: bool },\r\n    dragView: { boolean: bool },\r\n    hideEdgesOnDrag: { boolean: bool },\r\n    hideNodesOnDrag: { boolean: bool },\r\n    hover: { boolean: bool },\r\n    keyboard: {\r\n      enabled: { boolean: bool },\r\n      speed: { x: { number }, y: { number }, zoom: { number }, __type__: { object } },\r\n      bindToWindow: { boolean: bool },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    multiselect: { boolean: bool },\r\n    navigationButtons: { boolean: bool },\r\n    selectable: { boolean: bool },\r\n    selectConnectedEdges: { boolean: bool },\r\n    hoverConnectedEdges: { boolean: bool },\r\n    tooltipDelay: { number },\r\n    zoomView: { boolean: bool },\r\n    __type__: { object }\r\n  },\r\n  layout: {\r\n    randomSeed: { 'undefined': 'undefined', number },\r\n    improvedLayout: { boolean: bool },\r\n    hierarchical: {\r\n      enabled: { boolean: bool },\r\n      levelSeparation: { number },\r\n      nodeSpacing: { number },\r\n      treeSpacing: { number },\r\n      blockShifting: { boolean: bool },\r\n      edgeMinimization: { boolean: bool },\r\n      parentCentralization: { boolean: bool },\r\n      direction: { string: ['UD', 'DU', 'LR', 'RL'] },   // UD, DU, LR, RL\r\n      sortMethod: { string: ['hubsize', 'directed'] }, // hubsize, directed\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    __type__: { object }\r\n  },\r\n  manipulation: {\r\n    enabled: { boolean: bool },\r\n    initiallyActive: { boolean: bool },\r\n    addNode: { boolean: bool, 'function': 'function' },\r\n    addEdge: { boolean: bool, 'function': 'function' },\r\n    editNode: { 'function': 'function' },\r\n    editEdge: {\r\n      editWithoutDrag: { 'function' : 'function' },\r\n      __type__: {object, boolean: bool, 'function': 'function' }\r\n    },\r\n    deleteNode: { boolean: bool, 'function': 'function' },\r\n    deleteEdge: { boolean: bool, 'function': 'function' },\r\n    controlNodeStyle: 'get from nodes, will be overwritten below',\r\n    __type__: { object, boolean: bool }\r\n  },\r\n  nodes: {\r\n    borderWidth: { number },\r\n    borderWidthSelected: { number, 'undefined': 'undefined' },\r\n    brokenImage: { string, 'undefined': 'undefined' },\r\n    chosen: {\r\n      label: { boolean: bool, 'function': 'function' },\r\n      node: { boolean: bool, 'function': 'function' },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    color: {\r\n      border: { string },\r\n      background: { string },\r\n      highlight: {\r\n        border: { string },\r\n        background: { string },\r\n        __type__: { object, string }\r\n      },\r\n      hover: {\r\n        border: { string },\r\n        background: { string },\r\n        __type__: { object, string }\r\n      },\r\n      __type__: { object, string }\r\n    },\r\n    fixed: {\r\n      x: { boolean: bool },\r\n      y: { boolean: bool },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    font: {\r\n      align: { string },\r\n      color: { string },\r\n      size: { number }, // px\r\n      face: { string },\r\n      background: { string },\r\n      strokeWidth: { number }, // px\r\n      strokeColor: { string },\r\n      vadjust: { number },\r\n      multi: { boolean: bool, string },\r\n      bold: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      boldital: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      ital: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      mono: {\r\n        color: { string },\r\n        size: { number }, // px\r\n        face: { string },\r\n        mod: { string },\r\n        vadjust: { number },\r\n        __type__: { object, string }\r\n      },\r\n      __type__: { object, string }\r\n    },\r\n    group: { string, number, 'undefined': 'undefined' },\r\n    heightConstraint: {\r\n      minimum: { number },\r\n      valign: { string },\r\n      __type__: { object, boolean: bool, number }\r\n    },\r\n    hidden: { boolean: bool },\r\n    icon: {\r\n      face: { string },\r\n      code: { string },  //'\\uf007',\r\n      size: { number },  //50,\r\n      color: { string },\r\n      __type__: { object }\r\n    },\r\n    id: { string, number },\r\n    image: {\r\n      selected: { string, 'undefined': 'undefined' }, // --> URL\r\n      unselected: { string, 'undefined': 'undefined' }, // --> URL\r\n      __type__: { object, string }\r\n    },\r\n    label: { string, 'undefined': 'undefined' },\r\n    labelHighlightBold: { boolean: bool },\r\n    level: { number, 'undefined': 'undefined' },\r\n    margin: {\r\n      top: { number },\r\n      right: { number },\r\n      bottom: { number },\r\n      left: { number },\r\n      __type__: { object, number }\r\n    },\r\n    mass: { number },\r\n    physics: { boolean: bool },\r\n    scaling: {\r\n      min: { number },\r\n      max: { number },\r\n      label: {\r\n        enabled: { boolean: bool },\r\n        min: { number },\r\n        max: { number },\r\n        maxVisible: { number },\r\n        drawThreshold: { number },\r\n        __type__: { object, boolean: bool }\r\n      },\r\n      customScalingFunction: { 'function': 'function' },\r\n      __type__: { object }\r\n    },\r\n    shadow: {\r\n      enabled: { boolean: bool },\r\n      color: { string },\r\n      size: { number },\r\n      x: { number },\r\n      y: { number },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    shape: { string: ['ellipse', 'circle', 'database', 'box', 'text', 'image', 'circularImage', 'diamond', 'dot', 'star', 'triangle', 'triangleDown', 'square', 'icon', 'hexagon'] },\r\n    shapeProperties: {\r\n      borderDashes: { boolean: bool, array },\r\n      borderRadius: { number },\r\n      interpolation: { boolean: bool },\r\n      useImageSize: { boolean: bool },\r\n      useBorderWithImage: { boolean: bool },\r\n      __type__: { object }\r\n    },\r\n    size: { number },\r\n    title: { string, dom, 'undefined': 'undefined' },\r\n    value: { number, 'undefined': 'undefined' },\r\n    widthConstraint: {\r\n      minimum: { number },\r\n      maximum: { number },\r\n      __type__: { object, boolean: bool, number }\r\n    },\r\n    x: { number },\r\n    y: { number },\r\n    __type__: { object }\r\n  },\r\n  physics: {\r\n    enabled: { boolean: bool },\r\n    barnesHut: {\r\n      gravitationalConstant: { number },\r\n      centralGravity: { number },\r\n      springLength: { number },\r\n      springConstant: { number },\r\n      damping: { number },\r\n      avoidOverlap: { number },\r\n      __type__: { object }\r\n    },\r\n    forceAtlas2Based: {\r\n      gravitationalConstant: { number },\r\n      centralGravity: { number },\r\n      springLength: { number },\r\n      springConstant: { number },\r\n      damping: { number },\r\n      avoidOverlap: { number },\r\n      __type__: { object }\r\n    },\r\n    repulsion: {\r\n      centralGravity: { number },\r\n      springLength: { number },\r\n      springConstant: { number },\r\n      nodeDistance: { number },\r\n      damping: { number },\r\n      __type__: { object }\r\n    },\r\n    hierarchicalRepulsion: {\r\n      centralGravity: { number },\r\n      springLength: { number },\r\n      springConstant: { number },\r\n      nodeDistance: { number },\r\n      damping: { number },\r\n      __type__: { object }\r\n    },\r\n    maxVelocity: { number },\r\n    minVelocity: { number },    // px/s\r\n    solver: { string: ['barnesHut', 'repulsion', 'hierarchicalRepulsion', 'forceAtlas2Based'] },\r\n    stabilization: {\r\n      enabled: { boolean: bool },\r\n      iterations: { number },   // maximum number of iteration to stabilize\r\n      updateInterval: { number },\r\n      onlyDynamicEdges: { boolean: bool },\r\n      fit: { boolean: bool },\r\n      __type__: { object, boolean: bool }\r\n    },\r\n    timestep: { number },\r\n    adaptiveTimestep: { boolean: bool },\r\n    __type__: { object, boolean: bool }\r\n  },\r\n\r\n  //globals :\r\n  autoResize: { boolean: bool },\r\n  clickToUse: { boolean: bool },\r\n  locale: { string },\r\n  locales: {\r\n    __any__: { any },\r\n    __type__: { object }\r\n  },\r\n  height: { string },\r\n  width: { string },\r\n  __type__: { object }\r\n};\r\n\r\nallOptions.groups.__any__ = allOptions.nodes;\r\nallOptions.manipulation.controlNodeStyle = allOptions.nodes;\r\n\r\n\r\nlet configureOptions = {\r\n  nodes: {\r\n    borderWidth: [1, 0, 10, 1],\r\n    borderWidthSelected: [2, 0, 10, 1],\r\n    color: {\r\n      border: ['color', '#2B7CE9'],\r\n      background: ['color', '#97C2FC'],\r\n      highlight: {\r\n        border: ['color', '#2B7CE9'],\r\n        background: ['color', '#D2E5FF']\r\n      },\r\n      hover: {\r\n        border: ['color', '#2B7CE9'],\r\n        background: ['color', '#D2E5FF']\r\n      }\r\n    },\r\n    fixed: {\r\n      x: false,\r\n      y: false\r\n    },\r\n    font: {\r\n      color: ['color', '#343434'],\r\n      size: [14, 0, 100, 1], // px\r\n      face: ['arial', 'verdana', 'tahoma'],\r\n      background: ['color', 'none'],\r\n      strokeWidth: [0, 0, 50, 1], // px\r\n      strokeColor: ['color', '#ffffff']\r\n    },\r\n    //group: 'string',\r\n    hidden: false,\r\n    labelHighlightBold: true,\r\n    //icon: {\r\n    //  face: 'string',  //'FontAwesome',\r\n    //  code: 'string',  //'\\uf007',\r\n    //  size: [50, 0, 200, 1],  //50,\r\n    //  color: ['color','#2B7CE9']   //'#aa00ff'\r\n    //},\r\n    //image: 'string', // --> URL\r\n    physics: true,\r\n    scaling: {\r\n      min: [10, 0, 200, 1],\r\n      max: [30, 0, 200, 1],\r\n      label: {\r\n        enabled: false,\r\n        min: [14, 0, 200, 1],\r\n        max: [30, 0, 200, 1],\r\n        maxVisible: [30, 0, 200, 1],\r\n        drawThreshold: [5, 0, 20, 1]\r\n      }\r\n    },\r\n    shadow: {\r\n      enabled: false,\r\n      color: 'rgba(0,0,0,0.5)',\r\n      size: [10, 0, 20, 1],\r\n      x: [5, -30, 30, 1],\r\n      y: [5, -30, 30, 1]\r\n    },\r\n    shape: ['ellipse', 'box', 'circle', 'database', 'diamond', 'dot', 'square', 'star', 'text', 'triangle', 'triangleDown','hexagon'],\r\n    shapeProperties: {\r\n      borderDashes: false,\r\n      borderRadius: [6, 0, 20, 1],\r\n      interpolation: true,\r\n      useImageSize: false\r\n    },\r\n    size: [25, 0, 200, 1]\r\n  },\r\n  edges: {\r\n    arrows: {\r\n      to: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' },\r\n      middle: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' },\r\n      from: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' }\r\n    },\r\n    arrowStrikethrough: true,\r\n    color: {\r\n      color: ['color', '#848484'],\r\n      highlight: ['color', '#848484'],\r\n      hover: ['color', '#848484'],\r\n      inherit: ['from', 'to', 'both', true, false],\r\n      opacity: [1, 0, 1, 0.05]\r\n    },\r\n    dashes: false,\r\n    font: {\r\n      color: ['color', '#343434'],\r\n      size: [14, 0, 100, 1], // px\r\n      face: ['arial', 'verdana', 'tahoma'],\r\n      background: ['color', 'none'],\r\n      strokeWidth: [2, 0, 50, 1], // px\r\n      strokeColor: ['color', '#ffffff'],\r\n      align: ['horizontal', 'top', 'middle', 'bottom']\r\n    },\r\n    hidden: false,\r\n    hoverWidth: [1.5, 0, 5, 0.1],\r\n    labelHighlightBold: true,\r\n    physics: true,\r\n    scaling: {\r\n      min: [1, 0, 100, 1],\r\n      max: [15, 0, 100, 1],\r\n      label: {\r\n        enabled: true,\r\n        min: [14, 0, 200, 1],\r\n        max: [30, 0, 200, 1],\r\n        maxVisible: [30, 0, 200, 1],\r\n        drawThreshold: [5, 0, 20, 1]\r\n      }\r\n    },\r\n    selectionWidth: [1.5, 0, 5, 0.1],\r\n    selfReferenceSize: [20, 0, 200, 1],\r\n    shadow: {\r\n      enabled: false,\r\n      color: 'rgba(0,0,0,0.5)',\r\n      size: [10, 0, 20, 1],\r\n      x: [5, -30, 30, 1],\r\n      y: [5, -30, 30, 1]\r\n    },\r\n    smooth: {\r\n      enabled: true,\r\n      type: ['dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier'],\r\n      forceDirection: ['horizontal', 'vertical', 'none'],\r\n      roundness: [0.5, 0, 1, 0.05]\r\n    },\r\n    width: [1, 0, 30, 1]\r\n  },\r\n  layout: {\r\n    //randomSeed: [0, 0, 500, 1],\r\n    //improvedLayout: true,\r\n    hierarchical: {\r\n      enabled: false,\r\n      levelSeparation: [150, 20, 500, 5],\r\n      nodeSpacing: [100, 20, 500, 5],\r\n      treeSpacing: [200, 20, 500, 5],\r\n      blockShifting: true,\r\n      edgeMinimization: true,\r\n      parentCentralization: true,\r\n      direction: ['UD', 'DU', 'LR', 'RL'],   // UD, DU, LR, RL\r\n      sortMethod: ['hubsize', 'directed'] // hubsize, directed\r\n    }\r\n  },\r\n  interaction: {\r\n    dragNodes: true,\r\n    dragView: true,\r\n    hideEdgesOnDrag: false,\r\n    hideNodesOnDrag: false,\r\n    hover: false,\r\n    keyboard: {\r\n      enabled: false,\r\n      speed: { x: [10, 0, 40, 1], y: [10, 0, 40, 1], zoom: [0.02, 0, 0.1, 0.005] },\r\n      bindToWindow: true\r\n    },\r\n    multiselect: false,\r\n    navigationButtons: false,\r\n    selectable: true,\r\n    selectConnectedEdges: true,\r\n    hoverConnectedEdges: true,\r\n    tooltipDelay: [300, 0, 1000, 25],\r\n    zoomView: true\r\n  },\r\n  manipulation: {\r\n    enabled: false,\r\n    initiallyActive: false\r\n  },\r\n  physics: {\r\n    enabled: true,\r\n    barnesHut: {\r\n      //theta: [0.5, 0.1, 1, 0.05],\r\n      gravitationalConstant: [-2000, -30000, 0, 50],\r\n      centralGravity: [0.3, 0, 10, 0.05],\r\n      springLength: [95, 0, 500, 5],\r\n      springConstant: [0.04, 0, 1.2, 0.005],\r\n      damping: [0.09, 0, 1, 0.01],\r\n      avoidOverlap: [0, 0, 1, 0.01]\r\n    },\r\n    forceAtlas2Based: {\r\n      //theta: [0.5, 0.1, 1, 0.05],\r\n      gravitationalConstant: [-50, -500, 0, 1],\r\n      centralGravity: [0.01, 0, 1, 0.005],\r\n      springLength: [95, 0, 500, 5],\r\n      springConstant: [0.08, 0, 1.2, 0.005],\r\n      damping: [0.4, 0, 1, 0.01],\r\n      avoidOverlap: [0, 0, 1, 0.01]\r\n    },\r\n    repulsion: {\r\n      centralGravity: [0.2, 0, 10, 0.05],\r\n      springLength: [200, 0, 500, 5],\r\n      springConstant: [0.05, 0, 1.2, 0.005],\r\n      nodeDistance: [100, 0, 500, 5],\r\n      damping: [0.09, 0, 1, 0.01]\r\n    },\r\n    hierarchicalRepulsion: {\r\n      centralGravity: [0.2, 0, 10, 0.05],\r\n      springLength: [100, 0, 500, 5],\r\n      springConstant: [0.01, 0, 1.2, 0.005],\r\n      nodeDistance: [120, 0, 500, 5],\r\n      damping: [0.09, 0, 1, 0.01]\r\n    },\r\n    maxVelocity: [50, 0, 150, 1],\r\n    minVelocity: [0.1, 0.01, 0.5, 0.01],\r\n    solver: ['barnesHut', 'forceAtlas2Based', 'repulsion', 'hierarchicalRepulsion'],\r\n    timestep: [0.5, 0.01, 1, 0.01],\r\n    //adaptiveTimestep: true\r\n  }\r\n};\r\n\r\nexport {allOptions, configureOptions};\r\n","\r\n/**\r\n * Associates a canvas to a given image, containing a number of renderings\r\n * of the image at various sizes.\r\n *\r\n * This technique is known as 'mipmapping'.\r\n *\r\n * NOTE: Images can also be of type 'data:svg+xml`. This code also works\r\n *       for svg, but the mipmapping may not be necessary.\r\n *\r\n * @param {Image} image\r\n */\r\nclass CachedImage {\r\n  /**\r\n   * @ignore\r\n   */  \r\n  constructor() {  // eslint-disable-line no-unused-vars\r\n    this.NUM_ITERATIONS = 4;  // Number of items in the coordinates array\r\n\r\n    this.image  = new Image();\r\n    this.canvas = document.createElement('canvas');\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when the image has been successfully loaded.\r\n   */\r\n  init() {\r\n    if (this.initialized()) return;\r\n\r\n    this.src = this.image.src;  // For same interface with Image\r\n    var w = this.image.width;\r\n    var h = this.image.height;\r\n\r\n    // Ease external access\r\n    this.width  = w;\r\n    this.height = h;\r\n\r\n    var h2 = Math.floor(h/2);\r\n    var h4 = Math.floor(h/4);\r\n    var h8 = Math.floor(h/8);\r\n    var h16 = Math.floor(h/16);\r\n\r\n    var w2 = Math.floor(w/2);\r\n    var w4 = Math.floor(w/4);\r\n    var w8 = Math.floor(w/8);\r\n    var w16 = Math.floor(w/16);\r\n\r\n    // Make canvas as small as possible\r\n    this.canvas.width  = 3*w4;\r\n    this.canvas.height = h2;\r\n\r\n    // Coordinates and sizes of images contained in the canvas\r\n    // Values per row:  [top x, left y, width, height]\r\n\r\n    this.coordinates = [\r\n      [ 0    , 0  , w2 , h2],\r\n      [ w2  , 0  , w4 , h4],\r\n      [ w2  , h4, w8 , h8],\r\n      [ 5*w8, h4, w16, h16]\r\n    ];\r\n\r\n    this._fillMipMap();\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {Boolean} true if init() has been called, false otherwise.\r\n   */\r\n  initialized() {\r\n    return (this.coordinates !== undefined);\r\n  }\r\n\r\n\r\n  /**\r\n   * Redraw main image in various sizes to the context.\r\n   *\r\n   * The rationale behind this is to reduce artefacts due to interpolation\r\n   * at differing zoom levels.\r\n   *\r\n   * Source: http://stackoverflow.com/q/18761404/1223531\r\n   *\r\n   * This methods takes the resizing out of the drawing loop, in order to\r\n   * reduce performance overhead.\r\n   *\r\n   * TODO: The code assumes that a 2D context can always be gotten. This is\r\n   *       not necessarily true! OTOH, if not true then usage of this class\r\n   *       is senseless.\r\n   *\r\n   * @private\r\n   */\r\n  _fillMipMap() {\r\n    var ctx = this.canvas.getContext('2d');\r\n\r\n    // First zoom-level comes from the image\r\n    var to  = this.coordinates[0];\r\n    ctx.drawImage(this.image, to[0], to[1], to[2], to[3]);\r\n\r\n    // The rest are copy actions internal to the canvas/context\r\n    for (let iterations = 1; iterations < this.NUM_ITERATIONS; iterations++) {\r\n      let from = this.coordinates[iterations - 1];\r\n      let to   = this.coordinates[iterations];\r\n\r\n      ctx.drawImage(this.canvas,\r\n        from[0], from[1], from[2], from[3],\r\n          to[0],   to[1],   to[2],   to[3]\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Draw the image, using the mipmap if necessary.\r\n   *\r\n   * MipMap is only used if param factor > 2; otherwise, original bitmap\r\n   * is resized. This is also used to skip mipmap usage, e.g. by setting factor = 1\r\n   *\r\n   * Credits to 'Alex de Mulder' for original implementation.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx  context on which to draw zoomed image\r\n   * @param {Float} factor scale factor at which to draw\r\n   * @param {number} left\r\n   * @param {number} top\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  drawImageAtPosition(ctx, factor, left, top, width, height) {\r\n\r\n    if(!this.initialized())\r\n      return; //can't draw image yet not intialized\r\n\r\n    if (factor > 2) {\r\n      // Determine which zoomed image to use\r\n      factor *= 0.5;\r\n      let iterations = 0;\r\n      while (factor > 2 && iterations < this.NUM_ITERATIONS) {\r\n        factor *= 0.5;\r\n        iterations += 1;\r\n      }\r\n\r\n      if (iterations >= this.NUM_ITERATIONS) {\r\n        iterations = this.NUM_ITERATIONS - 1;\r\n      }\r\n      //console.log(\"iterations: \" + iterations);\r\n\r\n      let from = this.coordinates[iterations];\r\n      ctx.drawImage(this.canvas,\r\n        from[0], from[1], from[2], from[3],\r\n           left,     top,   width,  height\r\n      );\r\n    } else {\r\n      // Draw image directly\r\n      ctx.drawImage(this.image, left, top, width, height);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CachedImage;\r\n","import CachedImage from './CachedImage';\r\n\r\n/**\r\n * This callback is a callback that accepts an Image.\r\n * @callback ImageCallback\r\n * @param {Image} image\r\n */\r\n\r\n/**\r\n * This class loads images and keeps them stored.\r\n *\r\n * @param {ImageCallback} callback\r\n */\r\nclass Images {\r\n  /**\r\n   * @param {ImageCallback} callback\r\n   */\r\n  constructor(callback){\r\n        this.images = {};\r\n        this.imageBroken = {};\r\n        this.callback = callback;\r\n    }\r\n    \r\n    /**\r\n     * @param {string} url                      The original Url that failed to load, if the broken image is successfully loaded it will be added to the cache using this Url as the key so that subsequent requests for this Url will return the broken image\r\n     * @param {string} brokenUrl                Url the broken image to try and load\r\n     * @param {Image} imageToLoadBrokenUrlOn   The image object\r\n     */    \r\n    _tryloadBrokenUrl (url, brokenUrl, imageToLoadBrokenUrlOn) {\r\n        //If these parameters aren't specified then exit the function because nothing constructive can be done\r\n        if (url === undefined || imageToLoadBrokenUrlOn === undefined)  return;\r\n        if (brokenUrl === undefined) {\r\n          console.warn(\"No broken url image defined\");\r\n          return;\r\n        }\r\n    \r\n        //Clear the old subscription to the error event and put a new in place that only handle errors in loading the brokenImageUrl\r\n        imageToLoadBrokenUrlOn.onerror = () => {\r\n            console.error(\"Could not load brokenImage:\", brokenUrl);\r\n            // cache item will contain empty image, this should be OK for default\r\n        };\r\n        \r\n        //Set the source of the image to the brokenUrl, this is actually what kicks off the loading of the broken image\r\n        imageToLoadBrokenUrlOn.image.src = brokenUrl;\r\n    }\r\n    \r\n  /**\r\n   *\r\n   * @param {vis.Image} imageToRedrawWith\r\n   * @private\r\n   */\r\n  _redrawWithImage (imageToRedrawWith) {\r\n        if (this.callback) {\r\n            this.callback(imageToRedrawWith);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @param {string} url          Url of the image\r\n     * @param {string} brokenUrl    Url of an image to use if the url image is not found\r\n     * @return {Image} img          The image object\r\n     */     \r\n    load (url, brokenUrl) {\r\n        //Try and get the image from the cache, if successful then return the cached image   \r\n        var cachedImage = this.images[url]; \r\n        if (cachedImage) return cachedImage;\r\n        \r\n        //Create a new image\r\n        var img = new CachedImage();\r\n\r\n        // Need to add to cache here, otherwise final return will spawn different copies of the same image,\r\n        // Also, there will be multiple loads of the same image.\r\n        this.images[url] = img; \r\n        \r\n        //Subscribe to the event that is raised if the image loads successfully \r\n        img.image.onload = () => {\r\n            // Properly init the cached item and then request a redraw\r\n            this._fixImageCoordinates(img.image);\r\n            img.init();\r\n            this._redrawWithImage(img);\r\n        };\r\n        \r\n        //Subscribe to the event that is raised if the image fails to load\r\n        img.image.onerror = () => {\r\n            console.error(\"Could not load image:\", url);\r\n            //Try and load the image specified by the brokenUrl using\r\n            this._tryloadBrokenUrl(url, brokenUrl, img);\r\n        };\r\n        \r\n        //Set the source of the image to the url, this is what actually kicks off the loading of the image\r\n        img.image.src = url;\r\n        \r\n        //Return the new image\r\n        return img;\r\n    }\r\n\r\n\r\n  /**\r\n   * IE11 fix -- thanks dponch!\r\n   *\r\n   * Local helper function\r\n   * @param {vis.Image} imageToCache\r\n   * @private\r\n   */\r\n    _fixImageCoordinates(imageToCache) {\r\n        if (imageToCache.width === 0) {\r\n            document.body.appendChild(imageToCache);\r\n            imageToCache.width = imageToCache.offsetWidth;\r\n            imageToCache.height = imageToCache.offsetHeight;\r\n            document.body.removeChild(imageToCache);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Images;\r\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        }\n        else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x) {\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return globalLocale;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            aliasedRequire('./locale/' + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n        else {\n            if ((typeof console !==  'undefined') && console.warn) {\n                //warn user if arguments are passed but the locale could not be set\n                console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n            }\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var locale, parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                locale = loadLocale(config.parentLocale);\n                if (locale != null) {\n                    parentConfig = locale._config;\n                } else {\n                    if (!localeFamilies[config.parentLocale]) {\n                        localeFamilies[config.parentLocale] = [];\n                    }\n                    localeFamilies[config.parentLocale].push({\n                        name: name,\n                        config: config\n                    });\n                    return null;\n                }\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, tmpLocale, parentConfig = baseConfig;\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString(keepOffset) {\n    if (!this.isValid()) {\n        return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n            return this.toDate().toISOString();\n        } else {\n            return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\nproto.quarter = proto.quarters = getSetQuarter;\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\nproto.hour = proto.hours = getSetHour;\nproto.minute = proto.minutes = getSetMinute;\nproto.second = proto.seconds = getSetSecond;\nproto.millisecond = proto.milliseconds = getSetMillisecond;\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\n\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1 () {\n    return createDuration(this);\n}\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.21.0';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\n// currently HTML5 input type only supports 24-hour formats\nhooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n    TIME: 'HH:mm',                                  // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n    MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n};\n\nreturn hooks;\n\n})));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* eslint-disable require-jsdoc */\r\n\r\nvar _rng;\r\n\r\nvar globalVar = typeof window !== 'undefined'\r\n    ? window\r\n    : typeof global !== 'undefined' ? global : null;\r\n\r\nif (globalVar && globalVar.crypto && crypto.getRandomValues) {\r\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\r\n  // Moderately fast, high quality\r\n  var _rnds8 = new Uint8Array(16);\r\n  _rng = function whatwgRNG() {\r\n    crypto.getRandomValues(_rnds8);\r\n    return _rnds8;\r\n  };\r\n}\r\n\r\nif (!_rng) {\r\n  // Math.random()-based (RNG)\r\n  //\r\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\r\n  // quality.\r\n  var _rnds = new Array(16);\r\n  _rng = function () {\r\n    for (var i = 0, r; i < 16; i++) {\r\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\r\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\r\n    }\r\n\r\n    return _rnds;\r\n  };\r\n}\r\n\r\n//     uuid.js\r\n//\r\n//     Copyright (c) 2010-2012 Robert Kieffer\r\n//     MIT License - http://opensource.org/licenses/mit-license.php\r\n\r\n// Unique ID creation requires a high quality random # generator.  We feature\r\n// detect to determine the best RNG source, normalizing to a function that\r\n// returns 128-bits of randomness, since that's what's usually required\r\n\r\n//var _rng = require('./rng');\r\n\r\n// Maps for number <-> hex string conversion\r\nvar _byteToHex = [];\r\nvar _hexToByte = {};\r\nfor (var i = 0; i < 256; i++) {\r\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\r\n  _hexToByte[_byteToHex[i]] = i;\r\n}\r\n\r\n// **`parse()` - Parse a UUID into it's component bytes**\r\nfunction parse(s, buf, offset) {\r\n  var i = (buf && offset) || 0, ii = 0;\r\n\r\n  buf = buf || [];\r\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\r\n    if (ii < 16) { // Don't overflow!\r\n      buf[i + ii++] = _hexToByte[oct];\r\n    }\r\n  });\r\n\r\n  // Zero out remaining bytes if string was short\r\n  while (ii < 16) {\r\n    buf[i + ii++] = 0;\r\n  }\r\n\r\n  return buf;\r\n}\r\n\r\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\r\nfunction unparse(buf, offset) {\r\n  var i = offset || 0, bth = _byteToHex;\r\n  return bth[buf[i++]] + bth[buf[i++]] +\r\n      bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n      bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n      bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n      bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n      bth[buf[i++]] + bth[buf[i++]] +\r\n      bth[buf[i++]] + bth[buf[i++]] +\r\n      bth[buf[i++]] + bth[buf[i++]];\r\n}\r\n\r\n// **`v1()` - Generate time-based UUID**\r\n//\r\n// Inspired by https://github.com/LiosK/UUID.js\r\n// and http://docs.python.org/library/uuid.html\r\n\r\n// random #'s we need to init node and clockseq\r\nvar _seedBytes = _rng();\r\n\r\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\r\nvar _nodeId = [\r\n  _seedBytes[0] | 0x01,\r\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\r\n];\r\n\r\n// Per 4.2.2, randomize (14 bit) clockseq\r\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\r\n\r\n// Previous uuid creation time\r\nvar _lastMSecs = 0, _lastNSecs = 0;\r\n\r\n// See https://github.com/broofa/node-uuid for API details\r\nfunction v1(options, buf, offset) {\r\n  var i = buf && offset || 0;\r\n  var b = buf || [];\r\n\r\n  options = options || {};\r\n\r\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\r\n\r\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\r\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\r\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\r\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\r\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\r\n\r\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\r\n  // cycle to simulate higher resolution clock\r\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\r\n\r\n  // Time since last uuid creation (in msecs)\r\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs) / 10000;\r\n\r\n  // Per 4.2.1.2, Bump clockseq on clock regression\r\n  if (dt < 0 && options.clockseq === undefined) {\r\n    clockseq = clockseq + 1 & 0x3fff;\r\n  }\r\n\r\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\r\n  // time interval\r\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\r\n    nsecs = 0;\r\n  }\r\n\r\n  // Per 4.2.1.2 Throw error if too many uuids are requested\r\n  if (nsecs >= 10000) {\r\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\r\n  }\r\n\r\n  _lastMSecs = msecs;\r\n  _lastNSecs = nsecs;\r\n  _clockseq = clockseq;\r\n\r\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\r\n  msecs += 12219292800000;\r\n\r\n  // `time_low`\r\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\r\n  b[i++] = tl >>> 24 & 0xff;\r\n  b[i++] = tl >>> 16 & 0xff;\r\n  b[i++] = tl >>> 8 & 0xff;\r\n  b[i++] = tl & 0xff;\r\n\r\n  // `time_mid`\r\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\r\n  b[i++] = tmh >>> 8 & 0xff;\r\n  b[i++] = tmh & 0xff;\r\n\r\n  // `time_high_and_version`\r\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\r\n  b[i++] = tmh >>> 16 & 0xff;\r\n\r\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\r\n  b[i++] = clockseq >>> 8 | 0x80;\r\n\r\n  // `clock_seq_low`\r\n  b[i++] = clockseq & 0xff;\r\n\r\n  // `node`\r\n  var node = options.node || _nodeId;\r\n  for (var n = 0; n < 6; n++) {\r\n    b[i + n] = node[n];\r\n  }\r\n\r\n  return buf ? buf : unparse(b);\r\n}\r\n\r\n// **`v4()` - Generate random UUID**\r\n\r\n// See https://github.com/broofa/node-uuid for API details\r\nfunction v4(options, buf, offset) {\r\n  // Deprecated - 'format' argument, as supported in v1.2\r\n  var i = buf && offset || 0;\r\n\r\n  if (typeof(options) == 'string') {\r\n    buf = options == 'binary' ? new Array(16) : null;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n\r\n  var rnds = options.random || (options.rng || _rng)();\r\n\r\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\r\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\r\n\r\n  // Copy bytes to buffer, if provided\r\n  if (buf) {\r\n    for (var ii = 0; ii < 16; ii++) {\r\n      buf[i + ii] = rnds[ii];\r\n    }\r\n  }\r\n\r\n  return buf || unparse(rnds);\r\n}\r\n\r\n// Export public API\r\nvar uuid = v4;\r\nuuid.v1 = v1;\r\nuuid.v4 = v4;\r\nuuid.parse = parse;\r\nuuid.unparse = unparse;\r\n\r\nmodule.exports = uuid;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// DOM utility methods\r\n\r\n/**\r\n * this prepares the JSON container for allocating SVG elements\r\n * @param {Object} JSONcontainer\r\n * @private\r\n */\r\nexports.prepareElements = function(JSONcontainer) {\r\n  // cleanup the redundant svgElements;\r\n  for (var elementType in JSONcontainer) {\r\n    if (JSONcontainer.hasOwnProperty(elementType)) {\r\n      JSONcontainer[elementType].redundant = JSONcontainer[elementType].used;\r\n      JSONcontainer[elementType].used = [];\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from\r\n * which to remove the redundant elements.\r\n *\r\n * @param {Object} JSONcontainer\r\n * @private\r\n */\r\nexports.cleanupElements = function(JSONcontainer) {\r\n  // cleanup the redundant svgElements;\r\n  for (var elementType in JSONcontainer) {\r\n    if (JSONcontainer.hasOwnProperty(elementType)) {\r\n      if (JSONcontainer[elementType].redundant) {\r\n        for (var i = 0; i < JSONcontainer[elementType].redundant.length; i++) {\r\n          JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);\r\n        }\r\n        JSONcontainer[elementType].redundant = [];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ensures that all elements are removed first up so they can be recreated cleanly\r\n * @param {Object} JSONcontainer\r\n */\r\nexports.resetElements = function(JSONcontainer) {\r\n  exports.prepareElements(JSONcontainer);\r\n  exports.cleanupElements(JSONcontainer);\r\n  exports.prepareElements(JSONcontainer);\r\n};\r\n\r\n/**\r\n * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\r\n * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\r\n *\r\n * @param {string} elementType\r\n * @param {Object} JSONcontainer\r\n * @param {Object} svgContainer\r\n * @returns {Element}\r\n * @private\r\n */\r\nexports.getSVGElement = function (elementType, JSONcontainer, svgContainer) {\r\n  var element;\r\n  // allocate SVG element, if it doesnt yet exist, create one.\r\n  if (JSONcontainer.hasOwnProperty(elementType)) { // this element has been created before\r\n    // check if there is an redundant element\r\n    if (JSONcontainer[elementType].redundant.length > 0) {\r\n      element = JSONcontainer[elementType].redundant[0];\r\n      JSONcontainer[elementType].redundant.shift();\r\n    }\r\n    else {\r\n      // create a new element and add it to the SVG\r\n      element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\r\n      svgContainer.appendChild(element);\r\n    }\r\n  }\r\n  else {\r\n    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\r\n    element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\r\n    JSONcontainer[elementType] = {used: [], redundant: []};\r\n    svgContainer.appendChild(element);\r\n  }\r\n  JSONcontainer[elementType].used.push(element);\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\r\n * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\r\n *\r\n * @param {string} elementType\r\n * @param {Object} JSONcontainer\r\n * @param {Element} DOMContainer\r\n * @param {Element} insertBefore\r\n * @returns {*}\r\n */\r\nexports.getDOMElement = function (elementType, JSONcontainer, DOMContainer, insertBefore) {\r\n  var element;\r\n  // allocate DOM element, if it doesnt yet exist, create one.\r\n  if (JSONcontainer.hasOwnProperty(elementType)) { // this element has been created before\r\n    // check if there is an redundant element\r\n    if (JSONcontainer[elementType].redundant.length > 0) {\r\n      element = JSONcontainer[elementType].redundant[0];\r\n      JSONcontainer[elementType].redundant.shift();\r\n    }\r\n    else {\r\n      // create a new element and add it to the SVG\r\n      element = document.createElement(elementType);\r\n      if (insertBefore !== undefined) {\r\n        DOMContainer.insertBefore(element, insertBefore);\r\n      }\r\n      else {\r\n        DOMContainer.appendChild(element);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\r\n    element = document.createElement(elementType);\r\n    JSONcontainer[elementType] = {used: [], redundant: []};\r\n    if (insertBefore !== undefined) {\r\n      DOMContainer.insertBefore(element, insertBefore);\r\n    }\r\n    else {\r\n      DOMContainer.appendChild(element);\r\n    }\r\n  }\r\n  JSONcontainer[elementType].used.push(element);\r\n  return element;\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Draw a point object. This is a separate function because it can also be called by the legend.\r\n * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions\r\n * as well.\r\n *\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {Object} groupTemplate: A template containing the necessary information to draw the datapoint e.g., {style: 'circle', size: 5, className: 'className' }\r\n * @param {Object} JSONcontainer\r\n * @param {Object} svgContainer\r\n * @param {Object} labelObj\r\n * @returns {vis.PointItem}\r\n */\r\nexports.drawPoint = function(x, y, groupTemplate, JSONcontainer, svgContainer, labelObj) {\r\n  var point;\r\n  if (groupTemplate.style == 'circle') {\r\n    point = exports.getSVGElement('circle', JSONcontainer, svgContainer);\r\n    point.setAttributeNS(null, \"cx\", x);\r\n    point.setAttributeNS(null, \"cy\", y);\r\n    point.setAttributeNS(null, \"r\", 0.5 * groupTemplate.size);\r\n  }\r\n  else {\r\n    point = exports.getSVGElement('rect', JSONcontainer, svgContainer);\r\n    point.setAttributeNS(null, \"x\", x - 0.5 * groupTemplate.size);\r\n    point.setAttributeNS(null, \"y\", y - 0.5 * groupTemplate.size);\r\n    point.setAttributeNS(null, \"width\", groupTemplate.size);\r\n    point.setAttributeNS(null, \"height\", groupTemplate.size);\r\n  }\r\n\r\n  if (groupTemplate.styles !== undefined) {\r\n    point.setAttributeNS(null, \"style\", groupTemplate.styles);\r\n  }\r\n  point.setAttributeNS(null, \"class\", groupTemplate.className + \" vis-point\");\r\n  //handle label\r\n\r\n\r\n  if (labelObj) {\r\n    var label = exports.getSVGElement('text', JSONcontainer, svgContainer);\r\n    if (labelObj.xOffset) {\r\n      x = x + labelObj.xOffset;\r\n    }\r\n\r\n    if (labelObj.yOffset) {\r\n      y = y + labelObj.yOffset;\r\n    }\r\n    if (labelObj.content) {\r\n      label.textContent = labelObj.content;\r\n    }\r\n\r\n    if (labelObj.className) {\r\n      label.setAttributeNS(null, \"class\", labelObj.className  + \" vis-label\");\r\n    }\r\n    label.setAttributeNS(null, \"x\", x);\r\n    label.setAttributeNS(null, \"y\", y);\r\n  }\r\n\r\n  return point;\r\n};\r\n\r\n/**\r\n * draw a bar SVG element centered on the X coordinate\r\n *\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {string} className\r\n * @param {Object} JSONcontainer\r\n * @param {Object} svgContainer\r\n * @param {string} style\r\n */\r\nexports.drawBar = function (x, y, width, height, className, JSONcontainer, svgContainer, style) {\r\n  if (height != 0) {\r\n    if (height < 0) {\r\n      height *= -1;\r\n      y -= height;\r\n    }\r\n    var rect = exports.getSVGElement('rect',JSONcontainer, svgContainer);\r\n    rect.setAttributeNS(null, \"x\", x - 0.5 * width);\r\n    rect.setAttributeNS(null, \"y\", y);\r\n    rect.setAttributeNS(null, \"width\", width);\r\n    rect.setAttributeNS(null, \"height\", height);\r\n    rect.setAttributeNS(null, \"class\", className);\r\n    if (style) {\r\n      rect.setAttributeNS(null, \"style\", style);\r\n    }\r\n  }\r\n};","// Load custom shapes into CanvasRenderingContext2D\r\nrequire('./shapes');\r\n\r\nlet Emitter = require('emitter-component');\r\nlet util = require('../util');\r\nlet dotparser = require('./dotparser');\r\nlet gephiParser = require('./gephiParser');\r\nlet Activator = require('../shared/Activator');\r\nlet locales = require('./locales');\r\n\r\nvar Images = require('./Images').default;\r\nvar Groups = require('./modules/Groups').default;\r\nvar NodesHandler = require('./modules/NodesHandler').default;\r\nvar EdgesHandler = require('./modules/EdgesHandler').default;\r\nvar PhysicsEngine = require('./modules/PhysicsEngine').default;\r\nvar ClusterEngine = require('./modules/Clustering').default;\r\nvar CanvasRenderer = require('./modules/CanvasRenderer').default;\r\nvar Canvas = require('./modules/Canvas').default;\r\nvar View = require('./modules/View').default;\r\nvar InteractionHandler = require('./modules/InteractionHandler').default;\r\nvar SelectionHandler = require(\"./modules/SelectionHandler\").default;\r\nvar LayoutEngine = require(\"./modules/LayoutEngine\").default;\r\nvar ManipulationSystem = require(\"./modules/ManipulationSystem\").default;\r\nvar Configurator = require(\"./../shared/Configurator\").default;\r\nvar Validator = require(\"./../shared/Validator\").default;\r\nvar {printStyle} = require('./../shared/Validator');\r\nvar {allOptions, configureOptions} = require('./options.js');\r\nvar KamadaKawai = require(\"./modules/KamadaKawai.js\").default;\r\n\r\n\r\n/**\r\n * Create a network visualization, displaying nodes and edges.\r\n *\r\n * @param {Element} container   The DOM element in which the Network will\r\n *                                  be created. Normally a div element.\r\n * @param {Object} data         An object containing parameters\r\n *                              {Array} nodes\r\n *                              {Array} edges\r\n * @param {Object} options      Options\r\n * @constructor Network\r\n */\r\nfunction Network(container, data, options) {\r\n  if (!(this instanceof Network)) {\r\n    throw new SyntaxError('Constructor must be called with the new operator');\r\n  }\r\n\r\n  // set constant values\r\n  this.options = {};\r\n  this.defaultOptions = {\r\n    locale: 'en',\r\n    locales: locales,\r\n    clickToUse: false\r\n  };\r\n  util.extend(this.options, this.defaultOptions);\r\n\r\n  /**\r\n   * Containers for nodes and edges.\r\n   *\r\n   * 'edges' and 'nodes' contain the full definitions of all the network elements.\r\n   * 'nodeIndices' and 'edgeIndices' contain the id's of the active elements.\r\n   *\r\n   * The distinction is important, because a defined node need not be active, i.e.\r\n   * visible on the canvas. This happens in particular when clusters are defined, in\r\n   * that case there will be nodes and edges not displayed.\r\n   * The bottom line is that all code with actions related to visibility, *must* use\r\n   * 'nodeIndices' and 'edgeIndices', not 'nodes' and 'edges' directly.\r\n   */\r\n  this.body = {\r\n    container: container,\r\n\r\n    // See comment above for following fields\r\n    nodes: {},\r\n    nodeIndices: [],\r\n    edges: {},\r\n    edgeIndices: [],\r\n\r\n    emitter: {\r\n      on:   this.on.bind(this),\r\n      off:  this.off.bind(this),\r\n      emit: this.emit.bind(this),\r\n      once: this.once.bind(this)\r\n    },\r\n    eventListeners: {\r\n      onTap:        function() {},\r\n      onTouch:      function() {},\r\n      onDoubleTap:  function() {},\r\n      onHold:       function() {},\r\n      onDragStart:  function() {},\r\n      onDrag:       function() {},\r\n      onDragEnd:    function() {},\r\n      onMouseWheel: function() {},\r\n      onPinch:      function() {},\r\n      onMouseMove:  function() {},\r\n      onRelease:    function() {},\r\n      onContext:    function() {}\r\n    },\r\n    data: {\r\n      nodes: null,      // A DataSet or DataView\r\n      edges: null       // A DataSet or DataView\r\n    },\r\n    functions: {\r\n      createNode: function() {},\r\n      createEdge: function() {},\r\n      getPointer: function() {}\r\n    },\r\n    modules: {},\r\n    view: {\r\n      scale: 1,\r\n      translation: {x: 0, y: 0}\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // bind the event listeners\r\n  this.bindEventListeners();\r\n\r\n  // setting up all modules\r\n  this.images              = new Images(() => this.body.emitter.emit(\"_requestRedraw\")); // object with images\r\n  this.groups              = new Groups(); // object with groups\r\n  this.canvas              = new Canvas(this.body);                         // DOM handler\r\n  this.selectionHandler    = new SelectionHandler(this.body, this.canvas);  // Selection handler\r\n  this.interactionHandler  = new InteractionHandler(this.body, this.canvas, this.selectionHandler);  // Interaction handler handles all the hammer bindings (that are bound by canvas), key\r\n  this.view                = new View(this.body, this.canvas);              // camera handler, does animations and zooms\r\n  this.renderer            = new CanvasRenderer(this.body, this.canvas);    // renderer, starts renderloop, has events that modules can hook into\r\n  this.physics             = new PhysicsEngine(this.body);                  // physics engine, does all the simulations\r\n  this.layoutEngine        = new LayoutEngine(this.body);                   // layout engine for inital layout and hierarchical layout\r\n  this.clustering          = new ClusterEngine(this.body);                  // clustering api\r\n  this.manipulation        = new ManipulationSystem(this.body, this.canvas, this.selectionHandler); // data manipulation system\r\n\r\n  this.nodesHandler        = new NodesHandler(this.body, this.images, this.groups, this.layoutEngine);   // Handle adding, deleting and updating of nodes as well as global options\r\n  this.edgesHandler        = new EdgesHandler(this.body, this.images, this.groups);   // Handle adding, deleting and updating of edges as well as global options\r\n\r\n  this.body.modules[\"kamadaKawai\"] = new KamadaKawai(this.body,150,0.05);   // Layouting algorithm.\r\n  this.body.modules[\"clustering\"] = this.clustering;\r\n\r\n  // create the DOM elements\r\n  this.canvas._create();\r\n\r\n  // apply options\r\n  this.setOptions(options);\r\n\r\n  // load data (the disable start variable will be the same as the enabled clustering)\r\n  this.setData(data);\r\n\r\n}\r\n\r\n// Extend Network with an Emitter mixin\r\nEmitter(Network.prototype);\r\n\r\n\r\n/**\r\n * Set options\r\n * @param {Object} options\r\n */\r\nNetwork.prototype.setOptions = function (options) {\r\n  if (options !== undefined) {\r\n    let errorFound = Validator.validate(options, allOptions);\r\n    if (errorFound === true) {\r\n      console.log('%cErrors have been found in the supplied options object.', printStyle);\r\n    }\r\n\r\n    // copy the global fields over\r\n    let fields = ['locale','locales','clickToUse'];\r\n    util.selectiveDeepExtend(fields,this.options, options);\r\n\r\n    // the hierarchical system can adapt the edges and the physics to it's own options because not all combinations work with the hierarichical system.\r\n    options = this.layoutEngine.setOptions(options.layout, options);\r\n\r\n    this.canvas.setOptions(options); // options for canvas are in globals\r\n\r\n    // pass the options to the modules\r\n    this.groups.setOptions(options.groups);\r\n    this.nodesHandler.setOptions(options.nodes);\r\n    this.edgesHandler.setOptions(options.edges);\r\n    this.physics.setOptions(options.physics);\r\n    this.manipulation.setOptions(options.manipulation, options, this.options); // manipulation uses the locales in the globals\r\n\r\n    this.interactionHandler.setOptions(options.interaction);\r\n    this.renderer.setOptions(options.interaction);            // options for rendering are in interaction\r\n    this.selectionHandler.setOptions(options.interaction);    // options for selection are in interaction\r\n\r\n    // reload the settings of the nodes to apply changes in groups that are not referenced by pointer.\r\n    if (options.groups !== undefined) {\r\n      this.body.emitter.emit(\"refreshNodes\");\r\n    }\r\n    // these two do not have options at the moment, here for completeness\r\n    //this.view.setOptions(options.view);\r\n    //this.clustering.setOptions(options.clustering);\r\n\r\n    if ('configure' in options) {\r\n      if (!this.configurator) {\r\n        this.configurator = new Configurator(this, this.body.container, configureOptions, this.canvas.pixelRatio);\r\n      }\r\n\r\n      this.configurator.setOptions(options.configure);\r\n    }\r\n\r\n    // if the configuration system is enabled, copy all options and put them into the config system\r\n    if (this.configurator && this.configurator.options.enabled === true) {\r\n      let networkOptions = {nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};\r\n      util.deepExtend(networkOptions.nodes,        this.nodesHandler.options);\r\n      util.deepExtend(networkOptions.edges,        this.edgesHandler.options);\r\n      util.deepExtend(networkOptions.layout,       this.layoutEngine.options);\r\n      // load the selectionHandler and render default options in to the interaction group\r\n      util.deepExtend(networkOptions.interaction,  this.selectionHandler.options);\r\n      util.deepExtend(networkOptions.interaction,  this.renderer.options);\r\n\r\n      util.deepExtend(networkOptions.interaction,  this.interactionHandler.options);\r\n      util.deepExtend(networkOptions.manipulation, this.manipulation.options);\r\n      util.deepExtend(networkOptions.physics,      this.physics.options);\r\n\r\n      // load globals into the global object\r\n      util.deepExtend(networkOptions.global,       this.canvas.options);\r\n      util.deepExtend(networkOptions.global,       this.options);\r\n\r\n      this.configurator.setModuleOptions(networkOptions);\r\n    }\r\n\r\n    // handle network global options\r\n    if (options.clickToUse !== undefined) {\r\n      if (options.clickToUse === true) {\r\n        if (this.activator === undefined) {\r\n          this.activator = new Activator(this.canvas.frame);\r\n          this.activator.on('change', () => {this.body.emitter.emit(\"activate\")});\r\n        }\r\n      }\r\n      else {\r\n        if (this.activator !== undefined) {\r\n          this.activator.destroy();\r\n          delete this.activator;\r\n        }\r\n        this.body.emitter.emit(\"activate\");\r\n      }\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"activate\");\r\n    }\r\n\r\n    this.canvas.setSize();\r\n    // start the physics simulation. Can be safely called multiple times.\r\n    this.body.emitter.emit(\"startSimulation\");\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Update the visible nodes and edges list with the most recent node state.\r\n *\r\n * Visible nodes are stored in this.body.nodeIndices.\r\n * Visible edges are stored in this.body.edgeIndices.\r\n * A node or edges is visible if it is not hidden or clustered.\r\n *\r\n * @private\r\n */\r\nNetwork.prototype._updateVisibleIndices = function () {\r\n  let nodes = this.body.nodes;\r\n  let edges = this.body.edges;\r\n  this.body.nodeIndices = [];\r\n  this.body.edgeIndices = [];\r\n\r\n  for (let nodeId in nodes) {\r\n    if (nodes.hasOwnProperty(nodeId)) {\r\n      if (!this.clustering._isClusteredNode(nodeId) && nodes[nodeId].options.hidden === false) {\r\n        this.body.nodeIndices.push(nodes[nodeId].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let edgeId in edges) {\r\n    if (edges.hasOwnProperty(edgeId)) {\r\n      let edge = edges[edgeId];\r\n\r\n      // It can happen that this is executed *after* a node edge has been removed,\r\n      // but *before* the edge itself has been removed. Taking this into account.\r\n      let fromNode = nodes[edge.fromId];\r\n      let toNode   = nodes[edge.toId];\r\n      let edgeNodesPresent = (fromNode !== undefined) && (toNode !== undefined);\r\n\r\n      let isVisible =\r\n          !this.clustering._isClusteredEdge(edgeId)\r\n        && edge.options.hidden === false\r\n        && edgeNodesPresent\r\n        && fromNode.options.hidden === false  // Also hidden if any of its connecting nodes are hidden\r\n        && toNode.options.hidden === false;   // idem\r\n\r\n      if (isVisible) {\r\n        this.body.edgeIndices.push(edge.id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Bind all events\r\n */\r\nNetwork.prototype.bindEventListeners = function () {\r\n  // This event will trigger a rebuilding of the cache everything.\r\n  // Used when nodes or edges have been added or removed.\r\n  this.body.emitter.on(\"_dataChanged\", () => {\r\n    this.edgesHandler._updateState();\r\n    this.body.emitter.emit(\"_dataUpdated\");\r\n  });\r\n\r\n  // this is called when options of EXISTING nodes or edges have changed.\r\n  this.body.emitter.on(\"_dataUpdated\", () => {\r\n    // Order important in following block\r\n    this.clustering._updateState();\r\n    this._updateVisibleIndices();\r\n\r\n    this._updateValueRange(this.body.nodes);\r\n    this._updateValueRange(this.body.edges);\r\n    // start simulation (can be called safely, even if already running)\r\n    this.body.emitter.emit(\"startSimulation\");\r\n    this.body.emitter.emit(\"_requestRedraw\");\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Set nodes and edges, and optionally options as well.\r\n *\r\n * @param {Object} data              Object containing parameters:\r\n *                                   {Array | DataSet | DataView} [nodes] Array with nodes\r\n *                                   {Array | DataSet | DataView} [edges] Array with edges\r\n *                                   {String} [dot] String containing data in DOT format\r\n *                                   {String} [gephi] String containing data in gephi JSON format\r\n *                                   {Options} [options] Object with options\r\n */\r\nNetwork.prototype.setData = function (data) {\r\n  // reset the physics engine.\r\n  this.body.emitter.emit(\"resetPhysics\");\r\n  this.body.emitter.emit(\"_resetData\");\r\n\r\n  // unselect all to ensure no selections from old data are carried over.\r\n  this.selectionHandler.unselectAll();\r\n\r\n  if (data && data.dot && (data.nodes || data.edges)) {\r\n    throw new SyntaxError('Data must contain either parameter \"dot\" or ' +\r\n      ' parameter pair \"nodes\" and \"edges\", but not both.');\r\n  }\r\n\r\n  // set options\r\n  this.setOptions(data && data.options);\r\n  // set all data\r\n  if (data && data.dot) {\r\n    console.log('The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);');\r\n    // parse DOT file\r\n    var dotData = dotparser.DOTToGraph(data.dot);\r\n    this.setData(dotData);\r\n    return;\r\n  }\r\n  else if (data && data.gephi) {\r\n    // parse DOT file\r\n    console.log('The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);');\r\n    var gephiData = gephiParser.parseGephi(data.gephi);\r\n    this.setData(gephiData);\r\n    return;\r\n  }\r\n  else {\r\n    this.nodesHandler.setData(data && data.nodes, true);\r\n    this.edgesHandler.setData(data && data.edges, true);\r\n  }\r\n\r\n  // emit change in data\r\n  this.body.emitter.emit(\"_dataChanged\");\r\n\r\n  // emit data loaded\r\n  this.body.emitter.emit(\"_dataLoaded\");\r\n\r\n  // find a stable position or start animating to a stable position\r\n  this.body.emitter.emit(\"initPhysics\");\r\n};\r\n\r\n\r\n/**\r\n * Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\r\n * var network = new vis.Network(..);\r\n * network.destroy();\r\n * network = null;\r\n */\r\nNetwork.prototype.destroy = function () {\r\n  this.body.emitter.emit(\"destroy\");\r\n  // clear events\r\n  this.body.emitter.off();\r\n  this.off();\r\n\r\n  // delete modules\r\n  delete this.groups;\r\n  delete this.canvas;\r\n  delete this.selectionHandler;\r\n  delete this.interactionHandler;\r\n  delete this.view;\r\n  delete this.renderer;\r\n  delete this.physics;\r\n  delete this.layoutEngine;\r\n  delete this.clustering;\r\n  delete this.manipulation;\r\n  delete this.nodesHandler;\r\n  delete this.edgesHandler;\r\n  delete this.configurator;\r\n  delete this.images;\r\n\r\n  for (var nodeId in this.body.nodes) {\r\n    if (!this.body.nodes.hasOwnProperty(nodeId)) continue;\r\n    delete this.body.nodes[nodeId];\r\n  }\r\n\r\n  for (var edgeId in this.body.edges) {\r\n    if (!this.body.edges.hasOwnProperty(edgeId)) continue;\r\n    delete this.body.edges[edgeId];\r\n  }\r\n\r\n  // remove the container and everything inside it recursively\r\n  util.recursiveDOMDelete(this.body.container);\r\n};\r\n\r\n\r\n/**\r\n * Update the values of all object in the given array according to the current\r\n * value range of the objects in the array.\r\n * @param {Object} obj    An object containing a set of Edges or Nodes\r\n *                        The objects must have a method getValue() and\r\n *                        setValueRange(min, max).\r\n * @private\r\n */\r\nNetwork.prototype._updateValueRange = function (obj) {\r\n  var id;\r\n\r\n  // determine the range of the objects\r\n  var valueMin = undefined;\r\n  var valueMax = undefined;\r\n  var valueTotal = 0;\r\n  for (id in obj) {\r\n    if (obj.hasOwnProperty(id)) {\r\n      var value = obj[id].getValue();\r\n      if (value !== undefined) {\r\n        valueMin = (valueMin === undefined) ? value : Math.min(value, valueMin);\r\n        valueMax = (valueMax === undefined) ? value : Math.max(value, valueMax);\r\n        valueTotal += value;\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust the range of all objects\r\n  if (valueMin !== undefined && valueMax !== undefined) {\r\n    for (id in obj) {\r\n      if (obj.hasOwnProperty(id)) {\r\n        obj[id].setValueRange(valueMin, valueMax, valueTotal);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Returns true when the Network is active.\r\n * @returns {boolean}\r\n */\r\nNetwork.prototype.isActive = function () {\r\n  return !this.activator || this.activator.active;\r\n};\r\n\r\n\r\nNetwork.prototype.setSize             = function() {return this.canvas.setSize.apply(this.canvas,arguments);};\r\nNetwork.prototype.canvasToDOM         = function() {return this.canvas.canvasToDOM.apply(this.canvas,arguments);};\r\nNetwork.prototype.DOMtoCanvas         = function() {return this.canvas.DOMtoCanvas.apply(this.canvas,arguments);};\r\nNetwork.prototype.findNode            = function() {return this.clustering.findNode.apply(this.clustering,arguments);};\r\nNetwork.prototype.isCluster           = function() {return this.clustering.isCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.openCluster         = function() {return this.clustering.openCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.cluster             = function() {return this.clustering.cluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.getNodesInCluster   = function() {return this.clustering.getNodesInCluster.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByConnection = function() {return this.clustering.clusterByConnection.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterByHubsize    = function() {return this.clustering.clusterByHubsize.apply(this.clustering,arguments);};\r\nNetwork.prototype.clusterOutliers     = function() {return this.clustering.clusterOutliers.apply(this.clustering,arguments);};\r\nNetwork.prototype.getSeed             = function() {return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments);};\r\nNetwork.prototype.enableEditMode      = function() {return this.manipulation.enableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.disableEditMode     = function() {return this.manipulation.disableEditMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addNodeMode         = function() {return this.manipulation.addNodeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNode            = function() {return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editNodeMode        = function() {console.log(\"Deprecated: Please use editNode instead of editNodeMode.\"); return this.manipulation.editNode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.addEdgeMode         = function() {return this.manipulation.addEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.editEdgeMode        = function() {return this.manipulation.editEdgeMode.apply(this.manipulation,arguments);};\r\nNetwork.prototype.deleteSelected      = function() {return this.manipulation.deleteSelected.apply(this.manipulation,arguments);};\r\nNetwork.prototype.getPositions        = function() {return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.storePositions      = function() {return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.moveNode            = function() {return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getBoundingBox      = function() {return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.getConnectedNodes   = function(objectId) {\r\n  if (this.body.nodes[objectId] !== undefined) {\r\n    return this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments);\r\n  }\r\n  else {\r\n    return this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments);\r\n  }\r\n};\r\nNetwork.prototype.getConnectedEdges   = function() {return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments);};\r\nNetwork.prototype.startSimulation     = function() {return this.physics.startSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stopSimulation      = function() {return this.physics.stopSimulation.apply(this.physics,arguments);};\r\nNetwork.prototype.stabilize           = function() {return this.physics.stabilize.apply(this.physics,arguments);};\r\nNetwork.prototype.getSelection        = function() {return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.setSelection        = function() {return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedNodes    = function() {return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getSelectedEdges    = function() {return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.getNodeAt           = function() {\r\n  var node = this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);\r\n  if (node !== undefined && node.id !== undefined) {\r\n    return node.id;\r\n  }\r\n  return node;\r\n};\r\nNetwork.prototype.getEdgeAt           = function() {\r\n    var edge = this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);\r\n    if (edge !== undefined && edge.id !== undefined) {\r\n      return edge.id;\r\n    }\r\n    return edge;\r\n  };\r\nNetwork.prototype.selectNodes         = function() {return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.selectEdges         = function() {return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments);};\r\nNetwork.prototype.unselectAll         = function() {\r\n  this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments);\r\n  this.redraw();\r\n};\r\nNetwork.prototype.redraw              = function() {return this.renderer.redraw.apply(this.renderer,arguments);};\r\nNetwork.prototype.getScale            = function() {return this.view.getScale.apply(this.view,arguments);};\r\nNetwork.prototype.getViewPosition     = function() {return this.view.getViewPosition.apply(this.view,arguments);};\r\nNetwork.prototype.fit                 = function() {return this.view.fit.apply(this.view,arguments);};\r\nNetwork.prototype.moveTo              = function() {return this.view.moveTo.apply(this.view,arguments);};\r\nNetwork.prototype.focus               = function() {return this.view.focus.apply(this.view,arguments);};\r\nNetwork.prototype.releaseNode         = function() {return this.view.releaseNode.apply(this.view,arguments);};\r\nNetwork.prototype.getOptionsFromConfigurator = function() {\r\n  let options = {};\r\n  if (this.configurator) {\r\n    options = this.configurator.getOptions.apply(this.configurator);\r\n  }\r\n  return options;\r\n};\r\n\r\n\r\n\r\nmodule.exports = Network;\r\n","/**\r\n * Canvas shapes used by Network\r\n */\r\nif (typeof CanvasRenderingContext2D !== 'undefined') {\r\n\r\n  /**\r\n   * Draw a circle shape\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} r\r\n   */\r\n  CanvasRenderingContext2D.prototype.circle = function (x, y, r) {\r\n    this.beginPath();\r\n    this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * Draw a square shape\r\n   * @param {number} x horizontal center\r\n   * @param {number} y vertical center\r\n   * @param {number} r   size, width and height of the square\r\n   */\r\n  CanvasRenderingContext2D.prototype.square = function (x, y, r) {\r\n    this.beginPath();\r\n    this.rect(x - r, y - r, r * 2, r * 2);\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * Draw a triangle shape\r\n   * @param {number} x horizontal center\r\n   * @param {number} y vertical center\r\n   * @param {number} r   radius, half the length of the sides of the triangle\r\n   */\r\n  CanvasRenderingContext2D.prototype.triangle = function (x, y, r) {\r\n    // http://en.wikipedia.org/wiki/Equilateral_triangle\r\n    this.beginPath();\r\n\r\n    // the change in radius and the offset is here to center the shape\r\n    r *= 1.15;\r\n    y += 0.275 * r;\r\n\r\n    var s = r * 2;\r\n    var s2 = s / 2;\r\n    var ir = Math.sqrt(3) / 6 * s;      // radius of inner circle\r\n    var h = Math.sqrt(s * s - s2 * s2); // height\r\n\r\n\r\n    this.moveTo(x, y - (h - ir));\r\n    this.lineTo(x + s2, y + ir);\r\n    this.lineTo(x - s2, y + ir);\r\n    this.lineTo(x, y - (h - ir));\r\n    this.closePath();\r\n\r\n\r\n  };\r\n\r\n  /**\r\n   * Draw a triangle shape in downward orientation\r\n   * @param {number} x horizontal center\r\n   * @param {number} y vertical center\r\n   * @param {number} r radius\r\n   */\r\n  CanvasRenderingContext2D.prototype.triangleDown = function (x, y, r) {\r\n    // http://en.wikipedia.org/wiki/Equilateral_triangle\r\n    this.beginPath();\r\n\r\n    // the change in radius and the offset is here to center the shape\r\n    r *= 1.15;\r\n    y -= 0.275 * r;\r\n\r\n    var s = r * 2;\r\n    var s2 = s / 2;\r\n    var ir = Math.sqrt(3) / 6 * s;      // radius of inner circle\r\n    var h = Math.sqrt(s * s - s2 * s2); // height\r\n\r\n    this.moveTo(x, y + (h - ir));\r\n    this.lineTo(x + s2, y - ir);\r\n    this.lineTo(x - s2, y - ir);\r\n    this.lineTo(x, y + (h - ir));\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * Draw a star shape, a star with 5 points\r\n   * @param {number} x horizontal center\r\n   * @param {number} y vertical center\r\n   * @param {number} r   radius, half the length of the sides of the triangle\r\n   */\r\n  CanvasRenderingContext2D.prototype.star = function (x, y, r) {\r\n    // http://www.html5canvastutorials.com/labs/html5-canvas-star-spinner/\r\n    this.beginPath();\r\n\r\n    // the change in radius and the offset is here to center the shape\r\n    r *= 0.82;\r\n    y += 0.1 * r;\r\n\r\n    for (var n = 0; n < 10; n++) {\r\n      var radius = (n % 2 === 0) ? r * 1.3 : r * 0.5;\r\n      this.lineTo(\r\n        x + radius * Math.sin(n * 2 * Math.PI / 10),\r\n        y - radius * Math.cos(n * 2 * Math.PI / 10)\r\n      );\r\n    }\r\n\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * Draw a Diamond shape\r\n   * @param {number} x horizontal center\r\n   * @param {number} y vertical center\r\n   * @param {number} r   radius, half the length of the sides of the triangle\r\n   */\r\n  CanvasRenderingContext2D.prototype.diamond = function (x, y, r) {\r\n    // http://www.html5canvastutorials.com/labs/html5-canvas-star-spinner/\r\n    this.beginPath();\r\n\r\n    this.lineTo(x, y + r);\r\n    this.lineTo(x + r, y);\r\n    this.lineTo(x, y - r);\r\n    this.lineTo(x - r, y);\r\n\r\n\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * http://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   * @param {number} r\r\n   */\r\n  CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {\r\n    var r2d = Math.PI / 180;\r\n    if (w - ( 2 * r ) < 0) {\r\n      r = ( w / 2 );\r\n    } //ensure that the radius isn't too large for x\r\n    if (h - ( 2 * r ) < 0) {\r\n      r = ( h / 2 );\r\n    } //ensure that the radius isn't too large for y\r\n    this.beginPath();\r\n    this.moveTo(x + r, y);\r\n    this.lineTo(x + w - r, y);\r\n    this.arc(x + w - r, y + r, r, r2d * 270, r2d * 360, false);\r\n    this.lineTo(x + w, y + h - r);\r\n    this.arc(x + w - r, y + h - r, r, 0, r2d * 90, false);\r\n    this.lineTo(x + r, y + h);\r\n    this.arc(x + r, y + h - r, r, r2d * 90, r2d * 180, false);\r\n    this.lineTo(x, y + r);\r\n    this.arc(x + r, y + r, r, r2d * 180, r2d * 270, false);\r\n    this.closePath();\r\n  };\r\n\r\n  /**\r\n   * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\r\n   *\r\n   * Postfix '_vis' added to discern it from standard method ellipse().\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   */\r\n  CanvasRenderingContext2D.prototype.ellipse_vis = function (x, y, w, h) {\r\n    var kappa = .5522848,\r\n      ox = (w / 2) * kappa, // control point offset horizontal\r\n      oy = (h / 2) * kappa, // control point offset vertical\r\n      xe = x + w,           // x-end\r\n      ye = y + h,           // y-end\r\n      xm = x + w / 2,       // x-middle\r\n      ym = y + h / 2;       // y-middle\r\n\r\n    this.beginPath();\r\n    this.moveTo(x, ym);\r\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\r\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\r\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\r\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\r\n    this.closePath();\r\n  };\r\n\r\n\r\n  /**\r\n   * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   */\r\n  CanvasRenderingContext2D.prototype.database = function (x, y, w, h) {\r\n    var f = 1 / 3;\r\n    var wEllipse = w;\r\n    var hEllipse = h * f;\r\n\r\n    var kappa = .5522848,\r\n      ox = (wEllipse / 2) * kappa, // control point offset horizontal\r\n      oy = (hEllipse / 2) * kappa, // control point offset vertical\r\n      xe = x + wEllipse,           // x-end\r\n      ye = y + hEllipse,           // y-end\r\n      xm = x + wEllipse / 2,       // x-middle\r\n      ym = y + hEllipse / 2,       // y-middle\r\n      ymb = y + (h - hEllipse / 2),  // y-midlle, bottom ellipse\r\n      yeb = y + h;                 // y-end, bottom ellipse\r\n\r\n    this.beginPath();\r\n    this.moveTo(xe, ym);\r\n\r\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\r\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\r\n\r\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\r\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\r\n\r\n    this.lineTo(xe, ymb);\r\n\r\n    this.bezierCurveTo(xe, ymb + oy, xm + ox, yeb, xm, yeb);\r\n    this.bezierCurveTo(xm - ox, yeb, x, ymb + oy, x, ymb);\r\n\r\n    this.lineTo(x, ym);\r\n  };\r\n\r\n\r\n  /**\r\n   * Sets up the dashedLine functionality for drawing\r\n   * Original code came from http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\r\n   * @author David Jordan\r\n   * @date 2012-08-08\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {string} pattern\r\n   */\r\n  CanvasRenderingContext2D.prototype.dashedLine = function (x, y, x2, y2, pattern) {\r\n    this.beginPath();\r\n    this.moveTo(x, y);\r\n\r\n    var patternLength = pattern.length;\r\n    var dx = (x2 - x);\r\n    var dy = (y2 - y);\r\n    var slope = dy / dx;\r\n    var distRemaining = Math.sqrt(dx * dx + dy * dy);\r\n    var patternIndex = 0;\r\n    var draw = true;\r\n    var xStep = 0;\r\n    var dashLength = pattern[0];\r\n\r\n    while (distRemaining >= 0.1) {\r\n      dashLength = pattern[patternIndex++ % patternLength];\r\n      if (dashLength > distRemaining) {\r\n        dashLength = distRemaining;\r\n      }\r\n\r\n      xStep = Math.sqrt(dashLength * dashLength / (1 + slope * slope));\r\n      xStep = dx < 0 ? -xStep : xStep;\r\n      x += xStep;\r\n      y += slope * xStep;\r\n\r\n      if (draw === true) {this.lineTo(x,y);}\r\n      else               {this.moveTo(x,y);}\r\n\r\n      distRemaining -= dashLength;\r\n      draw = !draw;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Draw a Hexagon shape with 6 sides\r\n   * @param {Number} x horizontal center\r\n   * @param {Number} y vertical center\r\n   * @param {Number} r   radius\r\n   */\r\n  CanvasRenderingContext2D.prototype.hexagon = function (x, y, r) {\r\n    this.beginPath();\r\n    var sides = 6;\r\n    var a = (Math.PI*2)/sides;\r\n    this.moveTo(x+r,y);\r\n    for (var i = 1; i < sides; i++) {\r\n      this.lineTo(x+r*Math.cos(a*i),y+r*Math.sin(a*i));\r\n    }\r\n    this.closePath();\r\n  };\r\n}\r\n","var keycharm = require('keycharm');\r\nvar Emitter = require('emitter-component');\r\nvar Hammer = require('../module/hammer');\r\nvar util = require('../util');\r\n\r\n/**\r\n * Turn an element into an clickToUse element.\r\n * When not active, the element has a transparent overlay. When the overlay is\r\n * clicked, the mode is changed to active.\r\n * When active, the element is displayed with a blue border around it, and\r\n * the interactive contents of the element can be used. When clicked outside\r\n * the element, the elements mode is changed to inactive.\r\n * @param {Element} container\r\n * @constructor Activator\r\n */\r\nfunction Activator(container) {\r\n  this.active = false;\r\n\r\n  this.dom = {\r\n    container: container\r\n  };\r\n\r\n  this.dom.overlay = document.createElement('div');\r\n  this.dom.overlay.className = 'vis-overlay';\r\n\r\n  this.dom.container.appendChild(this.dom.overlay);\r\n\r\n  this.hammer = Hammer(this.dom.overlay);\r\n  this.hammer.on('tap', this._onTapOverlay.bind(this));\r\n\r\n  // block all touch events (except tap)\r\n  var me = this;\r\n  var events = [\r\n    'tap', 'doubletap', 'press',\r\n    'pinch',\r\n    'pan', 'panstart', 'panmove', 'panend'\r\n  ];\r\n  events.forEach(function (event) {\r\n    me.hammer.on(event, function (event) {\r\n      event.stopPropagation();\r\n    });\r\n  });\r\n\r\n  // attach a click event to the window, in order to deactivate when clicking outside the timeline\r\n  if (document && document.body) {\r\n    this.onClick = function (event) {\r\n      if (!_hasParent(event.target, container)) {\r\n        me.deactivate();\r\n      }\r\n    };\r\n    document.body.addEventListener('click', this.onClick);\r\n  }\r\n\r\n  if (this.keycharm !== undefined) {\r\n    this.keycharm.destroy();\r\n  }\r\n  this.keycharm = keycharm();\r\n\r\n  // keycharm listener only bounded when active)\r\n  this.escListener = this.deactivate.bind(this);\r\n}\r\n\r\n// turn into an event emitter\r\nEmitter(Activator.prototype);\r\n\r\n// The currently active activator\r\nActivator.current = null;\r\n\r\n/**\r\n * Destroy the activator. Cleans up all created DOM and event listeners\r\n */\r\nActivator.prototype.destroy = function () {\r\n  this.deactivate();\r\n\r\n  // remove dom\r\n  this.dom.overlay.parentNode.removeChild(this.dom.overlay);\r\n\r\n  // remove global event listener\r\n  if (this.onClick) {\r\n    document.body.removeEventListener('click', this.onClick);\r\n  }\r\n\r\n  // cleanup hammer instances\r\n  this.hammer.destroy();\r\n  this.hammer = null;\r\n  // FIXME: cleaning up hammer instances doesn't work (Timeline not removed from memory)\r\n};\r\n\r\n/**\r\n * Activate the element\r\n * Overlay is hidden, element is decorated with a blue shadow border\r\n */\r\nActivator.prototype.activate = function () {\r\n  // we allow only one active activator at a time\r\n  if (Activator.current) {\r\n    Activator.current.deactivate();\r\n  }\r\n  Activator.current = this;\r\n\r\n  this.active = true;\r\n  this.dom.overlay.style.display = 'none';\r\n  util.addClassName(this.dom.container, 'vis-active');\r\n\r\n  this.emit('change');\r\n  this.emit('activate');\r\n\r\n  // ugly hack: bind ESC after emitting the events, as the Network rebinds all\r\n  // keyboard events on a 'change' event\r\n  this.keycharm.bind('esc', this.escListener);\r\n};\r\n\r\n/**\r\n * Deactivate the element\r\n * Overlay is displayed on top of the element\r\n */\r\nActivator.prototype.deactivate = function () {\r\n  this.active = false;\r\n  this.dom.overlay.style.display = '';\r\n  util.removeClassName(this.dom.container, 'vis-active');\r\n  this.keycharm.unbind('esc', this.escListener);\r\n\r\n  this.emit('change');\r\n  this.emit('deactivate');\r\n};\r\n\r\n/**\r\n * Handle a tap event: activate the container\r\n * @param {Event}  event   The event\r\n * @private\r\n */\r\nActivator.prototype._onTapOverlay = function (event) {\r\n  // activate the container\r\n  this.activate();\r\n  event.stopPropagation();\r\n};\r\n\r\n/**\r\n * Test whether the element has the requested parent element somewhere in\r\n * its chain of parent nodes.\r\n * @param {HTMLElement} element\r\n * @param {HTMLElement} parent\r\n * @returns {boolean} Returns true when the parent is found somewhere in the\r\n *                    chain of parent nodes.\r\n * @private\r\n */\r\nfunction _hasParent(element, parent) {\r\n  while (element) {\r\n    if (element === parent) {\r\n      return true\r\n    }\r\n    element = element.parentNode;\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = Activator;\r\n","'use strict';\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    window.propagating = factory();\n  }\n}(function () {\n  var _firstTarget = null; // singleton, will contain the target element where the touch event started\n\n  /**\n   * Extend an Hammer.js instance with event propagation.\n   *\n   * Features:\n   * - Events emitted by hammer will propagate in order from child to parent\n   *   elements.\n   * - Events are extended with a function `event.stopPropagation()` to stop\n   *   propagation to parent elements.\n   * - An option `preventDefault` to stop all default browser behavior.\n   *\n   * Usage:\n   *   var hammer = propagatingHammer(new Hammer(element));\n   *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});\n   *\n   * @param {Hammer.Manager} hammer   An hammer instance.\n   * @param {Object} [options]        Available options:\n   *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.\n   *                                    Enforce preventing the default browser behavior.\n   *                                    Cannot be set to `false`.\n   * @return {Hammer.Manager} Returns the same hammer instance with extended\n   *                          functionality\n   */\n  return function propagating(hammer, options) {\n    var _options = options || {\n      preventDefault: false\n    };\n\n    if (hammer.Manager) {\n      // This looks like the Hammer constructor.\n      // Overload the constructors with our own.\n      var Hammer = hammer;\n\n      var PropagatingHammer = function(element, options) {\n        var o = Object.create(_options);\n        if (options) Hammer.assign(o, options);\n        return propagating(new Hammer(element, o), o);\n      };\n      Hammer.assign(PropagatingHammer, Hammer);\n\n      PropagatingHammer.Manager = function (element, options) {\n        var o = Object.create(_options);\n        if (options) Hammer.assign(o, options);\n        return propagating(new Hammer.Manager(element, o), o);\n      };\n\n      return PropagatingHammer;\n    }\n\n    // create a wrapper object which will override the functions\n    // `on`, `off`, `destroy`, and `emit` of the hammer instance\n    var wrapper = Object.create(hammer);\n\n    // attach to DOM element\n    var element = hammer.element;\n\n    if(!element.hammer) element.hammer = [];\n    element.hammer.push(wrapper);\n\n    // register an event to catch the start of a gesture and store the\n    // target in a singleton\n    hammer.on('hammer.input', function (event) {\n      if (_options.preventDefault === true || (_options.preventDefault === event.pointerType)) {\n        event.preventDefault();\n      }\n      if (event.isFirst) {\n        _firstTarget = event.target;\n      }\n    });\n\n    /** @type {Object.<String, Array.<function>>} */\n    wrapper._handlers = {};\n\n    /**\n     * Register a handler for one or multiple events\n     * @param {String} events    A space separated string with events\n     * @param {function} handler A callback function, called as handler(event)\n     * @returns {Hammer.Manager} Returns the hammer instance\n     */\n    wrapper.on = function (events, handler) {\n      // register the handler\n      split(events).forEach(function (event) {\n        var _handlers = wrapper._handlers[event];\n        if (!_handlers) {\n          wrapper._handlers[event] = _handlers = [];\n\n          // register the static, propagated handler\n          hammer.on(event, propagatedHandler);\n        }\n        _handlers.push(handler);\n      });\n\n      return wrapper;\n    };\n\n    /**\n     * Unregister a handler for one or multiple events\n     * @param {String} events      A space separated string with events\n     * @param {function} [handler] Optional. The registered handler. If not\n     *                             provided, all handlers for given events\n     *                             are removed.\n     * @returns {Hammer.Manager}   Returns the hammer instance\n     */\n    wrapper.off = function (events, handler) {\n      // unregister the handler\n      split(events).forEach(function (event) {\n        var _handlers = wrapper._handlers[event];\n        if (_handlers) {\n          _handlers = handler ? _handlers.filter(function (h) {\n            return h !== handler;\n          }) : [];\n\n          if (_handlers.length > 0) {\n            wrapper._handlers[event] = _handlers;\n          }\n          else {\n            // remove static, propagated handler\n            hammer.off(event, propagatedHandler);\n            delete wrapper._handlers[event];\n          }\n        }\n      });\n\n      return wrapper;\n    };\n\n    /**\n     * Emit to the event listeners\n     * @param {string} eventType\n     * @param {Event} event\n     */\n    wrapper.emit = function(eventType, event) {\n      _firstTarget = event.target;\n      hammer.emit(eventType, event);\n    };\n\n    wrapper.destroy = function () {\n      // Detach from DOM element\n      var hammers = hammer.element.hammer;\n      var idx = hammers.indexOf(wrapper);\n      if(idx !== -1) hammers.splice(idx,1);\n      if(!hammers.length) delete hammer.element.hammer;\n\n      // clear all handlers\n      wrapper._handlers = {};\n\n      // call original hammer destroy\n      hammer.destroy();\n    };\n\n    // split a string with space separated words\n    function split(events) {\n      return events.match(/[^ ]+/g);\n    }\n\n    /**\n     * A static event handler, applying event propagation.\n     * @param {Object} event\n     */\n    function propagatedHandler(event) {\n      // let only a single hammer instance handle this event\n      if (event.type !== 'hammer.input') {\n        // it is possible that the same srcEvent is used with multiple hammer events,\n        // we keep track on which events are handled in an object _handled\n        if (!event.srcEvent._handled) {\n          event.srcEvent._handled = {};\n        }\n\n        if (event.srcEvent._handled[event.type]) {\n          return;\n        }\n        else {\n          event.srcEvent._handled[event.type] = true;\n        }\n      }\n\n      // attach a stopPropagation function to the event\n      var stopped = false;\n      event.stopPropagation = function () {\n        stopped = true;\n      };\n\n      //wrap the srcEvent's stopPropagation to also stop hammer propagation:\n      var srcStop = event.srcEvent.stopPropagation.bind(event.srcEvent);\n      if(typeof srcStop == \"function\") {\n        event.srcEvent.stopPropagation = function(){\n          srcStop();\n          event.stopPropagation();\n        }\n      }\n\n      // attach firstTarget property to the event\n      event.firstTarget = _firstTarget;\n\n      // propagate over all elements (until stopped)\n      var elem = _firstTarget;\n      while (elem && !stopped) {\n        var elemHammer = elem.hammer;\n        if(elemHammer){\n          var _handlers;\n          for(var k = 0; k < elemHammer.length; k++){\n            _handlers = elemHammer[k]._handlers[event.type];\n            if(_handlers) for (var i = 0; i < _handlers.length && !stopped; i++) {\n              _handlers[i](event);\n            }\n          }\n        }\n        elem = elem.parentNode;\n      }\n    }\n\n    return wrapper;\n  };\n}));\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","// English\r\nexports['en'] = {\r\n  edit: 'Edit',\r\n  del: 'Delete selected',\r\n  back: 'Back',\r\n  addNode: 'Add Node',\r\n  addEdge: 'Add Edge',\r\n  editNode: 'Edit Node',\r\n  editEdge: 'Edit Edge',\r\n  addDescription: 'Click in an empty space to place a new node.',\r\n  edgeDescription: 'Click on a node and drag the edge to another node to connect them.',\r\n  editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',\r\n  createEdgeError: 'Cannot link edges to a cluster.',\r\n  deleteClusterError: 'Clusters cannot be deleted.',\r\n  editClusterError: 'Clusters cannot be edited.'\r\n};\r\nexports['en_EN'] = exports['en'];\r\nexports['en_US'] = exports['en'];\r\n\r\n// German\r\nexports['de'] = {\r\n  edit: 'Editieren',\r\n  del: 'L\\u00f6sche Auswahl',\r\n  back: 'Zur\\u00fcck',\r\n  addNode: 'Knoten hinzuf\\u00fcgen',\r\n  addEdge: 'Kante hinzuf\\u00fcgen',\r\n  editNode: 'Knoten editieren',\r\n  editEdge: 'Kante editieren',\r\n  addDescription: 'Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.',\r\n  edgeDescription: 'Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.',\r\n  editEdgeDescription: 'Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.',\r\n  createEdgeError: 'Es ist nicht m\\u00f6glich, Kanten mit Clustern zu verbinden.',\r\n  deleteClusterError: 'Cluster k\\u00f6nnen nicht gel\\u00f6scht werden.',\r\n  editClusterError: 'Cluster k\\u00f6nnen nicht editiert werden.'\r\n};\r\nexports['de_DE'] = exports['de'];\r\n\r\n// Spanish\r\nexports['es'] = {\r\n  edit: 'Editar',\r\n  del: 'Eliminar selecci\\u00f3n',\r\n  back: '\\u00c1tras',\r\n  addNode: 'A\\u00f1adir nodo',\r\n  addEdge: 'A\\u00f1adir arista',\r\n  editNode: 'Editar nodo',\r\n  editEdge: 'Editar arista',\r\n  addDescription: 'Haga clic en un lugar vac\\u00edo para colocar un nuevo nodo.',\r\n  edgeDescription: 'Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.',\r\n  editEdgeDescription: 'Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.',\r\n  createEdgeError: 'No se puede conectar una arista a un grupo.',\r\n  deleteClusterError: 'No es posible eliminar grupos.',\r\n  editClusterError: 'No es posible editar grupos.'\r\n};\r\nexports['es_ES'] = exports['es'];\r\n\r\n//Italiano\r\nexports['it'] = {\r\n  edit: 'Modifica',\r\n  del: 'Cancella la selezione',\r\n  back: 'Indietro',\r\n  addNode: 'Aggiungi un nodo',\r\n  addEdge: 'Aggiungi un vertice',\r\n  editNode: 'Modifica il nodo',\r\n  editEdge: 'Modifica il vertice',\r\n  addDescription: 'Clicca per aggiungere un nuovo nodo',\r\n  edgeDescription: 'Clicca su un nodo e trascinalo ad un altro nodo per connetterli.',\r\n  editEdgeDescription: 'Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.',\r\n  createEdgeError: 'Non si possono collegare vertici ad un cluster',\r\n  deleteClusterError: 'I cluster non possono essere cancellati',\r\n  editClusterError: 'I clusters non possono essere modificati.'\r\n};\r\nexports['it_IT'] = exports['it'];\r\n\r\n// Dutch\r\nexports['nl'] = {\r\n  edit: 'Wijzigen',\r\n  del: 'Selectie verwijderen',\r\n  back: 'Terug',\r\n  addNode: 'Node toevoegen',\r\n  addEdge: 'Link toevoegen',\r\n  editNode: 'Node wijzigen',\r\n  editEdge: 'Link wijzigen',\r\n  addDescription: 'Klik op een leeg gebied om een nieuwe node te maken.',\r\n  edgeDescription: 'Klik op een node en sleep de link naar een andere node om ze te verbinden.',\r\n  editEdgeDescription: 'Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.',\r\n  createEdgeError: 'Kan geen link maken naar een cluster.',\r\n  deleteClusterError: 'Clusters kunnen niet worden verwijderd.',\r\n  editClusterError: 'Clusters kunnen niet worden aangepast.'\r\n};\r\nexports['nl_NL'] = exports['nl'];\r\nexports['nl_BE'] = exports['nl'];\r\n\r\n// Portuguese Brazil\r\nexports['pt-br'] = {\r\n  edit: 'Editar',\r\n  del: 'Remover selecionado',\r\n  back: 'Voltar',\r\n  addNode: 'Adicionar nó',\r\n  addEdge: 'Adicionar aresta',\r\n  editNode: 'Editar nó',\r\n  editEdge: 'Editar aresta',\r\n  addDescription: 'Clique em um espaço em branco para adicionar um novo nó',\r\n  edgeDescription: 'Clique em um nó e arraste a aresta até outro nó para conectá-los',\r\n  editEdgeDescription: 'Clique nos pontos de controle e os arraste para um nó para conectá-los',\r\n  createEdgeError: 'Não foi possível linkar arestas a um cluster.',\r\n  deleteClusterError: 'Clusters não puderam ser removidos.',\r\n  editClusterError: 'Clusters não puderam ser editados.'\r\n};\r\nexports['pt-BR'] = exports['pt-br'];\r\nexports['pt_BR'] = exports['pt-br'];\r\nexports['pt_br'] = exports['pt-br'];\r\n\r\n// Russian\r\nexports['ru'] = {\r\n  edit: 'Редактировать',\r\n  del: 'Удалить выбранное',\r\n  back: 'Назад',\r\n  addNode: 'Добавить узел',\r\n  addEdge: 'Добавить ребро',\r\n  editNode: 'Редактировать узел',\r\n  editEdge: 'Редактировать ребро',\r\n  addDescription: 'Кликните в свободное место, чтобы добавить новый узел.',\r\n  edgeDescription: 'Кликните на узел и протяните ребро к другому узлу, чтобы соединить их.',\r\n  editEdgeDescription: 'Кликните на контрольные точки и перетащите их в узел, чтобы подключиться к нему.',\r\n  createEdgeError: 'Невозможно соединить ребра в кластер.',\r\n  deleteClusterError: 'Кластеры не могут быть удалены',\r\n  editClusterError: 'Кластеры недоступны для редактирования.'\r\n};\r\nexports['ru_RU'] = exports['ru'];\r\n\r\n// Chinese\r\nexports['cn'] = {\r\n  edit: '编辑',\r\n  del: '删除选定',\r\n  back: '返回',\r\n  addNode: '添加节点',\r\n  addEdge: '添加连接线',\r\n  editNode: '编辑节点',\r\n  editEdge: '编辑连接线',\r\n  addDescription: '单击空白处放置新节点。',\r\n  edgeDescription: '单击某个节点并将该连接线拖动到另一个节点以连接它们。',\r\n  editEdgeDescription: '单击控制节点并将它们拖到节点上连接。',\r\n  createEdgeError: '无法将连接线连接到群集。',\r\n  deleteClusterError: '无法删除群集。',\r\n  editClusterError: '无法编辑群集。'\r\n};\r\nexports['zh_CN'] = exports['cn'];\r\n","let util = require('../../util');\r\n\r\n/**\r\n * This class can store groups and options specific for groups.\r\n */\r\nclass Groups {\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor() {\r\n    this.clear();\r\n    this.defaultIndex = 0;\r\n    this.groupsArray = [];\r\n    this.groupIndex = 0;\r\n\r\n    this.defaultGroups = [\r\n      {border: \"#2B7CE9\", background: \"#97C2FC\", highlight: {border: \"#2B7CE9\", background: \"#D2E5FF\"}, hover: {border: \"#2B7CE9\", background: \"#D2E5FF\"}}, // 0: blue\r\n      {border: \"#FFA500\", background: \"#FFFF00\", highlight: {border: \"#FFA500\", background: \"#FFFFA3\"}, hover: {border: \"#FFA500\", background: \"#FFFFA3\"}}, // 1: yellow\r\n      {border: \"#FA0A10\", background: \"#FB7E81\", highlight: {border: \"#FA0A10\", background: \"#FFAFB1\"}, hover: {border: \"#FA0A10\", background: \"#FFAFB1\"}}, // 2: red\r\n      {border: \"#41A906\", background: \"#7BE141\", highlight: {border: \"#41A906\", background: \"#A1EC76\"}, hover: {border: \"#41A906\", background: \"#A1EC76\"}}, // 3: green\r\n      {border: \"#E129F0\", background: \"#EB7DF4\", highlight: {border: \"#E129F0\", background: \"#F0B3F5\"}, hover: {border: \"#E129F0\", background: \"#F0B3F5\"}}, // 4: magenta\r\n      {border: \"#7C29F0\", background: \"#AD85E4\", highlight: {border: \"#7C29F0\", background: \"#D3BDF0\"}, hover: {border: \"#7C29F0\", background: \"#D3BDF0\"}}, // 5: purple\r\n      {border: \"#C37F00\", background: \"#FFA807\", highlight: {border: \"#C37F00\", background: \"#FFCA66\"}, hover: {border: \"#C37F00\", background: \"#FFCA66\"}}, // 6: orange\r\n      {border: \"#4220FB\", background: \"#6E6EFD\", highlight: {border: \"#4220FB\", background: \"#9B9BFD\"}, hover: {border: \"#4220FB\", background: \"#9B9BFD\"}}, // 7: darkblue\r\n      {border: \"#FD5A77\", background: \"#FFC0CB\", highlight: {border: \"#FD5A77\", background: \"#FFD1D9\"}, hover: {border: \"#FD5A77\", background: \"#FFD1D9\"}}, // 8: pink\r\n      {border: \"#4AD63A\", background: \"#C2FABC\", highlight: {border: \"#4AD63A\", background: \"#E6FFE3\"}, hover: {border: \"#4AD63A\", background: \"#E6FFE3\"}}, // 9: mint\r\n\r\n      {border: \"#990000\", background: \"#EE0000\", highlight: {border: \"#BB0000\", background: \"#FF3333\"}, hover: {border: \"#BB0000\", background: \"#FF3333\"}}, // 10:bright red\r\n\r\n      {border: \"#FF6000\", background: \"#FF6000\", highlight: {border: \"#FF6000\", background: \"#FF6000\"}, hover: {border: \"#FF6000\", background: \"#FF6000\"}}, // 12: real orange\r\n      {border: \"#97C2FC\", background: \"#2B7CE9\", highlight: {border: \"#D2E5FF\", background: \"#2B7CE9\"}, hover: {border: \"#D2E5FF\", background: \"#2B7CE9\"}}, // 13: blue\r\n      {border: \"#399605\", background: \"#255C03\", highlight: {border: \"#399605\", background: \"#255C03\"}, hover: {border: \"#399605\", background: \"#255C03\"}}, // 14: green\r\n      {border: \"#B70054\", background: \"#FF007E\", highlight: {border: \"#B70054\", background: \"#FF007E\"}, hover: {border: \"#B70054\", background: \"#FF007E\"}}, // 15: magenta\r\n      {border: \"#AD85E4\", background: \"#7C29F0\", highlight: {border: \"#D3BDF0\", background: \"#7C29F0\"}, hover: {border: \"#D3BDF0\", background: \"#7C29F0\"}}, // 16: purple\r\n      {border: \"#4557FA\", background: \"#000EA1\", highlight: {border: \"#6E6EFD\", background: \"#000EA1\"}, hover: {border: \"#6E6EFD\", background: \"#000EA1\"}}, // 17: darkblue\r\n      {border: \"#FFC0CB\", background: \"#FD5A77\", highlight: {border: \"#FFD1D9\", background: \"#FD5A77\"}, hover: {border: \"#FFD1D9\", background: \"#FD5A77\"}}, // 18: pink\r\n      {border: \"#C2FABC\", background: \"#74D66A\", highlight: {border: \"#E6FFE3\", background: \"#74D66A\"}, hover: {border: \"#E6FFE3\", background: \"#74D66A\"}}, // 19: mint\r\n\r\n      {border: \"#EE0000\", background: \"#990000\", highlight: {border: \"#FF3333\", background: \"#BB0000\"}, hover: {border: \"#FF3333\", background: \"#BB0000\"}} // 20:bright red\r\n    ];\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      useDefaultGroups: true\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    let optionFields = ['useDefaultGroups'];\r\n\r\n    if (options !== undefined) {\r\n      for (let groupName in options) {\r\n        if (options.hasOwnProperty(groupName)) {\r\n          if (optionFields.indexOf(groupName) === -1) {\r\n            let group = options[groupName];\r\n            this.add(groupName, group);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  /**\r\n   * Clear all groups\r\n   */\r\n  clear() {\r\n    this.groups = {};\r\n    this.groupsArray = [];\r\n  }\r\n  \r\n  /**\r\n   * Get group options of a groupname.\r\n   * If groupname is not found, a new group may be created.\r\n   *\r\n   * @param {*}       groupname     Can be a number, string, Date, etc.\r\n   * @param {boolean} [shouldCreate=true] If true, create a new group\r\n   * @return {Object} The found or created group\r\n   */\r\n  get(groupname, shouldCreate = true) {\r\n    let group = this.groups[groupname];\r\n\r\n    if (group === undefined && shouldCreate) {\r\n      if (this.options.useDefaultGroups === false && this.groupsArray.length > 0) {\r\n        // create new group\r\n        let index = this.groupIndex % this.groupsArray.length;\r\n        this.groupIndex++;\r\n        group = {};\r\n        group.color = this.groups[this.groupsArray[index]];\r\n        this.groups[groupname] = group;\r\n      }\r\n      else {\r\n        // create new group\r\n        let index = this.defaultIndex % this.defaultGroups.length;\r\n        this.defaultIndex++;\r\n        group = {};\r\n        group.color = this.defaultGroups[index];\r\n        this.groups[groupname] = group;\r\n      }\r\n    }\r\n  \r\n    return group;\r\n  }\r\n  \r\n  /**\r\n   * Add a custom group style\r\n   * @param {string} groupName\r\n   * @param {Object} style       An object containing borderColor,\r\n   *                             backgroundColor, etc.\r\n   * @return {Object} group      The created group object\r\n   */\r\n  add(groupName, style) {\r\n    this.groups[groupName] = style;\r\n    this.groupsArray.push(groupName);\r\n    return style;\r\n  }\r\n}\r\n\r\nexport default Groups;\r\n","let util = require(\"../../util\");\r\nlet DataSet = require('../../DataSet');\r\nlet DataView = require('../../DataView');\r\nvar Node = require(\"./components/Node\").default;\r\n\r\n\r\n/**\r\n * Handler for Nodes\r\n */\r\nclass NodesHandler {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Images} images\r\n   * @param {Array.<Group>} groups\r\n   * @param {LayoutEngine} layoutEngine\r\n   */\r\n  constructor(body, images, groups, layoutEngine) {\r\n    this.body = body;\r\n    this.images = images;\r\n    this.groups = groups;\r\n    this.layoutEngine = layoutEngine;\r\n\r\n    // create the node API in the body container\r\n    this.body.functions.createNode = this.create.bind(this);\r\n\r\n    this.nodesListeners = {\r\n      add: (event, params) => { this.add(params.items); },\r\n      update: (event, params) => { this.update(params.items, params.data, params.oldData); },\r\n      remove: (event, params) => { this.remove(params.items); }\r\n    };\r\n\r\n    this.defaultOptions = {\r\n      borderWidth: 1,\r\n      borderWidthSelected: 2,\r\n      brokenImage: undefined,\r\n      color: {\r\n        border: '#2B7CE9',\r\n        background: '#97C2FC',\r\n        highlight: {\r\n          border: '#2B7CE9',\r\n          background: '#D2E5FF'\r\n        },\r\n        hover: {\r\n          border: '#2B7CE9',\r\n          background: '#D2E5FF'\r\n        }\r\n      },\r\n      fixed: {\r\n        x: false,\r\n        y: false\r\n      },\r\n      font: {\r\n        color: '#343434',\r\n        size: 14, // px\r\n        face: 'arial',\r\n        background: 'none',\r\n        strokeWidth: 0, // px\r\n        strokeColor: '#ffffff',\r\n        align: 'center',\r\n        vadjust: 0,\r\n        multi: false,\r\n        bold: {\r\n          mod: 'bold'\r\n        },\r\n        boldital: {\r\n          mod: 'bold italic'\r\n        },\r\n        ital: {\r\n          mod: 'italic'\r\n        },\r\n        mono: {\r\n          mod: '',\r\n          size: 15, // px\r\n          face: 'monospace',\r\n          vadjust: 2\r\n        }\r\n      },\r\n      group: undefined,\r\n      hidden: false,\r\n      icon: {\r\n        face: 'FontAwesome',  //'FontAwesome',\r\n        code: undefined,  //'\\uf007',\r\n        size: 50,  //50,\r\n        color: '#2B7CE9'   //'#aa00ff'\r\n      },\r\n      image: undefined, // --> URL\r\n      label: undefined,\r\n      labelHighlightBold: true,\r\n      level: undefined,\r\n      margin: {\r\n        top: 5,\r\n        right: 5,\r\n        bottom: 5,\r\n        left: 5\r\n      },\r\n      mass: 1,\r\n      physics: true,\r\n      scaling: {\r\n        min: 10,\r\n        max: 30,\r\n        label: {\r\n          enabled: false,\r\n          min: 14,\r\n          max: 30,\r\n          maxVisible: 30,\r\n          drawThreshold: 5\r\n        },\r\n        customScalingFunction: function (min, max, total, value) {\r\n          if (max === min) {\r\n            return 0.5;\r\n          }\r\n          else {\r\n            let scale = 1 / (max - min);\r\n            return Math.max(0, (value - min) * scale);\r\n          }\r\n        }\r\n      },\r\n      shadow: {\r\n        enabled: false,\r\n        color: 'rgba(0,0,0,0.5)',\r\n        size: 10,\r\n        x: 5,\r\n        y: 5\r\n      },\r\n      shape: 'ellipse',\r\n      shapeProperties: {\r\n        borderDashes: false, // only for borders\r\n        borderRadius: 6,     // only for box shape\r\n        interpolation: true,  // only for image and circularImage shapes\r\n        useImageSize: false,  // only for image and circularImage shapes\r\n        useBorderWithImage: false  // only for image shape\r\n      },\r\n      size: 25,\r\n      title: undefined,\r\n      value: undefined,\r\n      x: undefined,\r\n      y: undefined\r\n    };\r\n\r\n    // Protect from idiocy\r\n    if (this.defaultOptions.mass <= 0) {\r\n      throw 'Internal error: mass in defaultOptions of NodesHandler may not be zero or negative';\r\n    }\r\n\r\n    this.options = util.bridgeObject(this.defaultOptions);\r\n\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    // refresh the nodes. Used when reverting from hierarchical layout\r\n    this.body.emitter.on('refreshNodes', this.refresh.bind(this));\r\n    this.body.emitter.on('refresh', this.refresh.bind(this));\r\n    this.body.emitter.on('destroy', () => {\r\n      util.forEach(this.nodesListeners, (callback, event) => {\r\n        if (this.body.data.nodes)\r\n          this.body.data.nodes.off(event, callback);\r\n      });\r\n      delete this.body.functions.createNode;\r\n      delete this.nodesListeners.add;\r\n      delete this.nodesListeners.update;\r\n      delete this.nodesListeners.remove;\r\n      delete this.nodesListeners;\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      Node.parseOptions(this.options, options);\r\n\r\n      // update the shape in all nodes\r\n      if (options.shape !== undefined) {\r\n        for (let nodeId in this.body.nodes) {\r\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n            this.body.nodes[nodeId].updateShape();\r\n          }\r\n        }\r\n      }\r\n\r\n      // update the font in all nodes\r\n      if (options.font !== undefined) {\r\n        for (let nodeId in this.body.nodes) {\r\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n            this.body.nodes[nodeId].updateLabelModule();\r\n            this.body.nodes[nodeId].needsRefresh();\r\n          }\r\n        }\r\n      }\r\n\r\n      // update the shape size in all nodes\r\n      if (options.size !== undefined) {\r\n        for (let nodeId in this.body.nodes) {\r\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n            this.body.nodes[nodeId].needsRefresh();\r\n          }\r\n        }\r\n      }\r\n\r\n      // update the state of the variables if needed\r\n      if (options.hidden !== undefined || options.physics !== undefined) {\r\n        this.body.emitter.emit('_dataChanged');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set a data set with nodes for the network\r\n   * @param {Array | DataSet | DataView} nodes         The data containing the nodes.\r\n   * @param {boolean} [doNotEmit=false]\r\n   * @private\r\n   */\r\n  setData(nodes, doNotEmit = false) {\r\n    let oldNodesData = this.body.data.nodes;\r\n\r\n    if (nodes instanceof DataSet || nodes instanceof DataView) {\r\n      this.body.data.nodes = nodes;\r\n    }\r\n    else if (Array.isArray(nodes)) {\r\n      this.body.data.nodes = new DataSet();\r\n      this.body.data.nodes.add(nodes);\r\n    }\r\n    else if (!nodes) {\r\n      this.body.data.nodes = new DataSet();\r\n    }\r\n    else {\r\n      throw new TypeError('Array or DataSet expected');\r\n    }\r\n\r\n    if (oldNodesData) {\r\n      // unsubscribe from old dataset\r\n      util.forEach(this.nodesListeners, function (callback, event) {\r\n        oldNodesData.off(event, callback);\r\n      });\r\n    }\r\n\r\n    // remove drawn nodes\r\n    this.body.nodes = {};\r\n\r\n    if (this.body.data.nodes) {\r\n      // subscribe to new dataset\r\n      let me = this;\r\n      util.forEach(this.nodesListeners, function (callback, event) {\r\n        me.body.data.nodes.on(event, callback);\r\n      });\r\n\r\n      // draw all new nodes\r\n      let ids = this.body.data.nodes.getIds();\r\n      this.add(ids, true);\r\n    }\r\n\r\n    if (doNotEmit === false) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add nodes\r\n   * @param {number[] | string[]} ids\r\n   * @param {boolean} [doNotEmit=false]\r\n   * @private\r\n   */\r\n  add(ids, doNotEmit = false) {\r\n    let id;\r\n    let newNodes = [];\r\n    for (let i = 0; i < ids.length; i++) {\r\n      id = ids[i];\r\n      let properties = this.body.data.nodes.get(id);\r\n      let node = this.create(properties);\r\n      newNodes.push(node);\r\n      this.body.nodes[id] = node; // note: this may replace an existing node\r\n    }\r\n\r\n    this.layoutEngine.positionInitially(newNodes);\r\n\r\n    if (doNotEmit === false) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update existing nodes, or create them when not yet existing\r\n   * @param {number[] | string[]} ids id's of changed nodes\r\n   * @param {Array} changedData array with changed data\r\n   * @param {Array|undefined} oldData optional; array with previous data\r\n   * @private\r\n   */\r\n  update(ids, changedData, oldData) {\r\n    let nodes = this.body.nodes;\r\n    let dataChanged = false;\r\n    for (let i = 0; i < ids.length; i++) {\r\n      let id = ids[i];\r\n      let node = nodes[id];\r\n      let data = changedData[i];\r\n      if (node !== undefined) {\r\n        // update node\r\n        if (node.setOptions(data)) {\r\n          dataChanged = true;\r\n        }\r\n      }\r\n      else {\r\n        dataChanged = true;\r\n        // create node\r\n        node = this.create(data);\r\n        nodes[id] = node;\r\n      }\r\n    }\r\n\r\n    if (!dataChanged && oldData !== undefined) {\r\n      // Check for any changes which should trigger a layout recalculation\r\n      // For now, this is just 'level' for hierarchical layout\r\n      // Assumption: old and new data arranged in same order; at time of writing, this holds.\r\n      dataChanged = changedData.some(function(newValue, index) {\r\n        let oldValue = oldData[index];\r\n        return (oldValue && oldValue.level !== newValue.level);\r\n      });\r\n    }\r\n\r\n    if (dataChanged === true) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"_dataUpdated\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove existing nodes. If nodes do not exist, the method will just ignore it.\r\n   * @param {number[] | string[]} ids\r\n   * @private\r\n   */\r\n  remove(ids) {\r\n    let nodes = this.body.nodes;\r\n\r\n    for (let i = 0; i < ids.length; i++) {\r\n      let id = ids[i];\r\n      delete nodes[id];\r\n    }\r\n\r\n    this.body.emitter.emit(\"_dataChanged\");\r\n  }\r\n\r\n\r\n  /**\r\n   * create a node\r\n   * @param {Object} properties\r\n   * @param {class} [constructorClass=Node.default]\r\n   * @returns {*}\r\n   */\r\n  create(properties, constructorClass = Node) {\r\n    return new constructorClass(properties, this.body, this.images, this.groups, this.options, this.defaultOptions)\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} [clearPositions=false]\r\n   */\r\n  refresh(clearPositions = false) {\r\n    util.forEach(this.body.nodes, (node, nodeId) => {\r\n      let data = this.body.data.nodes.get(nodeId);\r\n      if (data !== undefined) {\r\n        if (clearPositions === true) {\r\n          node.setOptions({x:null, y:null});\r\n        }\r\n        node.setOptions({ fixed: false });\r\n        node.setOptions(data);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the positions of the nodes.\r\n   * @param {Array.<Node.id>|String} [ids]  --> optional, can be array of nodeIds, can be string\r\n   * @returns {{}}\r\n   */\r\n  getPositions(ids) {\r\n    let dataArray = {};\r\n    if (ids !== undefined) {\r\n      if (Array.isArray(ids) === true) {\r\n        for (let i = 0; i < ids.length; i++) {\r\n          if (this.body.nodes[ids[i]] !== undefined) {\r\n            let node = this.body.nodes[ids[i]];\r\n            dataArray[ids[i]] = { x: Math.round(node.x), y: Math.round(node.y) };\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if (this.body.nodes[ids] !== undefined) {\r\n          let node = this.body.nodes[ids];\r\n          dataArray[ids] = { x: Math.round(node.x), y: Math.round(node.y) };\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n        let node = this.body.nodes[this.body.nodeIndices[i]];\r\n        dataArray[this.body.nodeIndices[i]] = { x: Math.round(node.x), y: Math.round(node.y) };\r\n      }\r\n    }\r\n    return dataArray;\r\n  }\r\n\r\n\r\n  /**\r\n   * Load the XY positions of the nodes into the dataset.\r\n   */\r\n  storePositions() {\r\n    // todo: add support for clusters and hierarchical.\r\n    let dataArray = [];\r\n    var dataset = this.body.data.nodes.getDataSet();\r\n\r\n    for (let nodeId in dataset._data) {\r\n      if (dataset._data.hasOwnProperty(nodeId)) {\r\n        let node = this.body.nodes[nodeId];\r\n        if (dataset._data[nodeId].x != Math.round(node.x) || dataset._data[nodeId].y != Math.round(node.y)) {\r\n          dataArray.push({ id: node.id, x: Math.round(node.x), y: Math.round(node.y) });\r\n        }\r\n      }\r\n    }\r\n    dataset.update(dataArray);\r\n  }\r\n\r\n  /**\r\n   * get the bounding box of a node.\r\n   * @param {Node.id} nodeId\r\n   * @returns {j|*}\r\n   */\r\n  getBoundingBox(nodeId) {\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      return this.body.nodes[nodeId].shape.boundingBox;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the Ids of nodes connected to this node.\r\n   * @param {Node.id} nodeId\r\n   * @param {'to'|'from'|undefined} direction values 'from' and 'to' select respectively parent and child nodes only.\r\n   *                                          Any other value returns both parent and child nodes.\r\n   * @returns {Array}\r\n   */\r\n  getConnectedNodes(nodeId, direction) {\r\n    let nodeList = [];\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      let node = this.body.nodes[nodeId];\r\n      let nodeObj = {}; // used to quickly check if node already exists\r\n      for (let i = 0; i < node.edges.length; i++) {\r\n        let edge = node.edges[i];\r\n        if (direction !== 'to' && edge.toId == node.id) { // these are double equals since ids can be numeric or string\r\n          if (nodeObj[edge.fromId] === undefined) {\r\n            nodeList.push(edge.fromId);\r\n            nodeObj[edge.fromId] = true;\r\n          }\r\n        }\r\n        else if (direction !== 'from' && edge.fromId == node.id) { // these are double equals since ids can be numeric or string\r\n          if (nodeObj[edge.toId] === undefined) {\r\n            nodeList.push(edge.toId);\r\n            nodeObj[edge.toId] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return nodeList;\r\n  }\r\n\r\n  /**\r\n   * Get the ids of the edges connected to this node.\r\n   * @param {Node.id} nodeId\r\n   * @returns {*}\r\n   */\r\n  getConnectedEdges(nodeId) {\r\n    let edgeList = [];\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      let node = this.body.nodes[nodeId];\r\n      for (let i = 0; i < node.edges.length; i++) {\r\n        edgeList.push(node.edges[i].id)\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"NodeId provided for getConnectedEdges does not exist. Provided: \", nodeId);\r\n    }\r\n    return edgeList;\r\n  }\r\n\r\n\r\n  /**\r\n   * Move a node.\r\n   *\r\n   * @param {Node.id} nodeId\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  moveNode(nodeId, x, y) {\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      this.body.nodes[nodeId].x = Number(x);\r\n      this.body.nodes[nodeId].y = Number(y);\r\n      setTimeout(() => {this.body.emitter.emit(\"startSimulation\")},0);\r\n    }\r\n    else {\r\n      console.log(\"Node id supplied to moveNode does not exist. Provided: \", nodeId);\r\n    }\r\n  }\r\n}\r\n\r\nexport default NodesHandler;\r\n","let LabelAccumulator = require('./LabelAccumulator').default;\r\nlet ComponentUtil = require('./ComponentUtil').default;\r\n\r\n\r\n/**\r\n * Helper class for Label which explodes the label text into lines and blocks within lines\r\n *\r\n * @private\r\n */\r\nclass LabelSplitter {\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} ctx Canvas rendering context\r\n   * @param {Label} parent reference to the Label instance using current instance\r\n   * @param {boolean} selected \r\n   * @param {boolean} hover\r\n   */\r\n  constructor(ctx, parent, selected, hover) {\r\n    this.ctx = ctx;\r\n    this.parent = parent;\r\n\r\n\r\n    /**\r\n     * Callback to determine text width; passed to LabelAccumulator instance\r\n     *\r\n     * @param  {String} text string to determine width of\r\n     * @param  {String} mod  font type to use for this text\r\n     * @return {Object} { width, values} width in pixels and font attributes\r\n     */\r\n    let textWidth = (text, mod) => {\r\n      if (text === undefined) return 0;\r\n\r\n      // TODO: This can be done more efficiently with caching\r\n      let values = this.parent.getFormattingValues(ctx, selected, hover, mod);\r\n\r\n      let width = 0;\r\n      if (text !== '') {\r\n        // NOTE: The following may actually be *incorrect* for the mod fonts!\r\n        //       This returns the size with a regular font, bold etc. may\r\n        //       have different sizes.\r\n        let measure = this.ctx.measureText(text);\r\n        width = measure.width;\r\n      }\r\n\r\n      return {width, values: values};\r\n    };\r\n\r\n\r\n    this.lines = new LabelAccumulator(textWidth);\r\n  }\r\n\r\n\r\n  /**\r\n   * Split passed text of a label into lines and blocks.\r\n   *\r\n   * # NOTE\r\n   *\r\n   * The handling of spacing is option dependent:\r\n   *\r\n   * - if `font.multi : false`, all spaces are retained\r\n   * - if `font.multi : true`, every sequence of spaces is compressed to a single space\r\n   *\r\n   * This might not be the best way to do it, but this is as it has been working till now.\r\n   * In order not to break existing functionality, for the time being this behaviour will\r\n   * be retained in any code changes. \r\n   *\r\n   * @param {string} text  text to split\r\n   * @returns {Array<line>}\r\n   */\r\n  process(text) {\r\n    if (!ComponentUtil.isValidLabel(text)) {\r\n      return this.lines.finalize();\r\n    }\r\n\r\n    var font = this.parent.fontOptions;\r\n\r\n    // Normalize the end-of-line's to a single representation - order important\r\n    text = text.replace(/\\r\\n/g, '\\n');  // Dos EOL's\r\n    text = text.replace(/\\r/g, '\\n');        // Mac EOL's\r\n\r\n    // Note that at this point, there can be no \\r's in the text.\r\n    // This is used later on splitStringIntoLines() to split multifont texts.\r\n\r\n    let nlLines = String(text).split('\\n');\r\n    let lineCount = nlLines.length;\r\n\r\n    if (font.multi) {\r\n      // Multi-font case: styling tags active\r\n      for (let i = 0; i < lineCount; i++) {\r\n        let blocks = this.splitBlocks(nlLines[i], font.multi);\r\n        // Post: Sequences of tabs and spaces are reduced to single space\r\n\r\n        if (blocks === undefined) continue;\r\n\r\n        if (blocks.length === 0) {\r\n          this.lines.newLine(\"\");\r\n          continue;\r\n        }\r\n\r\n        if (font.maxWdt > 0) {\r\n          // widthConstraint.maximum defined\r\n          //console.log('Running widthConstraint multi, max: ' + this.fontOptions.maxWdt);\r\n          for (let j = 0; j < blocks.length; j++) {\r\n            let mod  = blocks[j].mod;\r\n            let text = blocks[j].text;\r\n            this.splitStringIntoLines(text, mod, true);\r\n          }\r\n        } else {\r\n          // widthConstraint.maximum NOT defined\r\n          for (let j = 0; j < blocks.length; j++) {\r\n            let mod  = blocks[j].mod;\r\n            let text = blocks[j].text;\r\n            this.lines.append(text, mod); \r\n          }\r\n        }\r\n\r\n        this.lines.newLine();\r\n      }\r\n    } else {\r\n      // Single-font case\r\n      if (font.maxWdt > 0) {\r\n        // widthConstraint.maximum defined\r\n        // console.log('Running widthConstraint normal, max: ' + this.fontOptions.maxWdt);\r\n        for (let i = 0; i < lineCount; i++) {\r\n          this.splitStringIntoLines(nlLines[i]);\r\n        }\r\n      } else {\r\n        // widthConstraint.maximum NOT defined\r\n        for (let i = 0; i < lineCount; i++) {\r\n          this.lines.newLine(nlLines[i]); \r\n        }\r\n      }\r\n    }\r\n   \r\n    return this.lines.finalize();\r\n  }\r\n\r\n\r\n  /**\r\n   * normalize the markup system\r\n   *\r\n   * @param {boolean|'md'|'markdown'|'html'} markupSystem\r\n   * @returns {string}\r\n   */\r\n  decodeMarkupSystem(markupSystem) {\r\n    let system = 'none';\r\n    if (markupSystem === 'markdown' || markupSystem === 'md') {\r\n      system = 'markdown';\r\n    } else if (markupSystem === true || markupSystem === 'html') {\r\n      system = 'html'\r\n    }\r\n    return system;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {string} text\r\n   * @returns {Array}\r\n   */\r\n  splitHtmlBlocks(text) {\r\n    let blocks = [];\r\n\r\n    // TODO: consolidate following + methods/closures with splitMarkdownBlocks()\r\n    // NOTE: sequences of tabs and spaces are reduced to single space; scan usage of `this.spacing` within method\r\n    let s = {\r\n      bold: false,\r\n      ital: false,\r\n      mono: false,\r\n      spacing: false,\r\n      position: 0,\r\n      buffer: \"\",\r\n      modStack: []\r\n    };\r\n\r\n    s.mod = function() {\r\n      return (this.modStack.length === 0) ? 'normal' : this.modStack[0];\r\n    };\r\n\r\n    s.modName = function() {\r\n      if (this.modStack.length === 0)\r\n        return 'normal';\r\n      else if (this.modStack[0] === 'mono')\r\n        return 'mono';\r\n      else {\r\n        if (s.bold && s.ital) {\r\n          return 'boldital';\r\n        } else if (s.bold) {\r\n          return 'bold';\r\n        } else if (s.ital) {\r\n          return 'ital';\r\n        }\r\n      }\r\n    };\r\n\r\n    s.emitBlock = function(override=false) {  // eslint-disable-line no-unused-vars\r\n      if (this.spacing) {\r\n        this.add(\" \");\r\n        this.spacing = false;\r\n      }\r\n      if (this.buffer.length > 0) {\r\n        blocks.push({ text: this.buffer, mod: this.modName() });\r\n        this.buffer = \"\";\r\n      }\r\n    };\r\n\r\n    s.add = function(text) {\r\n      if (text === \" \") {\r\n        s.spacing = true;\r\n      }\r\n      if (s.spacing) {\r\n        this.buffer += \" \";\r\n        this.spacing = false;\r\n      }\r\n      if (text != \" \") {\r\n        this.buffer += text;\r\n      }\r\n    };\r\n\r\n    while (s.position < text.length) {\r\n      let ch = text.charAt(s.position);\r\n      if (/[ \\t]/.test(ch)) {\r\n        if (!s.mono) {\r\n          s.spacing = true;\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n      } else if (/</.test(ch)) {\r\n        if (!s.mono && !s.bold && /<b>/.test(text.substr(s.position,3))) {\r\n          s.emitBlock();\r\n          s.bold = true;\r\n          s.modStack.unshift(\"bold\");\r\n          s.position += 2;\r\n        } else if (!s.mono && !s.ital && /<i>/.test(text.substr(s.position,3))) {\r\n          s.emitBlock();\r\n          s.ital = true;\r\n          s.modStack.unshift(\"ital\");\r\n          s.position += 2;\r\n        } else if (!s.mono && /<code>/.test(text.substr(s.position,6))) {\r\n          s.emitBlock();\r\n          s.mono = true;\r\n          s.modStack.unshift(\"mono\");\r\n          s.position += 5;\r\n        } else if (!s.mono && (s.mod() === 'bold') && /<\\/b>/.test(text.substr(s.position,4))) {\r\n          s.emitBlock();\r\n          s.bold = false;\r\n          s.modStack.shift();\r\n          s.position += 3;\r\n        } else if (!s.mono && (s.mod() === 'ital') && /<\\/i>/.test(text.substr(s.position,4))) {\r\n          s.emitBlock();\r\n          s.ital = false;\r\n          s.modStack.shift();\r\n          s.position += 3;\r\n        } else if ((s.mod() === 'mono') && /<\\/code>/.test(text.substr(s.position,7))) {\r\n          s.emitBlock();\r\n          s.mono = false;\r\n          s.modStack.shift();\r\n          s.position += 6;\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n      } else if (/&/.test(ch)) {\r\n        if (/&lt;/.test(text.substr(s.position,4))) {\r\n          s.add(\"<\");\r\n          s.position += 3;\r\n        } else if (/&amp;/.test(text.substr(s.position,5))) {\r\n          s.add(\"&\");\r\n          s.position += 4;\r\n        } else {\r\n          s.add(\"&\");\r\n        }\r\n      } else {\r\n        s.add(ch);\r\n      }\r\n      s.position++\r\n    }\r\n    s.emitBlock();\r\n    return blocks;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {string} text\r\n   * @returns {Array}\r\n   */\r\n  splitMarkdownBlocks(text) {\r\n    let blocks = [];\r\n\r\n    // TODO: consolidate following + methods/closures with splitHtmlBlocks()\r\n    // NOTE: sequences of tabs and spaces are reduced to single space; scan usage of `this.spacing` within method\r\n    let s = {\r\n      bold: false,\r\n      ital: false,\r\n      mono: false,\r\n      beginable: true,\r\n      spacing: false,\r\n      position: 0,\r\n      buffer: \"\",\r\n      modStack: []\r\n    };\r\n\r\n    s.mod = function() {\r\n      return (this.modStack.length === 0) ? 'normal' : this.modStack[0];\r\n    };\r\n\r\n    s.modName = function() {\r\n      if (this.modStack.length === 0)\r\n        return 'normal';\r\n      else if (this.modStack[0] === 'mono')\r\n        return 'mono';\r\n      else {\r\n        if (s.bold && s.ital) {\r\n          return 'boldital';\r\n        } else if (s.bold) {\r\n          return 'bold';\r\n        } else if (s.ital) {\r\n          return 'ital';\r\n        }\r\n      }\r\n    };\r\n\r\n    s.emitBlock = function(override=false) {  // eslint-disable-line no-unused-vars\r\n      if (this.spacing) {\r\n        this.add(\" \");\r\n        this.spacing = false;\r\n      }\r\n      if (this.buffer.length > 0) {\r\n        blocks.push({ text: this.buffer, mod: this.modName() });\r\n        this.buffer = \"\";\r\n      }\r\n    };\r\n\r\n    s.add = function(text) {\r\n      if (text === \" \") {\r\n        s.spacing = true;\r\n      }\r\n      if (s.spacing) {\r\n        this.buffer += \" \";\r\n        this.spacing = false;\r\n      }\r\n      if (text != \" \") {\r\n        this.buffer += text;\r\n      }\r\n    };\r\n\r\n    while (s.position < text.length) {\r\n      let ch = text.charAt(s.position);\r\n      if (/[ \\t]/.test(ch)) {\r\n        if (!s.mono) {\r\n          s.spacing = true;\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n        s.beginable = true\r\n      } else if (/\\\\/.test(ch)) {\r\n        if (s.position < text.length+1) {\r\n          s.position++;\r\n          ch = text.charAt(s.position);\r\n          if (/ \\t/.test(ch)) {\r\n            s.spacing = true;\r\n          } else {\r\n            s.add(ch);\r\n            s.beginable = false;\r\n          }\r\n        }\r\n      } else if (!s.mono && !s.bold && (s.beginable || s.spacing) && /\\*/.test(ch)) {\r\n        s.emitBlock();\r\n        s.bold = true;\r\n        s.modStack.unshift(\"bold\");\r\n      } else if (!s.mono && !s.ital && (s.beginable || s.spacing) && /\\_/.test(ch)) {\r\n        s.emitBlock();\r\n        s.ital = true;\r\n        s.modStack.unshift(\"ital\");\r\n      } else if (!s.mono && (s.beginable || s.spacing) && /`/.test(ch)) {\r\n        s.emitBlock();\r\n        s.mono = true;\r\n        s.modStack.unshift(\"mono\");\r\n      } else if (!s.mono && (s.mod() === \"bold\") && /\\*/.test(ch)) {\r\n        if ((s.position === text.length-1) || /[.,_` \\t\\n]/.test(text.charAt(s.position+1))) {\r\n          s.emitBlock();\r\n          s.bold = false;\r\n          s.modStack.shift();\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n      } else if (!s.mono && (s.mod() === \"ital\") && /\\_/.test(ch)) {\r\n        if ((s.position === text.length-1) || /[.,*` \\t\\n]/.test(text.charAt(s.position+1))) {\r\n          s.emitBlock();\r\n          s.ital = false;\r\n          s.modStack.shift();\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n      } else if (s.mono && (s.mod() === \"mono\") && /`/.test(ch)) {\r\n        if ((s.position === text.length-1) || (/[.,*_ \\t\\n]/.test(text.charAt(s.position+1)))) {\r\n          s.emitBlock();\r\n          s.mono = false;\r\n          s.modStack.shift();\r\n        } else {\r\n          s.add(ch);\r\n        }\r\n      } else {\r\n        s.add(ch);\r\n        s.beginable = false;\r\n      }\r\n      s.position++\r\n    }\r\n    s.emitBlock();\r\n    return blocks;\r\n  }\r\n\r\n\r\n  /**\r\n   * Explodes a piece of text into single-font blocks using a given markup\r\n   *\r\n   * @param {string} text\r\n   * @param {boolean|'md'|'markdown'|'html'} markupSystem\r\n   * @returns {Array.<{text: string, mod: string}>}\r\n   * @private\r\n   */\r\n  splitBlocks(text, markupSystem) {\r\n    let system = this.decodeMarkupSystem(markupSystem);\r\n    if (system === 'none') {\r\n      return [{\r\n        text: text,\r\n        mod: 'normal'\r\n      }]\r\n    } else if (system === 'markdown') {\r\n      return this.splitMarkdownBlocks(text);\r\n    } else if (system === 'html') {\r\n      return this.splitHtmlBlocks(text);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @returns {boolean} true if text length over the current max with\r\n   * @private\r\n   */\r\n  overMaxWidth(text) {\r\n    let width = this.ctx.measureText(text).width;\r\n    return (this.lines.curWidth() + width > this.parent.fontOptions.maxWdt);\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine the longest part of the sentence which still fits in the \r\n   * current max width.\r\n   * \r\n   * @param {Array} words  Array of strings signifying a text lines\r\n   * @return {number}      index of first item in string making string go over max\r\n   * @private\r\n   */\r\n  getLongestFit(words) {\r\n    let text = '';\r\n    let w = 0;\r\n\r\n    while (w < words.length) {\r\n      let pre = (text === '') ? '' : ' ';\r\n      let newText = text + pre + words[w];\r\n\r\n      if (this.overMaxWidth(newText)) break;\r\n      text = newText;\r\n      w++;\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine the longest part of the string which still fits in the\r\n   * current max width.\r\n   * \r\n   * @param {Array} words Array of strings signifying a text lines\r\n   * @return {number} index of first item in string making string go over max\r\n   */\r\n   getLongestFitWord(words) {\r\n     let w = 0;\r\n\r\n     while (w < words.length) {\r\n       if (this.overMaxWidth(words.slice(0,w))) break;\r\n       w++;\r\n     }\r\n\r\n     return w;\r\n  }\r\n\r\n\r\n  /**\r\n   * Split the passed text into lines, according to width constraint (if any).\r\n   * \r\n   * The method assumes that the input string is a single line, i.e. without lines break.\r\n   *\r\n   * This method retains spaces, if still present (case `font.multi: false`).\r\n   * A space which falls on an internal line break, will be replaced by a newline.\r\n   * There is no special handling of tabs; these go along with the flow.\r\n   * \r\n   * @param {string} str\r\n   * @param {string} [mod='normal']\r\n   * @param {boolean} [appendLast=false]\r\n   * @private\r\n   */\r\n  splitStringIntoLines(str, mod = 'normal', appendLast = false) {\r\n    // Still-present spaces are relevant, retain them\r\n    str = str.replace(/^( +)/g, '$1\\r');\r\n    str = str.replace(/([^\\r][^ ]*)( +)/g, '$1\\r$2\\r');\r\n    let words = str.split('\\r');\r\n\r\n    while (words.length > 0) {\r\n      let w = this.getLongestFit(words);\r\n\r\n      if (w === 0) {\r\n        // Special case: the first word is already larger than the max width.\r\n        let word = words[0];\r\n\r\n        // Break the word to the largest part that fits the line\r\n        let x = this.getLongestFitWord(word);\r\n        this.lines.newLine(word.slice(0, x), mod);\r\n\r\n        // Adjust the word, so that the rest will be done next iteration\r\n        words[0] = word.slice(x);\r\n      } else {\r\n        // skip any space that is replaced by a newline\r\n        let newW = w;\r\n        if (words[w - 1] === ' ') {\r\n          w--;\r\n        } else if (words[newW] === ' ') {\r\n          newW++;\r\n        }\r\n\r\n        let text = words.slice(0, w).join(\"\");\r\n\r\n        if (w == words.length && appendLast) {\r\n          this.lines.append(text, mod); \r\n        } else {\r\n          this.lines.newLine(text, mod); \r\n        }\r\n\r\n        // Adjust the word, so that the rest will be done next iteration\r\n        words = words.slice(newW);\r\n      }\r\n    }\r\n  }\r\n} \r\n\r\nexport default LabelSplitter;\r\n","/**\r\n * Callback to determine text dimensions, using the parent label settings.\r\n * @callback MeasureText\r\n * @param {text} text\r\n * @param {text} mod\r\n * @return {Object} { width, values} width in pixels and font attributes\r\n */\r\n\r\n\r\n/**\r\n * Helper class for Label which collects results of splitting labels into lines and blocks.\r\n *\r\n * @private\r\n */\r\nclass LabelAccumulator {\r\n\r\n  /**\r\n   * @param {MeasureText} measureText\r\n   */\r\n  constructor(measureText) {\r\n    this.measureText = measureText;\r\n    this.current = 0;\r\n    this.width   = 0;\r\n    this.height  = 0;\r\n    this.lines   = [];\r\n  }\r\n\r\n\r\n  /**\r\n   * Append given text to the given line.\r\n   *\r\n   * @param {number}  l    index of line to add to\r\n   * @param {string}  text string to append to line\r\n   * @param {'bold'|'ital'|'boldital'|'mono'|'normal'} [mod='normal']\r\n   * @private\r\n   */\r\n  _add(l, text, mod = 'normal') { \r\n\r\n    if (this.lines[l] === undefined) {\r\n      this.lines[l] = {\r\n        width : 0,\r\n        height: 0,\r\n        blocks: []\r\n      };\r\n    }\r\n\r\n    // We still need to set a block for undefined and empty texts, hence return at this point\r\n    // This is necessary because we don't know at this point if we're at the\r\n    // start of an empty line or not.\r\n    // To compensate, empty blocks are removed in `finalize()`.\r\n    //\r\n    // Empty strings should still have a height\r\n    let tmpText = text;\r\n    if (text === undefined || text === \"\") tmpText = \" \";\r\n\r\n    // Determine width and get the font properties\r\n    let result = this.measureText(tmpText, mod);\r\n    let block = Object.assign({}, result.values);\r\n    block.text  = text;\r\n    block.width = result.width;\r\n    block.mod   = mod;\r\n\r\n    if (text === undefined || text === \"\") {\r\n      block.width = 0;\r\n    }\r\n\r\n    this.lines[l].blocks.push(block);\r\n\r\n    // Update the line width. We need this for determining if a string goes over max width\r\n    this.lines[l].width += block.width;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the width in pixels of the current line.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  curWidth() {\r\n    let line = this.lines[this.current];\r\n    if (line === undefined) return 0;\r\n\r\n    return line.width;\r\n  }\r\n\r\n\r\n   /**\r\n    * Add text in block to current line\r\n    *\r\n    * @param {string} text\r\n    * @param {'bold'|'ital'|'boldital'|'mono'|'normal'} [mod='normal']\r\n    */\r\n   append(text, mod = 'normal') { \r\n     this._add(this.current, text, mod);\r\n   }\r\n\r\n\r\n  /**\r\n   * Add text in block to current line and start a new line\r\n   *\r\n   * @param {string} text\r\n   * @param {'bold'|'ital'|'boldital'|'mono'|'normal'} [mod='normal']\r\n   */\r\n  newLine(text, mod = 'normal') {\r\n    this._add(this.current, text, mod);\r\n    this.current++;\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine and set the heights of all the lines currently contained in this instance\r\n   *\r\n   * Note that width has already been set.\r\n   * \r\n   * @private\r\n   */\r\n  determineLineHeights() {\r\n    for (let k = 0; k < this.lines.length; k++) {\r\n      let line   = this.lines[k];\r\n\r\n      // Looking for max height of blocks in line\r\n      let height = 0;\r\n\r\n      if (line.blocks !== undefined) {  // Can happen if text contains e.g. '\\n '\r\n        for (let l = 0; l < line.blocks.length; l++) {\r\n          let block =  line.blocks[l];\r\n\r\n          if (height < block.height) {\r\n            height = block.height;\r\n          }\r\n        }\r\n      }\r\n  \r\n      line.height = height;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine the full size of the label text, as determined by current lines and blocks\r\n   * \r\n   * @private\r\n   */\r\n  determineLabelSize() {\r\n    let width  = 0;\r\n    let height = 0;\r\n    for (let k = 0; k < this.lines.length; k++) {\r\n      let line   = this.lines[k];\r\n\r\n      if (line.width > width) {\r\n        width = line.width;\r\n      }\r\n      height += line.height;\r\n    }\r\n\r\n    this.width  = width;\r\n    this.height = height;\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove all empty blocks and empty lines we don't need\r\n   * \r\n   * This must be done after the width/height determination,\r\n   * so that these are set properly for processing here.\r\n   *\r\n   * @returns {Array<Line>} Lines with empty blocks (and some empty lines) removed\r\n   * @private\r\n   */\r\n  removeEmptyBlocks() {\r\n    let tmpLines = [];\r\n    for (let k = 0; k < this.lines.length; k++) {\r\n      let line   = this.lines[k];\r\n\r\n      // Note: an empty line in between text has width zero but is still relevant to layout.\r\n      // So we can't use width for testing empty line here\r\n      if (line.blocks.length === 0) continue;\r\n\r\n      // Discard final empty line always\r\n      if(k === this.lines.length - 1) {\r\n        if (line.width === 0) continue;\r\n      }\r\n\r\n      let tmpLine = {};\r\n      Object.assign(tmpLine, line);\r\n      tmpLine.blocks = [];\r\n\r\n      let firstEmptyBlock;\r\n      let tmpBlocks = []\r\n      for (let l = 0; l < line.blocks.length; l++) {\r\n        let block = line.blocks[l];\r\n        if (block.width !== 0) {\r\n          tmpBlocks.push(block);\r\n        } else {\r\n          if (firstEmptyBlock === undefined) {\r\n            firstEmptyBlock = block;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Ensure that there is *some* text present\r\n      if (tmpBlocks.length === 0 && firstEmptyBlock !== undefined) {\r\n        tmpBlocks.push(firstEmptyBlock);\r\n      }\r\n\r\n      tmpLine.blocks = tmpBlocks;\r\n\r\n      tmpLines.push(tmpLine);\r\n    }\r\n\r\n    return tmpLines;\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the sizes for all lines and the whole thing.\r\n   *\r\n   * @returns {{width: (number|*), height: (number|*), lines: Array}}\r\n   */\r\n  finalize() {\r\n    //console.log(JSON.stringify(this.lines, null, 2));\r\n\r\n    this.determineLineHeights();\r\n    this.determineLabelSize();\r\n    let tmpLines = this.removeEmptyBlocks();\r\n\r\n\r\n    // Return a simple hash object for further processing.\r\n    return {\r\n      width : this.width,\r\n      height: this.height,\r\n      lines : tmpLines\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport default LabelAccumulator;\r\n","'use strict';\r\n\r\nimport NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * A Box Node/Cluster shape.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass Box extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor (options, body, labelModule) {\r\n    super(options,body,labelModule);\r\n    this._setMargins(labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      var dimensions = this.getDimensionsFromLabel(ctx, selected, hover);\r\n\r\n      this.width  = dimensions.width + this.margin.right + this.margin.left;\r\n      this.height = dimensions.height + this.margin.top + this.margin.bottom;\r\n      this.radius = this.width / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    this.initContextForDraw(ctx, values);\r\n    ctx.roundRect(this.left, this.top, this.width, this.height, values.borderRadius);\r\n    this.performFill(ctx, values);\r\n\r\n    this.updateBoundingBox(x, y, ctx, selected, hover);\r\n    this.labelModule.draw(ctx, this.left + this.textSize.width / 2 + this.margin.left,\r\n                               this.top + this.textSize.height / 2 + this.margin.top, selected, hover);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   */\r\n  updateBoundingBox(x, y, ctx, selected, hover) {\r\n    this._updateBoundingBox(x, y, ctx, selected, hover);\r\n\r\n    let borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\r\n    this._addBoundingBoxMargin(borderRadius);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    this.resize(ctx);\r\n    let borderWidth = this.options.borderWidth;\r\n\r\n    return Math.min(\r\n        Math.abs((this.width) / 2 / Math.cos(angle)),\r\n        Math.abs((this.height)  / 2 / Math.sin(angle))) + borderWidth;\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","'use strict';\r\n\r\nimport CircleImageBase from '../util/CircleImageBase'\r\n\r\n/**\r\n * A Circle Node/Cluster shape.\r\n *\r\n * @extends CircleImageBase\r\n */\r\nclass Circle extends CircleImageBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n    this._setMargins(labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      var dimensions = this.getDimensionsFromLabel(ctx, selected, hover);\r\n\r\n      var diameter = Math.max(dimensions.width  + this.margin.right + this.margin.left,\r\n                              dimensions.height + this.margin.top   + this.margin.bottom);\r\n\r\n      this.options.size = diameter / 2; // NOTE: this size field only set here, not in Ellipse, Database, Box\r\n      this.width = diameter;\r\n      this.height = diameter;\r\n      this.radius = this.width / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    this._drawRawCircle(ctx, x, y, values);\r\n\r\n    this.updateBoundingBox(x,y);\r\n    this.labelModule.draw(ctx, this.left + this.textSize.width / 2 + this.margin.left,\r\n                               y, selected, hover);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   */\r\n  updateBoundingBox(x, y) {\r\n    this.boundingBox.top = y - this.options.size;\r\n    this.boundingBox.left = x - this.options.size;\r\n    this.boundingBox.right = x + this.options.size;\r\n    this.boundingBox.bottom = y + this.options.size;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle - Unused\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {  // eslint-disable-line no-unused-vars\r\n    this.resize(ctx);\r\n    return this.width * 0.5;\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n","'use strict';\r\n\r\nimport CircleImageBase from '../util/CircleImageBase'\r\n\r\n/**\r\n * A CircularImage Node/Cluster shape.\r\n *\r\n * @extends CircleImageBase\r\n */\r\nclass CircularImage extends CircleImageBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   * @param {Image} imageObj\r\n   * @param {Image} imageObjAlt\r\n   */\r\n  constructor (options, body, labelModule, imageObj, imageObjAlt) {\r\n    super(options, body, labelModule);\r\n\r\n    this.setImages(imageObj, imageObjAlt);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover) {\r\n    var imageAbsent = (this.imageObj.src === undefined) ||\r\n        (this.imageObj.width === undefined) ||\r\n        (this.imageObj.height === undefined);\r\n\r\n    if (imageAbsent) {\r\n      var diameter = this.options.size * 2;\r\n      this.width = diameter;\r\n      this.height = diameter;\r\n      this.radius = 0.5*this.width;\r\n\t\t\treturn;\r\n    }\r\n\r\n    // At this point, an image is present, i.e. this.imageObj is valid.\r\n    if (this.needsRefresh(selected, hover)) {\r\n      this._resizeImage();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.switchImages(selected);\r\n    this.resize();\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    // draw the background circle. IMPORTANT: the stroke in this method is used by the clip method below.\r\n    this._drawRawCircle(ctx, x, y, values);\r\n\r\n    // now we draw in the circle, we save so we can revert the clip operation after drawing.\r\n    ctx.save();\r\n    // clip is used to use the stroke in drawRawCircle as an area that we can draw in.\r\n    ctx.clip();\r\n    // draw the image\r\n    this._drawImageAtPosition(ctx, values);\r\n    // restore so we can again draw on the full canvas\r\n    ctx.restore();\r\n\r\n    this._drawImageLabel(ctx, x, y, selected, hover);\r\n\r\n    this.updateBoundingBox(x,y);\r\n  }\r\n\r\n  // TODO: compare with Circle.updateBoundingBox(), consolidate? More stuff is happening here\r\n  /**\r\n   *\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   */\r\n  updateBoundingBox(x,y) {\r\n    this.boundingBox.top = y - this.options.size;\r\n    this.boundingBox.left = x - this.options.size;\r\n    this.boundingBox.right = x + this.options.size;\r\n    this.boundingBox.bottom = y + this.options.size;\r\n\r\n    // TODO: compare with Image.updateBoundingBox(), consolidate?\r\n    this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\r\n    this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\r\n    this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle - Unused\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {  // eslint-disable-line no-unused-vars\r\n    this.resize(ctx);\r\n    return this.width * 0.5;\r\n  }\r\n}\r\n\r\nexport default CircularImage;\r\n","'use strict';\r\n\r\nimport NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * A Database Node/Cluster shape.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass Database extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor (options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n    this._setMargins(labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   */\r\n  resize(ctx, selected, hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      var dimensions = this.getDimensionsFromLabel(ctx, selected, hover);\r\n      var size = dimensions.width + this.margin.right + this.margin.left;\r\n\r\n      this.width  = size;\r\n      this.height = size;\r\n      this.radius = this.width / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.left = x - this.width / 2;\r\n    this.top  = y - this.height / 2;\r\n\r\n    this.initContextForDraw(ctx, values);\r\n    ctx.database(x - this.width / 2, y - this.height / 2, this.width, this.height);\r\n    this.performFill(ctx, values);\r\n\r\n    this.updateBoundingBox(x, y, ctx, selected, hover);\r\n    this.labelModule.draw(ctx, this.left + this.textSize.width / 2 + this.margin.left,\r\n                               this.top + this.textSize.height / 2 + this.margin.top, selected, hover);\r\n  }\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx, angle);\r\n  }\r\n}\r\n\r\nexport default Database;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Diamond Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Diamond extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'diamond', 4, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Diamond;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Dot Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Dot extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'circle', 2, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {  // eslint-disable-line no-unused-vars\r\n    this.resize(ctx);\r\n    return this.options.size;\r\n  }\r\n}\r\n\r\nexport default Dot;\r\n","'use strict';\r\n\r\nimport NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * Am Ellipse Node/Cluster shape.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass Ellipse extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      var dimensions = this.getDimensionsFromLabel(ctx, selected, hover);\r\n\r\n      this.height = dimensions.height * 2;\r\n      this.width  = dimensions.width + dimensions.height;\r\n      this.radius = 0.5*this.width;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.left = x - this.width * 0.5;\r\n    this.top = y - this.height * 0.5;\r\n\r\n    this.initContextForDraw(ctx, values);\r\n    ctx.ellipse_vis(this.left, this.top, this.width, this.height);\r\n    this.performFill(ctx, values);\r\n\r\n    this.updateBoundingBox(x, y, ctx, selected, hover);\r\n    this.labelModule.draw(ctx, x, y, selected, hover);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    this.resize(ctx);\r\n    var a = this.width * 0.5;\r\n    var b = this.height * 0.5;\r\n    var w = (Math.sin(angle) * a);\r\n    var h = (Math.cos(angle) * b);\r\n    return a * b / Math.sqrt(w * w + h * h);\r\n  }\r\n}\r\n\r\nexport default Ellipse;\r\n","'use strict';\r\n\r\nimport NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * An icon replacement for the default Node shape.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass Icon extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n    this._setMargins(labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx - Unused.\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected, hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      this.iconSize = {\r\n        width: Number(this.options.icon.size),\r\n        height: Number(this.options.icon.size)\r\n      };\r\n      this.width = this.iconSize.width + this.margin.right + this.margin.left;\r\n      this.height = this.iconSize.height + this.margin.top + this.margin.bottom;\r\n      this.radius = 0.5*this.width;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.options.icon.size = this.options.icon.size || 50;\r\n\r\n    this.left = x - this.width / 2;\r\n    this.top  = y - this.height / 2;\r\n    this._icon(ctx, x, y, selected, hover, values);\r\n\r\n    if (this.options.label !== undefined) {\r\n      var iconTextSpacing = 5;\r\n      this.labelModule.draw(ctx, this.left + this.iconSize.width / 2 + this.margin.left,\r\n                                 y + this.height / 2 + iconTextSpacing, selected);\r\n    }\r\n\r\n    this.updateBoundingBox(x, y)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  updateBoundingBox(x, y) {\r\n    this.boundingBox.top    = y - this.options.icon.size * 0.5;\r\n    this.boundingBox.left   = x - this.options.icon.size * 0.5;\r\n    this.boundingBox.right  = x + this.options.icon.size * 0.5;\r\n    this.boundingBox.bottom = y + this.options.icon.size * 0.5;\r\n\r\n    if (this.options.label !== undefined && this.labelModule.size.width > 0) {\r\n      var iconTextSpacing = 5;\r\n      this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\r\n      this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\r\n      this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + iconTextSpacing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover - Unused\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  _icon(ctx, x, y, selected, hover, values) {\r\n    let iconSize = Number(this.options.icon.size);\r\n\r\n    if (this.options.icon.code !== undefined) {\r\n      ctx.font = (selected ? \"bold \" : \"\") + iconSize + \"px \" + this.options.icon.face;\r\n\r\n      // draw icon\r\n      ctx.fillStyle = this.options.icon.color || \"black\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"middle\";\r\n\r\n      // draw shadow if enabled\r\n      this.enableShadow(ctx, values);\r\n      ctx.fillText(this.options.icon.code, x, y);\r\n\r\n      // disable shadows for other elements.\r\n      this.disableShadow(ctx, values);\r\n    } else {\r\n      console.error('When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.')\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Icon;\r\n","'use strict';\r\n\r\nimport CircleImageBase from '../util/CircleImageBase'\r\n\r\n\r\n/**\r\n * An image-based replacement for the default Node shape.\r\n *\r\n * @extends CircleImageBase\r\n */\r\nclass Image extends CircleImageBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   * @param {Image} imageObj\r\n   * @param {Image} imageObjAlt\r\n   */\r\n  constructor (options, body, labelModule, imageObj, imageObjAlt) {\r\n    super(options, body, labelModule);\r\n\r\n    this.setImages(imageObj, imageObjAlt);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx - Unused.\r\n   * @param {boolean} [selected]\r\n   * @param {boolean} [hover]\r\n   */\r\n  resize(ctx, selected = this.selected, hover = this.hover) {\r\n    var imageAbsent = (this.imageObj.src === undefined) ||\r\n        (this.imageObj.width === undefined) ||\r\n        (this.imageObj.height === undefined);\r\n\r\n    if (imageAbsent) {\r\n      var side = this.options.size * 2;\r\n      this.width = side;\r\n      this.height = side;\r\n      return;\r\n    }\r\n\r\n    if (this.needsRefresh(selected, hover)) {\r\n      this._resizeImage();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.switchImages(selected);\r\n    this.resize();\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    if (this.options.shapeProperties.useBorderWithImage === true) {\r\n      var neutralborderWidth = this.options.borderWidth;\r\n      var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\r\n      var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\r\n      ctx.lineWidth = Math.min(this.width, borderWidth);\r\n\r\n      ctx.beginPath();\r\n\r\n      // setup the line properties.\r\n      ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\r\n\r\n      // set a fillstyle\r\n      ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\r\n\r\n      // draw a rectangle to form the border around. This rectangle is filled so the opacity of a picture (in future vis releases?) can be used to tint the image\r\n      ctx.rect(this.left - 0.5 * ctx.lineWidth,\r\n        this.top - 0.5 * ctx.lineWidth,\r\n        this.width + ctx.lineWidth,\r\n        this.height + ctx.lineWidth);\r\n      ctx.fill();\r\n\r\n     this.performStroke(ctx, values);\r\n \r\n      ctx.closePath();\r\n    }\r\n\r\n    this._drawImageAtPosition(ctx, values);\r\n\r\n    this._drawImageLabel(ctx, x, y, selected, hover);\r\n\r\n    this.updateBoundingBox(x,y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  updateBoundingBox(x, y) {\r\n    this.resize();\r\n    this._updateBoundingBox(x, y);\r\n\r\n    if (this.options.label !== undefined && this.labelModule.size.width > 0) {\r\n      this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\r\n      this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\r\n      this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n     return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Square Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Square extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'square', 2, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Hexagon Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Hexagon extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'hexagon', 4, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Hexagon;","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Star Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Star extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'star', 4, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Star;\r\n","'use strict';\r\n\r\nimport NodeBase from '../util/NodeBase'\r\n\r\n/**\r\n * A text-based replacement for the default Node shape.\r\n *\r\n * @extends NodeBase\r\n */\r\nclass Text extends NodeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n    this._setMargins(labelModule);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   */\r\n  resize(ctx, selected, hover) {\r\n    if (this.needsRefresh(selected, hover)) {\r\n      this.textSize = this.labelModule.getTextSize(ctx, selected, hover);\r\n      this.width = this.textSize.width + this.margin.right + this.margin.left;\r\n      this.height = this.textSize.height + this.margin.top + this.margin.bottom;\r\n      this.radius = 0.5*this.width;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x width\r\n   * @param {number} y height\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this.resize(ctx, selected, hover);\r\n    this.left = x - this.width / 2;\r\n    this.top = y - this.height / 2;\r\n\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n    this.labelModule.draw(ctx, this.left + this.textSize.width / 2 + this.margin.left,\r\n                               this.top + this.textSize.height / 2 + this.margin.top, selected, hover);\r\n\r\n    // disable shadows for other elements.\r\n    this.disableShadow(ctx, values);\r\n\r\n    this.updateBoundingBox(x, y, ctx, selected, hover);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Text;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A Triangle Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass Triangle extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'triangle', 3, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default Triangle;\r\n","'use strict';\r\n\r\nimport ShapeBase from '../util/ShapeBase'\r\n\r\n/**\r\n * A downward facing Triangle Node/Cluster shape.\r\n *\r\n * @extends ShapeBase\r\n */\r\nclass TriangleDown extends ShapeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {boolean} selected\r\n   * @param {boolean} hover\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   */\r\n  draw(ctx, x, y, selected, hover, values) {\r\n    this._drawShape(ctx, 'triangleDown', 3, x, y, selected, hover, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {number} angle\r\n   * @returns {number}\r\n   */\r\n  distanceToBorder(ctx, angle) {\r\n    return this._distanceToBorder(ctx,angle);\r\n  }\r\n}\r\n\r\nexport default TriangleDown;\r\n","var util = require(\"../../util\");\r\nvar DataSet = require('../../DataSet');\r\nvar DataView = require('../../DataView');\r\nvar Edge = require(\"./components/Edge\").default;\r\n\r\n/**\r\n * Handler for Edges\r\n */\r\nclass EdgesHandler {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Array.<Image>} images\r\n   * @param {Array.<Group>} groups\r\n   */\r\n  constructor(body, images, groups) {\r\n    this.body = body;\r\n    this.images = images;\r\n    this.groups = groups;\r\n\r\n    // create the edge API in the body container\r\n    this.body.functions.createEdge = this.create.bind(this);\r\n\r\n    this.edgesListeners = {\r\n      add:    (event, params) => {this.add(params.items);},\r\n      update: (event, params) => {this.update(params.items);},\r\n      remove: (event, params) => {this.remove(params.items);}\r\n    };\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      arrows: {\r\n        to:     {enabled: false, scaleFactor:1, type: 'arrow'},// boolean / {arrowScaleFactor:1} / {enabled: false, arrowScaleFactor:1}\r\n        middle: {enabled: false, scaleFactor:1, type: 'arrow'},\r\n        from:   {enabled: false, scaleFactor:1, type: 'arrow'}\r\n      },\r\n      arrowStrikethrough: true,\r\n      color: {\r\n        color:'#848484',\r\n        highlight:'#848484',\r\n        hover: '#848484',\r\n        inherit: 'from',\r\n        opacity:1.0\r\n      },\r\n      dashes: false,\r\n      font: {\r\n        color: '#343434',\r\n        size: 14, // px\r\n        face: 'arial',\r\n        background: 'none',\r\n        strokeWidth: 2, // px\r\n        strokeColor: '#ffffff',\r\n        align:'horizontal',\r\n        multi: false,\r\n        vadjust: 0,\r\n        bold: {\r\n          mod: 'bold'\r\n        },\r\n        boldital: {\r\n          mod: 'bold italic'\r\n        },\r\n        ital: {\r\n          mod: 'italic'\r\n        },\r\n        mono: {\r\n          mod: '',\r\n          size: 15, // px\r\n          face: 'courier new',\r\n          vadjust: 2\r\n        }\r\n      },\r\n      hidden: false,\r\n      hoverWidth: 1.5,\r\n      label: undefined,\r\n      labelHighlightBold: true,\r\n      length: undefined,\r\n      physics: true,\r\n      scaling:{\r\n        min: 1,\r\n        max: 15,\r\n        label: {\r\n          enabled: true,\r\n          min: 14,\r\n          max: 30,\r\n          maxVisible: 30,\r\n          drawThreshold: 5\r\n        },\r\n        customScalingFunction: function (min,max,total,value) {\r\n          if (max === min) {\r\n            return 0.5;\r\n          }\r\n          else {\r\n            var scale = 1 / (max - min);\r\n            return Math.max(0,(value - min)*scale);\r\n          }\r\n        }\r\n      },\r\n      selectionWidth: 1.5,\r\n      selfReferenceSize:20,\r\n      shadow:{\r\n        enabled: false,\r\n        color: 'rgba(0,0,0,0.5)',\r\n        size:10,\r\n        x:5,\r\n        y:5\r\n      },\r\n      smooth: {\r\n        enabled: true,\r\n        type: \"dynamic\",\r\n        forceDirection:'none',\r\n        roundness: 0.5\r\n      },\r\n      title:undefined,\r\n      width: 1,\r\n      value: undefined\r\n    };\r\n\r\n    util.deepExtend(this.options, this.defaultOptions);\r\n\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    // this allows external modules to force all dynamic curves to turn static.\r\n    this.body.emitter.on(\"_forceDisableDynamicCurves\", (type, emit = true) => {\r\n      if (type === 'dynamic') {\r\n        type = 'continuous';\r\n      }\r\n      let dataChanged = false;\r\n      for (let edgeId in this.body.edges) {\r\n        if (this.body.edges.hasOwnProperty(edgeId)) {\r\n          let edge = this.body.edges[edgeId];\r\n          let edgeData = this.body.data.edges._data[edgeId];\r\n\r\n          // only forcibly remove the smooth curve if the data has been set of the edge has the smooth curves defined.\r\n          // this is because a change in the global would not affect these curves.\r\n          if (edgeData !== undefined) {\r\n            let smoothOptions = edgeData.smooth;\r\n            if (smoothOptions !== undefined) {\r\n              if (smoothOptions.enabled === true && smoothOptions.type === 'dynamic') {\r\n                if (type === undefined) {\r\n                  edge.setOptions({smooth: false});\r\n                }\r\n                else {\r\n                  edge.setOptions({smooth: {type: type}});\r\n                }\r\n                dataChanged = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (emit === true && dataChanged === true) {\r\n        this.body.emitter.emit(\"_dataChanged\");\r\n      }\r\n    });\r\n\r\n    // this is called when options of EXISTING nodes or edges have changed.\r\n    //\r\n    // NOTE: Not true, called when options have NOT changed, for both existing as well as new nodes.\r\n    //       See update() for logic.\r\n    // TODO: Verify and examine the consequences of this. It might still trigger when\r\n    //       non-option fields have changed, but then reconnecting edges is still useless.\r\n    //       Alternatively, it might also be called when edges are removed.\r\n    //\r\n    this.body.emitter.on(\"_dataUpdated\", () => {\r\n      this.reconnectEdges();\r\n    });\r\n\r\n    // refresh the edges. Used when reverting from hierarchical layout\r\n    this.body.emitter.on(\"refreshEdges\", this.refresh.bind(this));\r\n    this.body.emitter.on(\"refresh\",      this.refresh.bind(this));\r\n    this.body.emitter.on(\"destroy\",      () => {\r\n      util.forEach(this.edgesListeners, (callback, event) => {\r\n        if (this.body.data.edges)\r\n          this.body.data.edges.off(event, callback);\r\n      });\r\n      delete this.body.functions.createEdge;\r\n      delete this.edgesListeners.add;\r\n      delete this.edgesListeners.update;\r\n      delete this.edgesListeners.remove;\r\n      delete this.edgesListeners;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      // use the parser from the Edge class to fill in all shorthand notations\r\n      Edge.parseOptions(this.options, options, true, this.defaultOptions, true);\r\n\r\n      // update smooth settings in all edges\r\n      let dataChanged = false;\r\n      if (options.smooth !== undefined) {\r\n        for (let edgeId in this.body.edges) {\r\n          if (this.body.edges.hasOwnProperty(edgeId)) {\r\n            dataChanged = this.body.edges[edgeId].updateEdgeType() || dataChanged;\r\n          }\r\n        }\r\n      }\r\n\r\n      // update fonts in all edges\r\n      if (options.font !== undefined) {\r\n        for (let edgeId in this.body.edges) {\r\n          if (this.body.edges.hasOwnProperty(edgeId)) {\r\n            this.body.edges[edgeId].updateLabelModule();\r\n          }\r\n        }\r\n      }\r\n\r\n      // update the state of the variables if needed\r\n      if (options.hidden !== undefined || options.physics !== undefined  || dataChanged === true) {\r\n        this.body.emitter.emit('_dataChanged');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Load edges by reading the data table\r\n   * @param {Array | DataSet | DataView} edges    The data containing the edges.\r\n   * @param {boolean} [doNotEmit=false]\r\n   * @private\r\n   */\r\n  setData(edges, doNotEmit = false) {\r\n    var oldEdgesData = this.body.data.edges;\r\n\r\n    if (edges instanceof DataSet || edges instanceof DataView) {\r\n      this.body.data.edges = edges;\r\n    }\r\n    else if (Array.isArray(edges)) {\r\n      this.body.data.edges = new DataSet();\r\n      this.body.data.edges.add(edges);\r\n    }\r\n    else if (!edges) {\r\n      this.body.data.edges = new DataSet();\r\n    }\r\n    else {\r\n      throw new TypeError('Array or DataSet expected');\r\n    }\r\n\r\n    // TODO: is this null or undefined or false?\r\n    if (oldEdgesData) {\r\n      // unsubscribe from old dataset\r\n      util.forEach(this.edgesListeners, (callback, event) => {oldEdgesData.off(event, callback);});\r\n    }\r\n\r\n    // remove drawn edges\r\n    this.body.edges = {};\r\n\r\n    // TODO: is this null or undefined or false?\r\n    if (this.body.data.edges) {\r\n      // subscribe to new dataset\r\n      util.forEach(this.edgesListeners, (callback, event) =>  {this.body.data.edges.on(event, callback);});\r\n\r\n      // draw all new nodes\r\n      var ids = this.body.data.edges.getIds();\r\n      this.add(ids, true);\r\n    }\r\n\r\n    this.body.emitter.emit('_adjustEdgesForHierarchicalLayout');\r\n    if (doNotEmit === false) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add edges\r\n   * @param {number[] | string[]} ids\r\n   * @param {boolean} [doNotEmit=false]\r\n   * @private\r\n   */\r\n  add(ids, doNotEmit = false) {\r\n    var edges = this.body.edges;\r\n    var edgesData = this.body.data.edges;\r\n\r\n    for (let i = 0; i < ids.length; i++) {\r\n      var id = ids[i];\r\n\r\n      var oldEdge = edges[id];\r\n      if (oldEdge) {\r\n        oldEdge.disconnect();\r\n      }\r\n\r\n      var data = edgesData.get(id, {\"showInternalIds\" : true});\r\n      edges[id] = this.create(data);\r\n    }\r\n\r\n    this.body.emitter.emit('_adjustEdgesForHierarchicalLayout');\r\n\r\n    if (doNotEmit === false) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Update existing edges, or create them when not yet existing\r\n   * @param {number[] | string[]} ids\r\n   * @private\r\n   */\r\n  update(ids) {\r\n    var edges = this.body.edges;\r\n    var edgesData = this.body.data.edges;\r\n    var dataChanged = false;\r\n    for (var i = 0; i < ids.length; i++) {\r\n      var id = ids[i];\r\n      var data = edgesData.get(id);\r\n      var edge = edges[id];\r\n      if (edge !== undefined) {\r\n        // update edge\r\n        edge.disconnect();\r\n        dataChanged = edge.setOptions(data) || dataChanged; // if a support node is added, data can be changed.\r\n        edge.connect();\r\n      }\r\n      else {\r\n        // create edge\r\n        this.body.edges[id] = this.create(data);\r\n        dataChanged = true;\r\n      }\r\n    }\r\n\r\n    if (dataChanged === true) {\r\n      this.body.emitter.emit('_adjustEdgesForHierarchicalLayout');\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"_dataUpdated\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove existing edges. Non existing ids will be ignored\r\n   * @param {number[] | string[]} ids\r\n   * @param {boolean} [emit=true]\r\n   * @private\r\n   */\r\n  remove(ids, emit = true) {\r\n    if (ids.length === 0) return;  // early out\r\n\r\n    var edges = this.body.edges;\r\n    util.forEach(ids, (id) => {\r\n      var edge = edges[id];\r\n      if (edge !== undefined) {\r\n        edge.remove();\r\n      }\r\n    });\r\n\r\n    if (emit) {\r\n      this.body.emitter.emit(\"_dataChanged\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refreshes Edge Handler\r\n   */\r\n  refresh() {\r\n    util.forEach(this.body.edges, (edge, edgeId) => {\r\n      let data = this.body.data.edges._data[edgeId];\r\n      if (data !== undefined) {\r\n        edge.setOptions(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} properties\r\n   * @returns {Edge}\r\n   */\r\n  create(properties) {\r\n    return new Edge(properties, this.body, this.options, this.defaultOptions)\r\n  }\r\n\r\n  /**\r\n   * Reconnect all edges\r\n   * @private\r\n   */\r\n  reconnectEdges() {\r\n    var id;\r\n    var nodes = this.body.nodes;\r\n    var edges = this.body.edges;\r\n\r\n    for (id in nodes) {\r\n      if (nodes.hasOwnProperty(id)) {\r\n        nodes[id].edges = [];\r\n      }\r\n    }\r\n\r\n    for (id in edges) {\r\n      if (edges.hasOwnProperty(id)) {\r\n        var edge = edges[id];\r\n        edge.from = null;\r\n        edge.to = null;\r\n        edge.connect();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Edge.id} edgeId\r\n   * @returns {Array}\r\n   */\r\n  getConnectedNodes(edgeId) {\r\n    let nodeList = [];\r\n    if (this.body.edges[edgeId] !== undefined) {\r\n      let edge = this.body.edges[edgeId];\r\n      if (edge.fromId !== undefined) {nodeList.push(edge.fromId);}\r\n      if (edge.toId !== undefined)   {nodeList.push(edge.toId);}\r\n    }\r\n    return nodeList;\r\n  }\r\n\r\n  /**\r\n   * There is no direct relation between the nodes and the edges DataSet,\r\n   * so the right place to do call this is in the handler for event `_dataUpdated`.\r\n   */\r\n  _updateState() {\r\n    this._addMissingEdges();\r\n    this._removeInvalidEdges();\r\n  }\r\n\r\n  /**\r\n   * Scan for missing nodes and remove corresponding edges, if any.\r\n   * @private\r\n   */\r\n  _removeInvalidEdges() {\r\n    \r\n    let edgesToDelete = [];\r\n\r\n    util.forEach(this.body.edges, (edge, id) => {\r\n      let toNode = this.body.nodes[edge.toId];\r\n      let fromNode = this.body.nodes[edge.fromId];\r\n\r\n      // Skip clustering edges here, let the Clustering module handle those\r\n      if ((toNode   !== undefined && toNode.isCluster   === true)\r\n       || (fromNode !== undefined && fromNode.isCluster === true)) {\r\n        return;\r\n      }\r\n\r\n      if (toNode === undefined || fromNode === undefined) {\r\n        edgesToDelete.push(id);\r\n      }\r\n    });\r\n\r\n    this.remove(edgesToDelete, false);\r\n  }\r\n\r\n  /**\r\n   * add all edges from dataset that are not in the cached state\r\n   * @private\r\n   */ \r\n  _addMissingEdges() {\r\n     let edges = this.body.edges;\r\n     let edgesData = this.body.data.edges;\r\n     let addIds = [];\r\n\r\n     edgesData.forEach((edgeData, edgeId) => {\r\n         let edge = edges[edgeId];\r\n         if(edge===undefined) {\r\n           addIds.push(edgeId);\r\n         }\r\n     });\r\n     \r\n     this.add(addIds,true);\r\n   }  \r\n}\r\n\r\nexport default EdgesHandler;\r\n","import BezierEdgeBase from './util/BezierEdgeBase'\r\n\r\n/**\r\n * A Dynamic Bezier Edge. Bezier curves are used to model smooth gradual\r\n * curves in paths between nodes. The Dynamic piece refers to how the curve\r\n * reacts to physics changes.\r\n *\r\n * @extends BezierEdgeBase\r\n */\r\nclass BezierEdgeDynamic extends BezierEdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    //this.via = undefined; // Here for completeness but not allowed to defined before super() is invoked.\r\n    super(options, body, labelModule); // --> this calls the setOptions below\r\n    this._boundFunction = () => {this.positionBezierNode();};\r\n    this.body.emitter.on(\"_repositionBezierNodes\", this._boundFunction);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    // check if the physics has changed.\r\n    let physicsChange = false;\r\n    if (this.options.physics !== options.physics) {\r\n      physicsChange = true;\r\n    }\r\n\r\n    // set the options and the to and from nodes\r\n    this.options = options;\r\n    this.id = this.options.id;\r\n    this.from = this.body.nodes[this.options.from];\r\n    this.to = this.body.nodes[this.options.to];\r\n\r\n    // setup the support node and connect\r\n    this.setupSupportNode();\r\n    this.connect();\r\n\r\n    // when we change the physics state of the edge, we reposition the support node.\r\n    if (physicsChange === true) {\r\n      this.via.setOptions({physics: this.options.physics});\r\n      this.positionBezierNode();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connects an edge to node(s)\r\n   */\r\n  connect() {\r\n    this.from = this.body.nodes[this.options.from];\r\n    this.to = this.body.nodes[this.options.to];\r\n    if (this.from === undefined || this.to === undefined || this.options.physics === false) {\r\n      this.via.setOptions({physics:false})\r\n    }\r\n    else {\r\n      // fix weird behaviour where a self referencing node has physics enabled\r\n      if (this.from.id === this.to.id) {\r\n        this.via.setOptions({physics: false})\r\n      }\r\n      else {\r\n        this.via.setOptions({physics: true})\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove the support nodes\r\n   * @returns {boolean}\r\n   */\r\n  cleanup() {\r\n    this.body.emitter.off(\"_repositionBezierNodes\", this._boundFunction);\r\n    if (this.via !== undefined) {\r\n      delete this.body.nodes[this.via.id];\r\n      this.via = undefined;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Bezier curves require an anchor point to calculate the smooth flow. These points are nodes. These nodes are invisible but\r\n   * are used for the force calculation.\r\n   *\r\n   * The changed data is not called, if needed, it is returned by the main edge constructor.\r\n   * @private\r\n   */\r\n  setupSupportNode() {\r\n    if (this.via === undefined) {\r\n      var nodeId = \"edgeId:\" + this.id;\r\n      var node = this.body.functions.createNode({\r\n        id: nodeId,\r\n        shape: 'circle',\r\n        physics:true,\r\n        hidden:true\r\n      });\r\n      this.body.nodes[nodeId] = node;\r\n      this.via = node;\r\n      this.via.parentEdgeId = this.id;\r\n      this.positionBezierNode();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Positions bezier node\r\n   */\r\n  positionBezierNode() {\r\n    if (this.via !== undefined && this.from !== undefined && this.to !== undefined) {\r\n      this.via.x = 0.5 * (this.from.x + this.to.x);\r\n      this.via.y = 0.5 * (this.from.y + this.to.y);\r\n    }\r\n    else if (this.via !== undefined) {\r\n      this.via.x = 0;\r\n      this.via.y = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw a line between two nodes\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @param {Node} viaNode\r\n   * @private\r\n   */\r\n  _line(ctx, values, viaNode) {\r\n    this._bezierCurve(ctx, values, viaNode);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Node|undefined|*|{index, line, column}}\r\n   */\r\n  getViaNode() {\r\n    return this.via;\r\n  }\r\n\r\n\r\n  /**\r\n   * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\r\n   *\r\n   * @param {number} percentage\r\n   * @param {Node} viaNode\r\n   * @returns {{x: number, y: number}}\r\n   * @private\r\n   */\r\n  getPoint(percentage, viaNode = this.via) {\r\n    let t = percentage;\r\n    let x, y;\r\n    if (this.from === this.to){\r\n      let [cx,cy,cr]  = this._getCircleData(this.from);\r\n      let a = 2 * Math.PI * (1 - t);\r\n      x = cx + cr * Math.sin(a);\r\n      y = cy + cr - cr * (1 - Math.cos(a));\r\n    } else {\r\n      x = Math.pow(1 - t, 2) * this.fromPoint.x + 2 * t * (1 - t) * viaNode.x + Math.pow(t, 2) * this.toPoint.x;\r\n      y = Math.pow(1 - t, 2) * this.fromPoint.y + 2 * t * (1 - t) * viaNode.y + Math.pow(t, 2) * this.toPoint.y;\r\n    }\r\n\r\n    return {x: x, y: y};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _findBorderPosition(nearNode, ctx) {\r\n    return this._findBorderPositionBezier(nearNode, ctx, this.via);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToEdge(x1, y1, x2, y2, x3, y3) { // x3,y3 is the point\r\n    return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, this.via);\r\n  }\r\n}\r\n\r\n\r\nexport default BezierEdgeDynamic;\r\n","import BezierEdgeBase from './util/BezierEdgeBase'\r\n\r\n/**\r\n * A Static Bezier Edge. Bezier curves are used to model smooth gradual\r\n * curves in paths between nodes.\r\n *\r\n * @extends BezierEdgeBase\r\n */\r\nclass BezierEdgeStatic extends BezierEdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   * Draw a line between two nodes\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @param {Node} viaNode\r\n   * @private\r\n   */\r\n  _line(ctx, values, viaNode) {\r\n    this._bezierCurve(ctx, values, viaNode);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Array.<{x: number, y: number}>}\r\n   */\r\n  getViaNode() {\r\n    return this._getViaCoordinates();\r\n  }\r\n\r\n\r\n  /**\r\n   * We do not use the to and fromPoints here to make the via nodes the same as edges without arrows.\r\n   * @returns {{x: undefined, y: undefined}}\r\n   * @private\r\n   */\r\n  _getViaCoordinates() {\r\n    // Assumption: x/y coordinates in from/to always defined\r\n    let xVia = undefined;\r\n    let yVia = undefined;\r\n    let factor = this.options.smooth.roundness;\r\n    let type = this.options.smooth.type;\r\n    let dx = Math.abs(this.from.x - this.to.x);\r\n    let dy = Math.abs(this.from.y - this.to.y);\r\n    if (type === 'discrete' || type === 'diagonalCross') {\r\n      let stepX;\r\n      let stepY;\r\n\r\n      if (dx <= dy) {\r\n        stepX = stepY = factor * dy;\r\n      } else {\r\n        stepX = stepY = factor * dx;\r\n      }\r\n\r\n      if (this.from.x >  this.to.x) stepX = -stepX;\r\n      if (this.from.y >= this.to.y) stepY = -stepY;\r\n\r\n      xVia = this.from.x + stepX;\r\n      yVia = this.from.y + stepY;\r\n\r\n      if (type === \"discrete\") {\r\n        if (dx <= dy) {\r\n          xVia = dx < factor * dy ? this.from.x : xVia;\r\n        } else {\r\n          yVia = dy < factor * dx ? this.from.y : yVia;\r\n        }\r\n      }\r\n    }\r\n    else if (type === \"straightCross\") {\r\n      let stepX = (1 - factor) * dx;\r\n      let stepY = (1 - factor) * dy;\r\n\r\n      if (dx <= dy) {  // up - down\r\n        stepX = 0;\r\n        if (this.from.y < this.to.y) stepY = -stepY;\r\n      }\r\n      else { // left - right\r\n        if (this.from.x < this.to.x) stepX = -stepX;\r\n        stepY = 0;\r\n      }\r\n      xVia = this.to.x + stepX;\r\n      yVia = this.to.y + stepY;\r\n    }\r\n    else if (type === 'horizontal') {\r\n      let stepX = (1 - factor) * dx;\r\n      if (this.from.x < this.to.x) stepX = -stepX;\r\n      xVia = this.to.x + stepX;\r\n      yVia = this.from.y;\r\n    }\r\n    else if (type === 'vertical') {\r\n      let stepY = (1 - factor) * dy;\r\n      if (this.from.y < this.to.y) stepY = -stepY;\r\n      xVia = this.from.x;\r\n      yVia = this.to.y + stepY;\r\n    }\r\n    else if (type === 'curvedCW') {\r\n      dx = this.to.x - this.from.x;\r\n      dy = this.from.y - this.to.y;\r\n      let radius = Math.sqrt(dx * dx + dy * dy);\r\n      let pi = Math.PI;\r\n\r\n      let originalAngle = Math.atan2(dy, dx);\r\n      let myAngle = (originalAngle + ((factor * 0.5) + 0.5) * pi) % (2 * pi);\r\n\r\n      xVia = this.from.x + (factor * 0.5 + 0.5) * radius * Math.sin(myAngle);\r\n      yVia = this.from.y + (factor * 0.5 + 0.5) * radius * Math.cos(myAngle);\r\n    }\r\n    else if (type === 'curvedCCW') {\r\n      dx = this.to.x - this.from.x;\r\n      dy = this.from.y - this.to.y;\r\n      let radius = Math.sqrt(dx * dx + dy * dy);\r\n      let pi = Math.PI;\r\n\r\n      let originalAngle = Math.atan2(dy, dx);\r\n      let myAngle = (originalAngle + ((-factor * 0.5) + 0.5) * pi) % (2 * pi);\r\n\r\n      xVia = this.from.x + (factor * 0.5 + 0.5) * radius * Math.sin(myAngle);\r\n      yVia = this.from.y + (factor * 0.5 + 0.5) * radius * Math.cos(myAngle);\r\n    }\r\n    else { // continuous\r\n      let stepX;\r\n      let stepY;\r\n\r\n      if (dx <= dy) {\r\n        stepX = stepY = factor * dy;\r\n      } else {\r\n        stepX = stepY = factor * dx;\r\n      }\r\n\r\n      if (this.from.x >  this.to.x) stepX = -stepX;\r\n      if (this.from.y >= this.to.y) stepY = -stepY;\r\n\r\n      xVia = this.from.x + stepX;\r\n      yVia = this.from.y + stepY;\r\n\r\n      if (dx <= dy) {\r\n        if (this.from.x <= this.to.x) {\r\n          xVia = this.to.x < xVia ? this.to.x : xVia;\r\n        }\r\n        else {\r\n          xVia = this.to.x > xVia ? this.to.x : xVia;\r\n        }\r\n      }\r\n      else {\r\n        if (this.from.y >= this.to.y) {\r\n          yVia = this.to.y > yVia ? this.to.y : yVia;\r\n        } else {\r\n          yVia = this.to.y < yVia ? this.to.y : yVia;\r\n        }\r\n      }\r\n    }\r\n    return {x: xVia, y: yVia};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Object} options\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _findBorderPosition(nearNode, ctx, options = {}) {\r\n    return this._findBorderPositionBezier(nearNode, ctx, options.via);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @param {Node} viaNode\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToEdge(x1, y1, x2, y2, x3, y3, viaNode = this._getViaCoordinates()) { // x3,y3 is the point\r\n    return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, viaNode);\r\n  }\r\n\r\n  /**\r\n   * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\r\n   * @param {number} percentage\r\n   * @param {Node} viaNode\r\n   * @returns {{x: number, y: number}}\r\n   * @private\r\n   */\r\n  getPoint(percentage, viaNode = this._getViaCoordinates()) {\r\n    var t = percentage;\r\n    var x = Math.pow(1 - t, 2) * this.fromPoint.x + (2 * t * (1 - t)) * viaNode.x + Math.pow(t, 2) * this.toPoint.x;\r\n    var y = Math.pow(1 - t, 2) * this.fromPoint.y + (2 * t * (1 - t)) * viaNode.y + Math.pow(t, 2) * this.toPoint.y;\r\n\r\n    return {x: x, y: y};\r\n  }\r\n}\r\n\r\n\r\nexport default BezierEdgeStatic;\r\n","import EdgeBase from './util/EdgeBase'\r\n\r\n/**\r\n * A Straight Edge.\r\n *\r\n * @extends EdgeBase\r\n */\r\nclass StraightEdge extends EdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   * Draw a line between two nodes\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @private\r\n   */\r\n  _line(ctx, values) {\r\n    // draw a straight line\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\r\n    ctx.lineTo(this.toPoint.x, this.toPoint.y);\r\n    // draw shadow if enabled\r\n    this.enableShadow(ctx, values);\r\n    ctx.stroke();\r\n    this.disableShadow(ctx, values);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  getViaNode() {\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\r\n   *\r\n   * @param {number} percentage\r\n   * @returns {{x: number, y: number}}\r\n   * @private\r\n   */\r\n  getPoint(percentage) {\r\n    return {\r\n      x: (1 - percentage) * this.fromPoint.x + percentage * this.toPoint.x,\r\n      y: (1 - percentage) * this.fromPoint.y + percentage * this.toPoint.y\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @returns {{x: number, y: number}}\r\n   * @private\r\n   */\r\n  _findBorderPosition(nearNode, ctx) {\r\n    let node1 = this.to;\r\n    let node2 = this.from;\r\n    if (nearNode.id === this.from.id) {\r\n      node1 = this.from;\r\n      node2 = this.to;\r\n    }\r\n\r\n    let angle = Math.atan2((node1.y - node2.y), (node1.x - node2.x));\r\n    let dx = (node1.x - node2.x);\r\n    let dy = (node1.y - node2.y);\r\n    let edgeSegmentLength = Math.sqrt(dx * dx + dy * dy);\r\n    let toBorderDist = nearNode.distanceToBorder(ctx, angle);\r\n    let toBorderPoint = (edgeSegmentLength - toBorderDist) / edgeSegmentLength;\r\n\r\n    let borderPos = {};\r\n    borderPos.x = (1 - toBorderPoint) * node2.x + toBorderPoint * node1.x;\r\n    borderPos.y = (1 - toBorderPoint) * node2.y + toBorderPoint * node1.y;\r\n\r\n    return borderPos;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToEdge(x1, y1, x2, y2, x3, y3) { // x3,y3 is the point\r\n    return this._getDistanceToLine(x1, y1, x2, y2, x3, y3);\r\n  }\r\n\r\n}\r\n\r\nexport default StraightEdge;","var BarnesHutSolver = require('./components/physics/BarnesHutSolver').default;\r\nvar Repulsion = require('./components/physics/RepulsionSolver').default;\r\nvar HierarchicalRepulsion = require('./components/physics/HierarchicalRepulsionSolver').default;\r\nvar SpringSolver = require('./components/physics/SpringSolver').default;\r\nvar HierarchicalSpringSolver = require('./components/physics/HierarchicalSpringSolver').default;\r\nvar CentralGravitySolver = require('./components/physics/CentralGravitySolver').default;\r\nvar ForceAtlas2BasedRepulsionSolver = require('./components/physics/FA2BasedRepulsionSolver').default;\r\nvar ForceAtlas2BasedCentralGravitySolver = require('./components/physics/FA2BasedCentralGravitySolver').default;\r\nvar util = require('../../util');\r\nvar EndPoints = require('./components/edges/util/EndPoints').default; // for debugging with _drawForces()\r\n\r\n\r\n/**\r\n * The physics engine\r\n */\r\nclass PhysicsEngine {\r\n  /**\r\n   * @param {Object} body\r\n   */\r\n  constructor(body) {\r\n    this.body = body;\r\n    this.physicsBody = {physicsNodeIndices:[], physicsEdgeIndices:[], forces: {}, velocities: {}};\r\n\r\n    this.physicsEnabled = true;\r\n    this.simulationInterval = 1000 / 60;\r\n    this.requiresTimeout = true;\r\n    this.previousStates = {};\r\n    this.referenceState = {};\r\n    this.freezeCache = {};\r\n    this.renderTimer = undefined;\r\n\r\n    // parameters for the adaptive timestep\r\n    this.adaptiveTimestep = false;\r\n    this.adaptiveTimestepEnabled = false;\r\n    this.adaptiveCounter = 0;\r\n    this.adaptiveInterval = 3;\r\n\r\n    this.stabilized = false;\r\n    this.startedStabilization = false;\r\n    this.stabilizationIterations = 0;\r\n    this.ready = false; // will be set to true if the stabilize\r\n\r\n    // default options\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      enabled: true,\r\n      barnesHut: {\r\n        theta: 0.5,\r\n        gravitationalConstant: -2000,\r\n        centralGravity: 0.3,\r\n        springLength: 95,\r\n        springConstant: 0.04,\r\n        damping: 0.09,\r\n        avoidOverlap: 0\r\n      },\r\n      forceAtlas2Based: {\r\n        theta: 0.5,\r\n        gravitationalConstant: -50,\r\n        centralGravity: 0.01,\r\n        springConstant: 0.08,\r\n        springLength: 100,\r\n        damping: 0.4,\r\n        avoidOverlap: 0\r\n      },\r\n      repulsion: {\r\n        centralGravity: 0.2,\r\n        springLength: 200,\r\n        springConstant: 0.05,\r\n        nodeDistance: 100,\r\n        damping: 0.09,\r\n        avoidOverlap: 0\r\n      },\r\n      hierarchicalRepulsion: {\r\n        centralGravity: 0.0,\r\n        springLength: 100,\r\n        springConstant: 0.01,\r\n        nodeDistance: 120,\r\n        damping: 0.09\r\n      },\r\n      maxVelocity: 50,\r\n      minVelocity: 0.75,    // px/s\r\n      solver: 'barnesHut',\r\n      stabilization: {\r\n        enabled: true,\r\n        iterations: 1000,   // maximum number of iteration to stabilize\r\n        updateInterval: 50,\r\n        onlyDynamicEdges: false,\r\n        fit: true\r\n      },\r\n      timestep: 0.5,\r\n      adaptiveTimestep: true\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n    this.timestep = 0.5;\r\n    this.layoutFailed = false;\r\n\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    this.body.emitter.on('initPhysics',     () => {this.initPhysics();});\r\n    this.body.emitter.on('_layoutFailed',   () => {this.layoutFailed = true;});\r\n    this.body.emitter.on('resetPhysics',    () => {this.stopSimulation(); this.ready = false;});\r\n    this.body.emitter.on('disablePhysics',  () => {this.physicsEnabled = false; this.stopSimulation();});\r\n    this.body.emitter.on('restorePhysics',  () => {\r\n      this.setOptions(this.options);\r\n      if (this.ready === true) {\r\n        this.startSimulation();\r\n      }\r\n    });\r\n    this.body.emitter.on('startSimulation', () => {\r\n      if (this.ready === true) {\r\n        this.startSimulation();\r\n      }\r\n    });\r\n    this.body.emitter.on('stopSimulation',  () => {this.stopSimulation();});\r\n    this.body.emitter.on('destroy',         () => {\r\n      this.stopSimulation(false);\r\n      this.body.emitter.off();\r\n    });\r\n    this.body.emitter.on(\"_dataChanged\", () => {\r\n      // Nodes and/or edges have been added or removed, update shortcut lists.\r\n      this.updatePhysicsData();\r\n    });\r\n\r\n    // debug: show forces\r\n    // this.body.emitter.on(\"afterDrawing\", (ctx) => {this._drawForces(ctx);});\r\n  }\r\n\r\n\r\n  /**\r\n   * set the physics options\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      if (options === false) {\r\n        this.options.enabled = false;\r\n        this.physicsEnabled = false;\r\n        this.stopSimulation();\r\n      }\r\n      else if (options === true) {\r\n        this.options.enabled = true;\r\n        this.physicsEnabled = true;\r\n        this.startSimulation();\r\n      }\r\n      else {\r\n        this.physicsEnabled = true;\r\n        util.selectiveNotDeepExtend(['stabilization'], this.options, options);\r\n        util.mergeOptions(this.options, options, 'stabilization');\r\n\r\n        if (options.enabled === undefined) {\r\n          this.options.enabled = true;\r\n        }\r\n\r\n        if (this.options.enabled === false) {\r\n          this.physicsEnabled = false;\r\n          this.stopSimulation();\r\n        }\r\n\r\n        // set the timestep\r\n        this.timestep = this.options.timestep;\r\n      }\r\n    }\r\n    this.init();\r\n  }\r\n\r\n\r\n  /**\r\n   * configure the engine.\r\n   */\r\n  init() {\r\n    var options;\r\n    if (this.options.solver === 'forceAtlas2Based') {\r\n      options = this.options.forceAtlas2Based;\r\n      this.nodesSolver = new ForceAtlas2BasedRepulsionSolver(this.body, this.physicsBody, options);\r\n      this.edgesSolver = new SpringSolver(this.body, this.physicsBody, options);\r\n      this.gravitySolver = new ForceAtlas2BasedCentralGravitySolver(this.body, this.physicsBody, options);\r\n    }\r\n    else if (this.options.solver === 'repulsion') {\r\n      options = this.options.repulsion;\r\n      this.nodesSolver = new Repulsion(this.body, this.physicsBody, options);\r\n      this.edgesSolver = new SpringSolver(this.body, this.physicsBody, options);\r\n      this.gravitySolver = new CentralGravitySolver(this.body, this.physicsBody, options);\r\n    }\r\n    else if (this.options.solver === 'hierarchicalRepulsion') {\r\n      options = this.options.hierarchicalRepulsion;\r\n      this.nodesSolver = new HierarchicalRepulsion(this.body, this.physicsBody, options);\r\n      this.edgesSolver = new HierarchicalSpringSolver(this.body, this.physicsBody, options);\r\n      this.gravitySolver = new CentralGravitySolver(this.body, this.physicsBody, options);\r\n    }\r\n    else { // barnesHut\r\n      options = this.options.barnesHut;\r\n      this.nodesSolver = new BarnesHutSolver(this.body, this.physicsBody, options);\r\n      this.edgesSolver = new SpringSolver(this.body, this.physicsBody, options);\r\n      this.gravitySolver = new CentralGravitySolver(this.body, this.physicsBody, options);\r\n    }\r\n\r\n    this.modelOptions = options;\r\n  }\r\n\r\n\r\n  /**\r\n   * initialize the engine\r\n   */\r\n  initPhysics() {\r\n    if (this.physicsEnabled === true && this.options.enabled === true) {\r\n      if (this.options.stabilization.enabled === true) {\r\n        this.stabilize();\r\n      }\r\n      else {\r\n        this.stabilized = false;\r\n        this.ready = true;\r\n        this.body.emitter.emit('fit', {}, this.layoutFailed); // if the layout failed, we use the approximation for the zoom\r\n        this.startSimulation();\r\n      }\r\n    }\r\n    else {\r\n      this.ready = true;\r\n      this.body.emitter.emit('fit');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the simulation\r\n   */\r\n  startSimulation() {\r\n    if (this.physicsEnabled === true && this.options.enabled === true) {\r\n      this.stabilized = false;\r\n\r\n      // when visible, adaptivity is disabled.\r\n      this.adaptiveTimestep = false;\r\n\r\n      // this sets the width of all nodes initially which could be required for the avoidOverlap\r\n      this.body.emitter.emit(\"_resizeNodes\");\r\n      if (this.viewFunction === undefined) {\r\n        this.viewFunction = this.simulationStep.bind(this);\r\n        this.body.emitter.on('initRedraw', this.viewFunction);\r\n        this.body.emitter.emit('_startRendering');\r\n      }\r\n    }\r\n    else {\r\n      this.body.emitter.emit('_redraw');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Stop the simulation, force stabilization.\r\n   * @param {boolean} [emit=true]\r\n   */\r\n  stopSimulation(emit = true) {\r\n    this.stabilized = true;\r\n    if (emit === true) {\r\n      this._emitStabilized();\r\n    }\r\n    if (this.viewFunction !== undefined) {\r\n      this.body.emitter.off('initRedraw', this.viewFunction);\r\n      this.viewFunction = undefined;\r\n      if (emit === true) {\r\n        this.body.emitter.emit('_stopRendering');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * The viewFunction inserts this step into each render loop. It calls the physics tick and handles the cleanup at stabilized.\r\n   *\r\n   */\r\n  simulationStep() {\r\n    // check if the physics have settled\r\n    var startTime = Date.now();\r\n    this.physicsTick();\r\n    var physicsTime = Date.now() - startTime;\r\n\r\n    // run double speed if it is a little graph\r\n    if ((physicsTime < 0.4 * this.simulationInterval || this.runDoubleSpeed === true) && this.stabilized === false) {\r\n      this.physicsTick();\r\n\r\n      // this makes sure there is no jitter. The decision is taken once to run it at double speed.\r\n      this.runDoubleSpeed = true;\r\n    }\r\n\r\n    if (this.stabilized === true) {\r\n      this.stopSimulation();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * trigger the stabilized event.\r\n   *\r\n   * @param {number} [amountOfIterations=this.stabilizationIterations]\r\n   * @private\r\n   */\r\n  _emitStabilized(amountOfIterations = this.stabilizationIterations) {\r\n    if (this.stabilizationIterations > 1 || this.startedStabilization === true) {\r\n      setTimeout(() => {\r\n        this.body.emitter.emit('stabilized', {iterations: amountOfIterations});\r\n        this.startedStabilization = false;\r\n        this.stabilizationIterations = 0;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate the forces for one physics iteration and move the nodes.\r\n   * @private\r\n   */\r\n  physicsStep() {\r\n    this.gravitySolver.solve();\r\n    this.nodesSolver.solve();\r\n    this.edgesSolver.solve();\r\n    this.moveNodes();\r\n  }\r\n\r\n\r\n  /**\r\n   * Make dynamic adjustments to the timestep, based on current state.\r\n   *\r\n   * Helper function for physicsTick().\r\n   * @private\r\n   */\r\n  adjustTimeStep() {\r\n    const factor = 1.2;  // Factor for increasing the timestep on success.\r\n\r\n    // we compare the two steps. if it is acceptable we double the step.\r\n    if (this._evaluateStepQuality() === true) {\r\n      this.timestep = factor * this.timestep;\r\n    }\r\n    else {\r\n      // if not, we decrease the step to a minimum of the options timestep.\r\n      // if the decreased timestep is smaller than the options step, we do not reset the counter\r\n      // we assume that the options timestep is stable enough.\r\n      if (this.timestep/factor < this.options.timestep) {\r\n        this.timestep = this.options.timestep;\r\n      }\r\n      else {\r\n        // if the timestep was larger than 2 times the option one we check the adaptivity again to ensure\r\n        // that large instabilities do not form.\r\n        this.adaptiveCounter = -1; // check again next iteration\r\n        this.timestep = Math.max(this.options.timestep, this.timestep/factor);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * A single simulation step (or 'tick') in the physics simulation\r\n   *\r\n   * @private\r\n   */\r\n  physicsTick() {\r\n    this._startStabilizing();  // this ensures that there is no start event when the network is already stable.\r\n    if (this.stabilized === true) return;\r\n\r\n    // adaptivity means the timestep adapts to the situation, only applicable for stabilization\r\n    if (this.adaptiveTimestep === true && this.adaptiveTimestepEnabled === true) {\r\n      // timestep remains stable for \"interval\" iterations.\r\n      let doAdaptive = (this.adaptiveCounter % this.adaptiveInterval === 0);\r\n\r\n      if (doAdaptive) {\r\n        // first the big step and revert.\r\n        this.timestep = 2 * this.timestep;\r\n        this.physicsStep();\r\n        this.revert();  // saves the reference state\r\n\r\n        // now the normal step. Since this is the last step, it is the more stable one and we will take this.\r\n        this.timestep = 0.5 * this.timestep;\r\n\r\n        // since it's half the step, we do it twice.\r\n        this.physicsStep();\r\n        this.physicsStep();\r\n\r\n        this.adjustTimeStep();\r\n      }\r\n      else {\r\n        this.physicsStep();  // normal step, keeping timestep constant\r\n      }\r\n\r\n      this.adaptiveCounter += 1;\r\n    }\r\n    else {\r\n      // case for the static timestep, we reset it to the one in options and take a normal step.\r\n      this.timestep = this.options.timestep;\r\n      this.physicsStep();\r\n    }\r\n\r\n    if (this.stabilized === true) this.revert();\r\n    this.stabilizationIterations++;\r\n  }\r\n\r\n\r\n  /**\r\n   * Nodes and edges can have the physics toggles on or off. A collection of indices is created here so we can skip the check all the time.\r\n   *\r\n   * @private\r\n   */\r\n  updatePhysicsData() {\r\n    this.physicsBody.forces = {};\r\n    this.physicsBody.physicsNodeIndices = [];\r\n    this.physicsBody.physicsEdgeIndices = [];\r\n    let nodes = this.body.nodes;\r\n    let edges = this.body.edges;\r\n\r\n    // get node indices for physics\r\n    for (let nodeId in nodes) {\r\n      if (nodes.hasOwnProperty(nodeId)) {\r\n        if (nodes[nodeId].options.physics === true) {\r\n          this.physicsBody.physicsNodeIndices.push(nodes[nodeId].id);\r\n        }\r\n      }\r\n    }\r\n\r\n    // get edge indices for physics\r\n    for (let edgeId in edges) {\r\n      if (edges.hasOwnProperty(edgeId)) {\r\n        if (edges[edgeId].options.physics === true) {\r\n          this.physicsBody.physicsEdgeIndices.push(edges[edgeId].id);\r\n        }\r\n      }\r\n    }\r\n\r\n    // get the velocity and the forces vector\r\n    for (let i = 0; i < this.physicsBody.physicsNodeIndices.length; i++) {\r\n      let nodeId = this.physicsBody.physicsNodeIndices[i];\r\n      this.physicsBody.forces[nodeId] = {x:0,y:0};\r\n\r\n      // forces can be reset because they are recalculated. Velocities have to persist.\r\n      if (this.physicsBody.velocities[nodeId] === undefined) {\r\n        this.physicsBody.velocities[nodeId] = {x:0,y:0};\r\n      }\r\n    }\r\n\r\n    // clean deleted nodes from the velocity vector\r\n    for (let nodeId in this.physicsBody.velocities) {\r\n      if (nodes[nodeId] === undefined) {\r\n        delete this.physicsBody.velocities[nodeId];\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Revert the simulation one step. This is done so after stabilization, every new start of the simulation will also say stabilized.\r\n   */\r\n  revert() {\r\n    var nodeIds = Object.keys(this.previousStates);\r\n    var nodes = this.body.nodes;\r\n    var velocities = this.physicsBody.velocities;\r\n    this.referenceState = {};\r\n\r\n    for (let i = 0; i < nodeIds.length; i++) {\r\n      let nodeId = nodeIds[i];\r\n      if (nodes[nodeId] !== undefined) {\r\n        if (nodes[nodeId].options.physics === true) {\r\n          this.referenceState[nodeId] = {\r\n            positions: {x:nodes[nodeId].x, y:nodes[nodeId].y}\r\n          };\r\n          velocities[nodeId].x = this.previousStates[nodeId].vx;\r\n          velocities[nodeId].y = this.previousStates[nodeId].vy;\r\n          nodes[nodeId].x = this.previousStates[nodeId].x;\r\n          nodes[nodeId].y = this.previousStates[nodeId].y;\r\n        }\r\n      }\r\n      else {\r\n        delete this.previousStates[nodeId];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This compares the reference state to the current state\r\n   *\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _evaluateStepQuality() {\r\n    let dx, dy, dpos;\r\n    let nodes = this.body.nodes;\r\n    let reference = this.referenceState;\r\n    let posThreshold = 0.3;\r\n\r\n    for (let nodeId in this.referenceState) {\r\n      if (this.referenceState.hasOwnProperty(nodeId) && nodes[nodeId] !== undefined) {\r\n        dx = nodes[nodeId].x - reference[nodeId].positions.x;\r\n        dy = nodes[nodeId].y - reference[nodeId].positions.y;\r\n\r\n        dpos = Math.sqrt(Math.pow(dx,2) + Math.pow(dy,2))\r\n\r\n        if (dpos > posThreshold) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * move the nodes one timestep and check if they are stabilized\r\n   */\r\n  moveNodes() {\r\n    var nodeIndices = this.physicsBody.physicsNodeIndices;\r\n    var maxNodeVelocity = 0;\r\n    var averageNodeVelocity = 0;\r\n\r\n    // the velocity threshold (energy in the system) for the adaptivity toggle\r\n    var velocityAdaptiveThreshold = 5;\r\n\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      let nodeVelocity = this._performStep(nodeId);\r\n      // stabilized is true if stabilized is true and velocity is smaller than vmin --> all nodes must be stabilized\r\n      maxNodeVelocity = Math.max(maxNodeVelocity, nodeVelocity);\r\n      averageNodeVelocity += nodeVelocity;\r\n    }\r\n\r\n    // evaluating the stabilized and adaptiveTimestepEnabled conditions\r\n    this.adaptiveTimestepEnabled = (averageNodeVelocity/nodeIndices.length) < velocityAdaptiveThreshold;\r\n    this.stabilized = maxNodeVelocity < this.options.minVelocity;\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate new velocity for a coordinate direction\r\n   *\r\n   * @param {number} v  velocity for current coordinate\r\n   * @param {number} f  regular force for current coordinate\r\n   * @param {number} m  mass of current node\r\n   * @returns {number} new velocity for current coordinate\r\n   * @private\r\n   */\r\n  calculateComponentVelocity(v,f, m) {\r\n    let df = this.modelOptions.damping * v;   // damping force\r\n    let a  = (f - df) / m;    // acceleration\r\n\r\n    v += a * this.timestep;\r\n\r\n    // Put a limit on the velocities if it is really high\r\n    let maxV = this.options.maxVelocity || 1e9;\r\n    if (Math.abs(v) > maxV) {\r\n      v = ((v > 0) ? maxV: -maxV);\r\n    }\r\n\r\n    return v;\r\n  }\r\n\r\n\r\n  /**\r\n   * Perform the actual step\r\n   *\r\n   * @param {Node.id} nodeId\r\n   * @returns {number} the new velocity of given node\r\n   * @private\r\n   */\r\n  _performStep(nodeId) {\r\n    let node = this.body.nodes[nodeId];\r\n    let force = this.physicsBody.forces[nodeId];\r\n    let velocity = this.physicsBody.velocities[nodeId];\r\n\r\n    // store the state so we can revert\r\n    this.previousStates[nodeId] = {x:node.x, y:node.y, vx:velocity.x, vy:velocity.y};\r\n\r\n    if (node.options.fixed.x === false) {\r\n      velocity.x = this.calculateComponentVelocity(velocity.x, force.x, node.options.mass);\r\n      node.x += velocity.x * this.timestep;\r\n    }\r\n    else {\r\n      force.x = 0;\r\n      velocity.x = 0;\r\n    }\r\n\r\n    if (node.options.fixed.y === false) {\r\n      velocity.y = this.calculateComponentVelocity(velocity.y, force.y, node.options.mass);\r\n      node.y += velocity.y * this.timestep;\r\n    }\r\n    else {\r\n      force.y = 0;\r\n      velocity.y = 0;\r\n    }\r\n\r\n    let totalVelocity = Math.sqrt(Math.pow(velocity.x,2) + Math.pow(velocity.y,2));\r\n    return totalVelocity;\r\n  }\r\n\r\n\r\n  /**\r\n   * When initializing and stabilizing, we can freeze nodes with a predefined position.\r\n   * This greatly speeds up stabilization because only the supportnodes for the smoothCurves have to settle.\r\n   *\r\n   * @private\r\n   */\r\n  _freezeNodes() {\r\n    var nodes = this.body.nodes;\r\n    for (var id in nodes) {\r\n      if (nodes.hasOwnProperty(id)) {\r\n        if (nodes[id].x && nodes[id].y) {\r\n          let fixed = nodes[id].options.fixed;\r\n          this.freezeCache[id] = {x:fixed.x, y:fixed.y};\r\n          fixed.x = true;\r\n          fixed.y = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Unfreezes the nodes that have been frozen by _freezeDefinedNodes.\r\n   *\r\n   * @private\r\n   */\r\n  _restoreFrozenNodes() {\r\n    var nodes = this.body.nodes;\r\n    for (var id in nodes) {\r\n      if (nodes.hasOwnProperty(id)) {\r\n        if (this.freezeCache[id] !== undefined) {\r\n          nodes[id].options.fixed.x = this.freezeCache[id].x;\r\n          nodes[id].options.fixed.y = this.freezeCache[id].y;\r\n        }\r\n      }\r\n    }\r\n    this.freezeCache = {};\r\n  }\r\n\r\n  /**\r\n   * Find a stable position for all nodes\r\n   *\r\n   * @param {number} [iterations=this.options.stabilization.iterations]\r\n   */\r\n  stabilize(iterations = this.options.stabilization.iterations) {\r\n    if (typeof iterations !== 'number') {\r\n      iterations = this.options.stabilization.iterations;\r\n      console.log('The stabilize method needs a numeric amount of iterations. Switching to default: ', iterations);\r\n    }\r\n\r\n    if (this.physicsBody.physicsNodeIndices.length === 0) {\r\n      this.ready = true;\r\n      return;\r\n    }\r\n\r\n    // enable adaptive timesteps\r\n    this.adaptiveTimestep = true && this.options.adaptiveTimestep;\r\n\r\n    // this sets the width of all nodes initially which could be required for the avoidOverlap\r\n    this.body.emitter.emit(\"_resizeNodes\");\r\n\r\n    this.stopSimulation();   // stop the render loop\r\n    this.stabilized = false;\r\n\r\n    // block redraw requests\r\n    this.body.emitter.emit('_blockRedraw');\r\n    this.targetIterations = iterations;\r\n\r\n    // start the stabilization\r\n    if (this.options.stabilization.onlyDynamicEdges === true) {\r\n      this._freezeNodes();\r\n    }\r\n    this.stabilizationIterations = 0;\r\n\r\n    setTimeout(() => this._stabilizationBatch(),0);\r\n  }\r\n\r\n\r\n  /**\r\n   * If not already stabilizing, start it and emit a start event.\r\n   *\r\n   * @returns {boolean} true if stabilization started with this call\r\n   * @private\r\n   */\r\n  _startStabilizing() {\r\n    if (this.startedStabilization === true) return false;\r\n\r\n    this.body.emitter.emit('startStabilizing');\r\n    this.startedStabilization = true;\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * One batch of stabilization\r\n   * @private\r\n   */\r\n  _stabilizationBatch() {\r\n    var running = () => (this.stabilized === false && this.stabilizationIterations < this.targetIterations);\r\n\r\n    var sendProgress = () => {\r\n      this.body.emitter.emit('stabilizationProgress', {\r\n        iterations: this.stabilizationIterations,\r\n        total: this.targetIterations\r\n      });\r\n    };\r\n\r\n    if (this._startStabilizing()) {\r\n      sendProgress();  // Ensure that there is at least one start event.\r\n    }\r\n\r\n    var count = 0;\r\n    while (running() && count < this.options.stabilization.updateInterval) {\r\n      this.physicsTick();\r\n      count++;\r\n    }\r\n\r\n    sendProgress();\r\n\r\n    if (running()) {\r\n      setTimeout(this._stabilizationBatch.bind(this),0);\r\n    }\r\n    else {\r\n      this._finalizeStabilization();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Wrap up the stabilization, fit and emit the events.\r\n   * @private\r\n   */\r\n  _finalizeStabilization() {\r\n    this.body.emitter.emit('_allowRedraw');\r\n    if (this.options.stabilization.fit === true) {\r\n      this.body.emitter.emit('fit');\r\n    }\r\n\r\n    if (this.options.stabilization.onlyDynamicEdges === true) {\r\n      this._restoreFrozenNodes();\r\n    }\r\n\r\n    this.body.emitter.emit('stabilizationIterationsDone');\r\n    this.body.emitter.emit('_requestRedraw');\r\n\r\n    if (this.stabilized === true) {\r\n      this._emitStabilized();\r\n    }\r\n    else {\r\n      this.startSimulation();\r\n    }\r\n\r\n    this.ready = true;\r\n  }\r\n\r\n\r\n  //---------------------------  DEBUGGING BELOW  ---------------------------//\r\n\r\n\r\n  /**\r\n   * Debug function that display arrows for the forces currently active in the network.\r\n   *\r\n   * Use this when debugging only.\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @private\r\n   */\r\n  _drawForces(ctx) {\r\n    for (var i = 0; i < this.physicsBody.physicsNodeIndices.length; i++) {\r\n      let index = this.physicsBody.physicsNodeIndices[i];\r\n      let node = this.body.nodes[index];\r\n      let force = this.physicsBody.forces[index];\r\n      let factor = 20;\r\n      let colorFactor = 0.03;\r\n      let forceSize = Math.sqrt(Math.pow(force.x,2) + Math.pow(force.x,2));\r\n\r\n      let size = Math.min(Math.max(5,forceSize),15);\r\n      let arrowSize = 3*size;\r\n\r\n      let color = util.HSVToHex((180 - Math.min(1,Math.max(0,colorFactor*forceSize))*180) / 360,1,1);\r\n\r\n      let point = {\r\n        x: node.x + factor*force.x,\r\n        y: node.y + factor*force.y\r\n      };\r\n\r\n      ctx.lineWidth = size;\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n      ctx.moveTo(node.x,node.y);\r\n      ctx.lineTo(point.x, point.y);\r\n      ctx.stroke();\r\n\r\n      let angle = Math.atan2(force.y, force.x);\r\n      ctx.fillStyle = color;\r\n      EndPoints.draw(ctx, {type: 'arrow', point: point, angle: angle, length: arrowSize});\r\n      ctx.fill();\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default PhysicsEngine;\r\n","/**\r\n * Repulsion Solver\r\n */\r\nclass RepulsionSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * Calculate the forces the nodes apply on each other based on a repulsion field.\r\n   * This field is linearly approximated.\r\n   *\r\n   * @private\r\n   */\r\n  solve() {\r\n    var dx, dy, distance, fx, fy, repulsingForce, node1, node2;\r\n\r\n    var nodes = this.body.nodes;\r\n    var nodeIndices = this.physicsBody.physicsNodeIndices;\r\n    var forces = this.physicsBody.forces;\r\n\r\n    // repulsing forces between nodes\r\n    var nodeDistance = this.options.nodeDistance;\r\n\r\n    // approximation constants\r\n    var a = (-2 / 3) / nodeDistance;\r\n    var b = 4 / 3;\r\n\r\n    // we loop from i over all but the last entree in the array\r\n    // j loops from i+1 to the last. This way we do not double count any of the indices, nor i === j\r\n    for (let i = 0; i < nodeIndices.length - 1; i++) {\r\n      node1 = nodes[nodeIndices[i]];\r\n      for (let j = i + 1; j < nodeIndices.length; j++) {\r\n        node2 = nodes[nodeIndices[j]];\r\n\r\n        dx = node2.x - node1.x;\r\n        dy = node2.y - node1.y;\r\n        distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n        // same condition as BarnesHutSolver, making sure nodes are never 100% overlapping.\r\n        if (distance === 0) {\r\n          distance = 0.1*Math.random();\r\n          dx = distance;\r\n        }\r\n\r\n        if (distance < 2 * nodeDistance) {\r\n          if (distance < 0.5 * nodeDistance) {\r\n            repulsingForce = 1.0;\r\n          }\r\n          else {\r\n            repulsingForce = a * distance + b; // linear approx of  1 / (1 + Math.exp((distance / nodeDistance - 1) * steepness))\r\n          }\r\n          repulsingForce = repulsingForce / distance;\r\n\r\n          fx = dx * repulsingForce;\r\n          fy = dy * repulsingForce;\r\n\r\n          forces[node1.id].x -= fx;\r\n          forces[node1.id].y -= fy;\r\n          forces[node2.id].x += fx;\r\n          forces[node2.id].y += fy;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default RepulsionSolver;","/**\r\n * Hierarchical Repulsion Solver\r\n */\r\nclass HierarchicalRepulsionSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * Calculate the forces the nodes apply on each other based on a repulsion field.\r\n   * This field is linearly approximated.\r\n   *\r\n   * @private\r\n   */\r\n  solve() {\r\n    var dx, dy, distance, fx, fy, repulsingForce, node1, node2, i, j;\r\n\r\n    var nodes = this.body.nodes;\r\n    var nodeIndices = this.physicsBody.physicsNodeIndices;\r\n    var forces = this.physicsBody.forces;\r\n\r\n    // repulsing forces between nodes\r\n    var nodeDistance = this.options.nodeDistance;\r\n\r\n    // we loop from i over all but the last entree in the array\r\n    // j loops from i+1 to the last. This way we do not double count any of the indices, nor i === j\r\n    for (i = 0; i < nodeIndices.length - 1; i++) {\r\n      node1 = nodes[nodeIndices[i]];\r\n      for (j = i + 1; j < nodeIndices.length; j++) {\r\n        node2 = nodes[nodeIndices[j]];\r\n\r\n        // nodes only affect nodes on their level\r\n        if (node1.level === node2.level) {\r\n          dx = node2.x - node1.x;\r\n          dy = node2.y - node1.y;\r\n          distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n          var steepness = 0.05;\r\n          if (distance < nodeDistance) {\r\n            repulsingForce = -Math.pow(steepness * distance, 2) + Math.pow(steepness * nodeDistance, 2);\r\n          }\r\n          else {\r\n            repulsingForce = 0;\r\n          }\r\n          // normalize force with\r\n          if (distance === 0) {\r\n            distance = 0.01;\r\n          }\r\n          else {\r\n            repulsingForce = repulsingForce / distance;\r\n          }\r\n          fx = dx * repulsingForce;\r\n          fy = dy * repulsingForce;\r\n\r\n          forces[node1.id].x -= fx;\r\n          forces[node1.id].y -= fy;\r\n          forces[node2.id].x += fx;\r\n          forces[node2.id].y += fy;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default HierarchicalRepulsionSolver;","/**\r\n * Spring Solver\r\n */\r\nclass SpringSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * This function calculates the springforces on the nodes, accounting for the support nodes.\r\n   *\r\n   * @private\r\n   */\r\n  solve() {\r\n    let edgeLength, edge;\r\n    let edgeIndices = this.physicsBody.physicsEdgeIndices;\r\n    let edges = this.body.edges;\r\n    let node1, node2, node3;\r\n\r\n    // forces caused by the edges, modelled as springs\r\n    for (let i = 0; i < edgeIndices.length; i++) {\r\n      edge = edges[edgeIndices[i]];\r\n      if (edge.connected === true && edge.toId !== edge.fromId) {\r\n        // only calculate forces if nodes are in the same sector\r\n        if (this.body.nodes[edge.toId] !== undefined && this.body.nodes[edge.fromId] !== undefined) {\r\n          if (edge.edgeType.via !== undefined) {\r\n            edgeLength = edge.options.length === undefined ? this.options.springLength : edge.options.length;\r\n            node1 = edge.to;\r\n            node2 = edge.edgeType.via;\r\n            node3 = edge.from;\r\n\r\n            this._calculateSpringForce(node1, node2, 0.5 * edgeLength);\r\n            this._calculateSpringForce(node2, node3, 0.5 * edgeLength);\r\n          }\r\n          else {\r\n            // the * 1.5 is here so the edge looks as large as a smooth edge. It does not initially because the smooth edges use\r\n            // the support nodes which exert a repulsive force on the to and from nodes, making the edge appear larger.\r\n            edgeLength = edge.options.length === undefined ? this.options.springLength * 1.5: edge.options.length;\r\n            this._calculateSpringForce(edge.from, edge.to, edgeLength);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This is the code actually performing the calculation for the function above.\r\n   *\r\n   * @param {Node} node1\r\n   * @param {Node} node2\r\n   * @param {number} edgeLength\r\n   * @private\r\n   */\r\n  _calculateSpringForce(node1, node2, edgeLength) {\r\n    let dx = (node1.x - node2.x);\r\n    let dy = (node1.y - node2.y);\r\n    let distance = Math.max(Math.sqrt(dx * dx + dy * dy),0.01);\r\n\r\n    // the 1/distance is so the fx and fy can be calculated without sine or cosine.\r\n    let springForce = this.options.springConstant * (edgeLength - distance) / distance;\r\n\r\n    let fx = dx * springForce;\r\n    let fy = dy * springForce;\r\n\r\n    // handle the case where one node is not part of the physcis\r\n    if (this.physicsBody.forces[node1.id] !== undefined) {\r\n      this.physicsBody.forces[node1.id].x += fx;\r\n      this.physicsBody.forces[node1.id].y += fy;\r\n    }\r\n\r\n    if (this.physicsBody.forces[node2.id] !== undefined) {\r\n      this.physicsBody.forces[node2.id].x -= fx;\r\n      this.physicsBody.forces[node2.id].y -= fy;\r\n    }\r\n  }\r\n}\r\n\r\nexport default SpringSolver;","/**\r\n * Hierarchical Spring Solver\r\n */\r\nclass HierarchicalSpringSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    this.body = body;\r\n    this.physicsBody = physicsBody;\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * This function calculates the springforces on the nodes, accounting for the support nodes.\r\n   *\r\n   * @private\r\n   */\r\n  solve() {\r\n    var edgeLength, edge;\r\n    var dx, dy, fx, fy, springForce, distance;\r\n    var edges = this.body.edges;\r\n    var factor = 0.5;\r\n\r\n    var edgeIndices = this.physicsBody.physicsEdgeIndices;\r\n    var nodeIndices = this.physicsBody.physicsNodeIndices;\r\n    var forces = this.physicsBody.forces;\r\n\r\n    // initialize the spring force counters\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      forces[nodeId].springFx = 0;\r\n      forces[nodeId].springFy = 0;\r\n    }\r\n\r\n\r\n    // forces caused by the edges, modelled as springs\r\n    for (let i = 0; i < edgeIndices.length; i++) {\r\n      edge = edges[edgeIndices[i]];\r\n      if (edge.connected === true) {\r\n        edgeLength = edge.options.length === undefined ? this.options.springLength : edge.options.length;\r\n\r\n        dx = (edge.from.x - edge.to.x);\r\n        dy = (edge.from.y - edge.to.y);\r\n        distance = Math.sqrt(dx * dx + dy * dy);\r\n        distance = distance === 0 ? 0.01 : distance;\r\n\r\n        // the 1/distance is so the fx and fy can be calculated without sine or cosine.\r\n        springForce = this.options.springConstant * (edgeLength - distance) / distance;\r\n\r\n        fx = dx * springForce;\r\n        fy = dy * springForce;\r\n\r\n        if (edge.to.level != edge.from.level) {\r\n          if (forces[edge.toId] !== undefined) {\r\n            forces[edge.toId].springFx -= fx;\r\n            forces[edge.toId].springFy -= fy;\r\n          }\r\n          if (forces[edge.fromId] !== undefined) {\r\n            forces[edge.fromId].springFx += fx;\r\n            forces[edge.fromId].springFy += fy;\r\n          }\r\n        }\r\n        else {\r\n          if (forces[edge.toId] !== undefined) {\r\n            forces[edge.toId].x -= factor * fx;\r\n            forces[edge.toId].y -= factor * fy;\r\n          }\r\n          if (forces[edge.fromId] !== undefined) {\r\n            forces[edge.fromId].x += factor * fx;\r\n            forces[edge.fromId].y += factor * fy;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // normalize spring forces\r\n    springForce = 1;\r\n    var springFx, springFy;\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      springFx = Math.min(springForce,Math.max(-springForce,forces[nodeId].springFx));\r\n      springFy = Math.min(springForce,Math.max(-springForce,forces[nodeId].springFy));\r\n\r\n      forces[nodeId].x += springFx;\r\n      forces[nodeId].y += springFy;\r\n    }\r\n\r\n    // retain energy balance\r\n    var totalFx = 0;\r\n    var totalFy = 0;\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      totalFx += forces[nodeId].x;\r\n      totalFy += forces[nodeId].y;\r\n    }\r\n    var correctionFx = totalFx / nodeIndices.length;\r\n    var correctionFy = totalFy / nodeIndices.length;\r\n\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      let nodeId = nodeIndices[i];\r\n      forces[nodeId].x -= correctionFx;\r\n      forces[nodeId].y -= correctionFy;\r\n    }\r\n  }\r\n}\r\n\r\nexport default HierarchicalSpringSolver;\r\n","import BarnesHutSolver from \"./BarnesHutSolver\"\r\n\r\n/**\r\n * @extends BarnesHutSolver\r\n */\r\nclass ForceAtlas2BasedRepulsionSolver extends BarnesHutSolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    super(body, physicsBody, options);\r\n  }\r\n\r\n  /**\r\n   * Calculate the forces based on the distance.\r\n   *\r\n   * @param {number} distance\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   * @param {Node} node\r\n   * @param {Object} parentBranch\r\n   * @private\r\n   */\r\n  _calculateForces(distance, dx, dy, node, parentBranch) {\r\n    if (distance === 0) {\r\n      distance = 0.1 * Math.random();\r\n      dx = distance;\r\n    }\r\n\r\n    if (this.overlapAvoidanceFactor < 1 && node.shape.radius) {\r\n      distance = Math.max(0.1 + (this.overlapAvoidanceFactor * node.shape.radius), distance - node.shape.radius);\r\n    }\r\n\r\n    let degree = (node.edges.length + 1);\r\n    // the dividing by the distance cubed instead of squared allows us to get the fx and fy components without sines and cosines\r\n    // it is shorthand for gravityforce with distance squared and fx = dx/distance * gravityForce\r\n    let gravityForce = this.options.gravitationalConstant * parentBranch.mass * node.options.mass * degree / Math.pow(distance,2);\r\n    let fx = dx * gravityForce;\r\n    let fy = dy * gravityForce;\r\n\r\n    this.physicsBody.forces[node.id].x += fx;\r\n    this.physicsBody.forces[node.id].y += fy;\r\n  }\r\n}\r\n\r\nexport default ForceAtlas2BasedRepulsionSolver;\r\n","import CentralGravitySolver from \"./CentralGravitySolver\"\r\n\r\n/**\r\n * @extends CentralGravitySolver\r\n */\r\nclass ForceAtlas2BasedCentralGravitySolver extends CentralGravitySolver {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {{physicsNodeIndices: Array, physicsEdgeIndices: Array, forces: {}, velocities: {}}} physicsBody\r\n   * @param {Object} options\r\n   */\r\n  constructor(body, physicsBody, options) {\r\n    super(body, physicsBody, options);\r\n  }\r\n\r\n\r\n  /**\r\n   * Calculate the forces based on the distance.\r\n   *\r\n   * @param {number} distance\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   * @param {Object<Node.id, Node>} forces\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _calculateForces(distance, dx, dy, forces, node) {\r\n    if (distance > 0) {\r\n      let degree = (node.edges.length + 1);\r\n      let gravityForce = this.options.centralGravity * degree * node.options.mass;\r\n      forces[node.id].x = dx * gravityForce;\r\n      forces[node.id].y = dy * gravityForce;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ForceAtlas2BasedCentralGravitySolver;","/* ===========================================================================\r\n\r\n# TODO\r\n\r\n- `edgeReplacedById` not cleaned up yet on cluster edge removal\r\n- allowSingleNodeCluster could be a global option as well; currently needs to always\r\n  be passed to clustering methods\r\n\r\n----------------------------------------------\r\n\r\n# State Model for Clustering\r\n\r\nThe total state for clustering is non-trivial. It is useful to have a model\r\navailable as to how it works. The following documents the relevant state items.\r\n\r\n\r\n## Network State\r\n\r\nThe following `network`-members are relevant to clustering:\r\n\r\n- `body.nodes`       - all nodes actively participating in the network\r\n- `body.edges`       - same for edges\r\n- `body.nodeIndices` - id's of nodes that are visible at a given moment\r\n- `body.edgeIndices` - same for edges\r\n\r\nThis includes:\r\n\r\n- helper nodes for dragging in `manipulation`\r\n- helper nodes for edge type `dynamic`\r\n- cluster nodes and edges\r\n- there may be more than this.\r\n\r\nA node/edge may be missing in the `Indices` member if:\r\n\r\n- it is a helper node\r\n- the node or edge state has option `hidden` set\r\n- It is not visible due to clustering\r\n\r\n\r\n## Clustering State\r\n\r\nFor the hashes, the id's of the nodes/edges are used as key.\r\n\r\nMember `network.clustering` contains the following items:\r\n\r\n- `clusteredNodes` - hash with values: { clusterId: <id of cluster>, node: <node instance>}\r\n- `clusteredEdges` - hash with values: restore information for given edge\r\n\r\n\r\nDue to nesting of clusters, these members can contain cluster nodes and edges as well.\r\n\r\nThe important thing to note here, is that the clustered nodes and edges also\r\nappear in the members of the cluster nodes. For data update, it is therefore \r\nimportant to scan these lists as well as the cluster nodes.\r\n\r\n\r\n### Cluster Node\r\n\r\nA cluster node has the following extra fields:\r\n\r\n- `isCluster : true` - indication that this is a cluster node\r\n- `containedNodes`   - hash of nodes contained in this cluster\r\n- `containedEdges`   - same for edges\r\n- `edges`            - array of cluster edges for this node \r\n\r\n\r\n**NOTE:**\r\n\r\n- `containedEdges` can also contain edges which are not clustered; e.g. an edge\r\n   connecting two nodes in the same cluster.\r\n\r\n\r\n### Cluster Edge\r\n\r\nThese are the items in the `edges` member of a clustered node. They have the\r\nfollowing relevant members:\r\n\r\n- 'clusteringEdgeReplacingIds` - array of id's of edges replaced by this edge\r\n\r\nNote that it's possible to nest clusters, so that `clusteringEdgeReplacingIds`\r\ncan contain edge id's of other clusters.\r\n\r\n\r\n### Clustered Edge\r\n\r\nThis is any edge contained by a cluster edge. It gets the following additional\r\nmember:\r\n\r\n- `edgeReplacedById` - id of the cluster edge in which current edge is clustered\r\n\r\n\r\n   =========================================================================== */\r\nlet util = require(\"../../util\");\r\nvar NetworkUtil = require('../NetworkUtil').default;\r\nvar Cluster = require('./components/nodes/Cluster').default;\r\nvar Edge = require('./components/Edge').default;  // Only needed for check on type!\r\nvar Node = require('./components/Node').default;  // Only needed for check on type!\r\n\r\n/**\r\n * The clustering engine\r\n */\r\nclass ClusterEngine {\r\n  /**\r\n   * @param {Object} body\r\n   */\r\n  constructor(body) {\r\n    this.body = body;\r\n    this.clusteredNodes = {};  // key: node id, value: { clusterId: <id of cluster>, node: <node instance>}\r\n    this.clusteredEdges = {};  // key: edge id, value: restore information for given edge\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {};\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this.body.emitter.on('_resetData', () => {this.clusteredNodes = {}; this.clusteredEdges = {};})\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param {number} hubsize\r\n  * @param {Object} options\r\n  */\r\n  clusterByHubsize(hubsize, options) {\r\n    if (hubsize === undefined) {\r\n      hubsize = this._getHubSize();\r\n    }\r\n    else if (typeof(hubsize) === \"object\") {\r\n      options = this._checkOptions(hubsize);\r\n      hubsize = this._getHubSize();\r\n    }\r\n\r\n    let nodesToCluster = [];\r\n    for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n      let node = this.body.nodes[this.body.nodeIndices[i]];\r\n      if (node.edges.length >= hubsize) {\r\n        nodesToCluster.push(node.id);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < nodesToCluster.length; i++) {\r\n      this.clusterByConnection(nodesToCluster[i],options,true);\r\n    }\r\n\r\n    this.body.emitter.emit('_dataChanged');\r\n  }\r\n\r\n\r\n  /**\r\n   * loop over all nodes, check if they adhere to the condition and cluster if needed.\r\n   * @param {Object} options\r\n   * @param {boolean} [refreshData=true]\r\n   */\r\n  cluster(options = {}, refreshData = true) {\r\n    if (options.joinCondition === undefined) {throw new Error(\"Cannot call clusterByNodeData without a joinCondition function in the options.\");}\r\n\r\n    // check if the options object is fine, append if needed\r\n    options = this._checkOptions(options);\r\n\r\n    let childNodesObj = {};\r\n    let childEdgesObj = {};\r\n\r\n    // collect the nodes that will be in the cluster\r\n    util.forEach(this.body.nodes, (node, nodeId) => {\r\n      let clonedOptions = NetworkUtil.cloneOptions(node);\r\n      if (options.joinCondition(clonedOptions) === true) {\r\n        childNodesObj[nodeId] = node;\r\n\r\n        // collect the edges that will be in the cluster\r\n        util.forEach(node.edges, (edge) => {\r\n          if (this.clusteredEdges[edge.id] === undefined) {\r\n            childEdgesObj[edge.id] = edge;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this._cluster(childNodesObj, childEdgesObj, options, refreshData);\r\n  }\r\n\r\n\r\n  /**\r\n   * Cluster all nodes in the network that have only X edges\r\n   * @param {number} edgeCount\r\n   * @param {Object} options\r\n   * @param {boolean} [refreshData=true]\r\n   */\r\n  clusterByEdgeCount(edgeCount, options, refreshData = true) {\r\n    options = this._checkOptions(options);\r\n    let clusters = [];\r\n    let usedNodes = {};\r\n    let edge, edges, relevantEdgeCount;\r\n    // collect the nodes that will be in the cluster\r\n    for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n      let childNodesObj = {};\r\n      let childEdgesObj = {};\r\n      let nodeId = this.body.nodeIndices[i];\r\n      let node = this.body.nodes[nodeId];\r\n\r\n      // if this node is already used in another cluster this session, we do not have to re-evaluate it.\r\n      if (usedNodes[nodeId] === undefined) {\r\n        relevantEdgeCount = 0;\r\n        edges = [];\r\n        for (let j = 0; j < node.edges.length; j++) {\r\n          edge = node.edges[j];\r\n          if (this.clusteredEdges[edge.id] === undefined) {\r\n            if (edge.toId !== edge.fromId) {\r\n              relevantEdgeCount++;\r\n            }\r\n            edges.push(edge);\r\n          }\r\n        }\r\n\r\n        // this node qualifies, we collect its neighbours to start the clustering process.\r\n        if (relevantEdgeCount === edgeCount) {\r\n          var checkJoinCondition = function(node) {\r\n            if (options.joinCondition === undefined || options.joinCondition === null) {\r\n              return true;\r\n            }\r\n\r\n            let clonedOptions = NetworkUtil.cloneOptions(node);\r\n            return options.joinCondition(clonedOptions);\r\n          }\r\n\r\n          let gatheringSuccessful = true;\r\n          for (let j = 0; j < edges.length; j++) {\r\n            edge = edges[j];\r\n            let childNodeId = this._getConnectedId(edge, nodeId);\r\n            // add the nodes to the list by the join condition.\r\n            if (checkJoinCondition(node)) {\r\n              childEdgesObj[edge.id] = edge;\r\n              childNodesObj[nodeId] = node;\r\n              childNodesObj[childNodeId] = this.body.nodes[childNodeId];\r\n              usedNodes[nodeId] = true;\r\n            } else {\r\n              // this node does not qualify after all.\r\n              gatheringSuccessful = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n          // add to the cluster queue\r\n          if (Object.keys(childNodesObj).length > 0 && Object.keys(childEdgesObj).length > 0 && gatheringSuccessful === true) {\r\n            /**\r\n             * Search for cluster data that contains any of the node id's\r\n             * @returns {Boolean} true if no joinCondition, otherwise return value of joinCondition\r\n             */\r\n            var findClusterData = function() {\r\n              for (let n = 0; n < clusters.length; ++n) {\r\n                // Search for a cluster containing any of the node id's\r\n                for (var m in childNodesObj) {\r\n                  if (clusters[n].nodes[m] !== undefined) {\r\n                    return clusters[n];\r\n                  }\r\n                }\r\n              }\r\n\r\n              return undefined;\r\n            };\r\n\r\n\r\n            // If any of the found nodes is part of a cluster found in this method,\r\n            // add the current values to that cluster\r\n            var foundCluster = findClusterData();\r\n            if (foundCluster !== undefined) {\r\n              // Add nodes to found cluster if not present\r\n              for (let m in childNodesObj) {\r\n                if (foundCluster.nodes[m] === undefined) {\r\n                  foundCluster.nodes[m] = childNodesObj[m];\r\n                }\r\n              }\r\n\r\n              // Add edges to found cluster, if not present\r\n              for (let m in childEdgesObj) {\r\n                if (foundCluster.edges[m] === undefined) {\r\n                  foundCluster.edges[m] = childEdgesObj[m];\r\n                }\r\n              }\r\n            } else {\r\n              // Create a new cluster group\r\n              clusters.push({nodes: childNodesObj, edges: childEdgesObj})\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < clusters.length; i++) {\r\n      this._cluster(clusters[i].nodes, clusters[i].edges, options, false)\r\n    }\r\n\r\n    if (refreshData === true) {\r\n      this.body.emitter.emit('_dataChanged');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cluster all nodes in the network that have only 1 edge\r\n   * @param {Object} options\r\n   * @param {boolean} [refreshData=true]\r\n   */\r\n  clusterOutliers(options, refreshData = true) {\r\n    this.clusterByEdgeCount(1,options,refreshData);\r\n  }\r\n\r\n  /**\r\n   * Cluster all nodes in the network that have only 2 edge\r\n   * @param {Object} options\r\n   * @param {boolean} [refreshData=true]\r\n   */\r\n  clusterBridges(options, refreshData = true) {\r\n    this.clusterByEdgeCount(2,options,refreshData);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * suck all connected nodes of a node into the node.\r\n  * @param {Node.id} nodeId\r\n  * @param {Object} options\r\n  * @param {boolean} [refreshData=true]\r\n  */\r\n  clusterByConnection(nodeId, options, refreshData = true) {\r\n    // kill conditions\r\n    if (nodeId === undefined)             {throw new Error(\"No nodeId supplied to clusterByConnection!\");}\r\n    if (this.body.nodes[nodeId] === undefined) {throw new Error(\"The nodeId given to clusterByConnection does not exist!\");}\r\n\r\n    let node = this.body.nodes[nodeId];\r\n    options = this._checkOptions(options, node);\r\n    if (options.clusterNodeProperties.x === undefined) {options.clusterNodeProperties.x = node.x;}\r\n    if (options.clusterNodeProperties.y === undefined) {options.clusterNodeProperties.y = node.y;}\r\n    if (options.clusterNodeProperties.fixed === undefined) {\r\n      options.clusterNodeProperties.fixed = {};\r\n      options.clusterNodeProperties.fixed.x = node.options.fixed.x;\r\n      options.clusterNodeProperties.fixed.y = node.options.fixed.y;\r\n    }\r\n\r\n\r\n    let childNodesObj = {};\r\n    let childEdgesObj = {};\r\n    let parentNodeId = node.id;\r\n    let parentClonedOptions = NetworkUtil.cloneOptions(node);\r\n    childNodesObj[parentNodeId] = node;\r\n\r\n    // collect the nodes that will be in the cluster\r\n    for (let i = 0; i < node.edges.length; i++) {\r\n      let edge = node.edges[i];\r\n      if (this.clusteredEdges[edge.id] === undefined) {\r\n        let childNodeId = this._getConnectedId(edge, parentNodeId);\r\n\r\n        // if the child node is not in a cluster\r\n        if (this.clusteredNodes[childNodeId] === undefined) {\r\n          if (childNodeId !== parentNodeId) {\r\n            if (options.joinCondition === undefined) {\r\n              childEdgesObj[edge.id] = edge;\r\n              childNodesObj[childNodeId] = this.body.nodes[childNodeId];\r\n            }\r\n            else {\r\n              // clone the options and insert some additional parameters that could be interesting.\r\n              let childClonedOptions = NetworkUtil.cloneOptions(this.body.nodes[childNodeId]);\r\n              if (options.joinCondition(parentClonedOptions, childClonedOptions) === true) {\r\n                childEdgesObj[edge.id] = edge;\r\n                childNodesObj[childNodeId] = this.body.nodes[childNodeId];\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            // swallow the edge if it is self-referencing.\r\n            childEdgesObj[edge.id] = edge;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var childNodeIDs = Object.keys(childNodesObj).map(function(childNode){\r\n      return childNodesObj[childNode].id;\r\n    })\r\n\r\n    for (childNode in childNodesObj) {\r\n      if (!childNodesObj.hasOwnProperty(childNode)) continue;\r\n\r\n      var childNode = childNodesObj[childNode];\r\n      for (var y=0; y < childNode.edges.length; y++){\r\n        var childEdge = childNode.edges[y];\r\n        if (childNodeIDs.indexOf(this._getConnectedId(childEdge,childNode.id)) > -1){\r\n          childEdgesObj[childEdge.id] = childEdge;\r\n        }\r\n      }\r\n    }\r\n    this._cluster(childNodesObj, childEdgesObj, options, refreshData);\r\n  }\r\n\r\n\r\n  /**\r\n  * This function creates the edges that will be attached to the cluster\r\n  * It looks for edges that are connected to the nodes from the \"outside' of the cluster.\r\n  *\r\n  * @param {{Node.id: vis.Node}} childNodesObj\r\n  * @param {{vis.Edge.id: vis.Edge}} childEdgesObj\r\n  * @param {Object} clusterNodeProperties\r\n  * @param {Object} clusterEdgeProperties\r\n  * @private\r\n  */\r\n  _createClusterEdges (childNodesObj, childEdgesObj, clusterNodeProperties, clusterEdgeProperties) {\r\n    let edge, childNodeId, childNode, toId, fromId, otherNodeId;\r\n\r\n    // loop over all child nodes and their edges to find edges going out of the cluster\r\n    // these edges will be replaced by clusterEdges.\r\n    let childKeys = Object.keys(childNodesObj);\r\n    let createEdges = [];\r\n    for (let i = 0; i < childKeys.length; i++) {\r\n      childNodeId = childKeys[i];\r\n      childNode = childNodesObj[childNodeId];\r\n\r\n      // construct new edges from the cluster to others\r\n      for (let j = 0; j < childNode.edges.length; j++) {\r\n        edge = childNode.edges[j];\r\n        // we only handle edges that are visible to the system, not the disabled ones from the clustering process.\r\n        if (this.clusteredEdges[edge.id] === undefined) {\r\n          // self-referencing edges will be added to the \"hidden\" list\r\n          if (edge.toId == edge.fromId) {\r\n            childEdgesObj[edge.id] = edge;\r\n          }\r\n          else {\r\n            // set up the from and to.\r\n            if (edge.toId == childNodeId) { // this is a double equals because ints and strings can be interchanged here.\r\n              toId = clusterNodeProperties.id;\r\n              fromId = edge.fromId;\r\n              otherNodeId = fromId;\r\n            }\r\n            else {\r\n              toId = edge.toId;\r\n              fromId = clusterNodeProperties.id;\r\n              otherNodeId = toId;\r\n            }\r\n          }\r\n\r\n          // Only edges from the cluster outwards are being replaced.\r\n          if (childNodesObj[otherNodeId] === undefined) {\r\n            createEdges.push({edge: edge, fromId: fromId, toId: toId});\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    //\r\n    // Here we actually create the replacement edges.\r\n    //\r\n    // We could not do this in the loop above as the creation process\r\n    // would add an edge to the edges array we are iterating over.\r\n    //\r\n    // NOTE: a clustered edge can have multiple base edges!\r\n    //\r\n    var newEdges = [];\r\n\r\n    /**\r\n     * Find a cluster edge which matches the given created edge.\r\n     * @param {vis.Edge} createdEdge\r\n     * @returns {vis.Edge}\r\n     */\r\n    var getNewEdge = function(createdEdge) {\r\n      for (let j = 0; j < newEdges.length; j++) {\r\n        let newEdge = newEdges[j];\r\n\r\n        // We replace both to and from edges with a single cluster edge\r\n        let matchToDirection   = (createdEdge.fromId === newEdge.fromId && createdEdge.toId === newEdge.toId);\r\n        let matchFromDirection = (createdEdge.fromId === newEdge.toId && createdEdge.toId === newEdge.fromId);\r\n\r\n        if (matchToDirection || matchFromDirection ) {\r\n          return newEdge;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n\r\n    for (let j = 0; j < createEdges.length; j++) {\r\n      let createdEdge = createEdges[j];\r\n      let edge        = createdEdge.edge;\r\n      let newEdge     = getNewEdge(createdEdge);\r\n\r\n      if (newEdge === null) {\r\n        // Create a clustered edge for this connection\r\n        newEdge = this._createClusteredEdge(\r\n          createdEdge.fromId,\r\n          createdEdge.toId,\r\n          edge,\r\n          clusterEdgeProperties);\r\n\r\n        newEdges.push(newEdge);\r\n      } else {\r\n        newEdge.clusteringEdgeReplacingIds.push(edge.id);\r\n      }\r\n\r\n      // also reference the new edge in the old edge\r\n      this.body.edges[edge.id].edgeReplacedById = newEdge.id;\r\n\r\n      // hide the replaced edge\r\n      this._backupEdgeOptions(edge);\r\n      edge.setOptions({physics:false});\r\n    }\r\n  }\r\n\r\n  /**\r\n  * This function checks the options that can be supplied to the different cluster functions\r\n  * for certain fields and inserts defaults if needed\r\n  * @param {Object} options\r\n  * @returns {*}\r\n  * @private\r\n  */\r\n  _checkOptions(options = {}) {\r\n    if (options.clusterEdgeProperties === undefined)    {options.clusterEdgeProperties = {};}\r\n    if (options.clusterNodeProperties === undefined)    {options.clusterNodeProperties = {};}\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param {Object}    childNodesObj         | object with node objects, id as keys, same as childNodes except it also contains a source node\r\n  * @param {Object}    childEdgesObj         | object with edge objects, id as keys\r\n  * @param {Array}     options               | object with {clusterNodeProperties, clusterEdgeProperties, processProperties}\r\n  * @param {boolean}   refreshData | when true, do not wrap up\r\n  * @private\r\n  */\r\n  _cluster(childNodesObj, childEdgesObj, options, refreshData = true) {\r\n    // Remove nodes which are already clustered\r\n    var tmpNodesToRemove = []\r\n    for (let nodeId in childNodesObj) {\r\n      if (childNodesObj.hasOwnProperty(nodeId)) {\r\n        if (this.clusteredNodes[nodeId] !== undefined) {\r\n          tmpNodesToRemove.push(nodeId);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var n = 0; n < tmpNodesToRemove.length; ++n) {\r\n      delete childNodesObj[tmpNodesToRemove[n]];\r\n    }\r\n\r\n    // kill condition: no nodes don't bother\r\n    if (Object.keys(childNodesObj).length == 0) {return;}\r\n\r\n    // allow clusters of 1 if options allow\r\n    if (Object.keys(childNodesObj).length == 1 && options.clusterNodeProperties.allowSingleNodeCluster != true) {return;}\r\n\r\n    let clusterNodeProperties = util.deepExtend({},options.clusterNodeProperties);\r\n\r\n    // construct the clusterNodeProperties\r\n    if (options.processProperties !== undefined) {\r\n      // get the childNode options\r\n      let childNodesOptions = [];\r\n      for (let nodeId in childNodesObj) {\r\n        if (childNodesObj.hasOwnProperty(nodeId)) {\r\n          let clonedOptions = NetworkUtil.cloneOptions(childNodesObj[nodeId]);\r\n          childNodesOptions.push(clonedOptions);\r\n        }\r\n      }\r\n\r\n      // get cluster properties based on childNodes\r\n      let childEdgesOptions = [];\r\n      for (let edgeId in childEdgesObj) {\r\n        if (childEdgesObj.hasOwnProperty(edgeId)) {\r\n          // these cluster edges will be removed on creation of the cluster.\r\n          if (edgeId.substr(0, 12) !== \"clusterEdge:\") {\r\n            let clonedOptions = NetworkUtil.cloneOptions(childEdgesObj[edgeId], 'edge');\r\n            childEdgesOptions.push(clonedOptions);\r\n          }\r\n        }\r\n      }\r\n\r\n      clusterNodeProperties = options.processProperties(clusterNodeProperties, childNodesOptions, childEdgesOptions);\r\n      if (!clusterNodeProperties) {\r\n        throw new Error(\"The processProperties function does not return properties!\");\r\n      }\r\n    }\r\n\r\n    // check if we have an unique id;\r\n    if (clusterNodeProperties.id === undefined) {clusterNodeProperties.id = 'cluster:' + util.randomUUID();}\r\n    let clusterId = clusterNodeProperties.id;\r\n\r\n    if (clusterNodeProperties.label === undefined) {\r\n      clusterNodeProperties.label = 'cluster';\r\n    }\r\n\r\n\r\n    // give the clusterNode a position if it does not have one.\r\n    let pos = undefined;\r\n    if (clusterNodeProperties.x === undefined) {\r\n      pos = this._getClusterPosition(childNodesObj);\r\n      clusterNodeProperties.x = pos.x;\r\n    }\r\n    if (clusterNodeProperties.y === undefined) {\r\n      if (pos === undefined) {pos = this._getClusterPosition(childNodesObj);}\r\n      clusterNodeProperties.y = pos.y;\r\n    }\r\n\r\n    // force the ID to remain the same\r\n    clusterNodeProperties.id = clusterId;\r\n\r\n    // create the cluster Node\r\n    // Note that allowSingleNodeCluster, if present, is stored in the options as well\r\n    let clusterNode = this.body.functions.createNode(clusterNodeProperties, Cluster);\r\n    clusterNode.containedNodes = childNodesObj;\r\n    clusterNode.containedEdges = childEdgesObj;\r\n    // cache a copy from the cluster edge properties if we have to reconnect others later on\r\n    clusterNode.clusterEdgeProperties = options.clusterEdgeProperties;\r\n\r\n    // finally put the cluster node into global\r\n    this.body.nodes[clusterNodeProperties.id] = clusterNode;\r\n\r\n    this._clusterEdges(childNodesObj, childEdgesObj, clusterNodeProperties, options.clusterEdgeProperties);\r\n\r\n    // set ID to undefined so no duplicates arise\r\n    clusterNodeProperties.id = undefined;\r\n\r\n    // wrap up\r\n    if (refreshData === true) {\r\n      this.body.emitter.emit('_dataChanged');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Edge} edge\r\n   * @private\r\n   */\r\n  _backupEdgeOptions(edge) {\r\n    if (this.clusteredEdges[edge.id] === undefined) {\r\n      this.clusteredEdges[edge.id] = {physics: edge.options.physics};\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Edge} edge\r\n   * @private\r\n   */\r\n  _restoreEdge(edge) {\r\n    let originalOptions = this.clusteredEdges[edge.id];\r\n    if (originalOptions !== undefined) {\r\n      edge.setOptions({physics: originalOptions.physics});\r\n      delete this.clusteredEdges[edge.id];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n  * Check if a node is a cluster.\r\n  * @param {Node.id} nodeId\r\n  * @returns {*}\r\n  */\r\n  isCluster(nodeId) {\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      return this.body.nodes[nodeId].isCluster === true;\r\n    }\r\n    else {\r\n      console.log(\"Node does not exist.\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * get the position of the cluster node based on what's inside\r\n  * @param {object} childNodesObj    | object with node objects, id as keys\r\n  * @returns {{x: number, y: number}}\r\n  * @private\r\n  */\r\n  _getClusterPosition(childNodesObj) {\r\n    let childKeys = Object.keys(childNodesObj);\r\n    let minX = childNodesObj[childKeys[0]].x;\r\n    let maxX = childNodesObj[childKeys[0]].x;\r\n    let minY = childNodesObj[childKeys[0]].y;\r\n    let maxY = childNodesObj[childKeys[0]].y;\r\n    let node;\r\n    for (let i = 1; i < childKeys.length; i++) {\r\n      node = childNodesObj[childKeys[i]];\r\n      minX = node.x < minX ? node.x : minX;\r\n      maxX = node.x > maxX ? node.x : maxX;\r\n      minY = node.y < minY ? node.y : minY;\r\n      maxY = node.y > maxY ? node.y : maxY;\r\n    }\r\n\r\n\r\n    return {x: 0.5*(minX + maxX), y: 0.5*(minY + maxY)};\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Open a cluster by calling this function.\r\n   * @param {vis.Edge.id}  clusterNodeId | the ID of the cluster node\r\n   * @param {Object} options\r\n   * @param {boolean} refreshData | wrap up afterwards if not true\r\n   */\r\n  openCluster(clusterNodeId, options, refreshData = true) {\r\n    // kill conditions\r\n    if (clusterNodeId === undefined) {\r\n      throw new Error(\"No clusterNodeId supplied to openCluster.\");\r\n    }\r\n\r\n    let clusterNode = this.body.nodes[clusterNodeId];\r\n\r\n    if (clusterNode === undefined) {\r\n      throw new Error(\"The clusterNodeId supplied to openCluster does not exist.\");\r\n    }\r\n    if (clusterNode.isCluster !== true\r\n     || clusterNode.containedNodes === undefined\r\n     || clusterNode.containedEdges === undefined) {\r\n      throw new Error(\"The node:\" + clusterNodeId + \" is not a valid cluster.\");\r\n    }\r\n\r\n    // Check if current cluster is clustered itself\r\n    let stack = this.findNode(clusterNodeId);\r\n    let parentIndex = stack.indexOf(clusterNodeId) - 1;\r\n    if (parentIndex >= 0) {\r\n      // Current cluster is clustered; transfer contained nodes and edges to parent\r\n      let parentClusterNodeId = stack[parentIndex];\r\n      let parentClusterNode   = this.body.nodes[parentClusterNodeId];\r\n\r\n      // clustering.clusteredNodes and clustering.clusteredEdges remain unchanged\r\n      parentClusterNode._openChildCluster(clusterNodeId);\r\n\r\n      // All components of child cluster node have been transferred. It can die now.\r\n      delete this.body.nodes[clusterNodeId];\r\n      if (refreshData === true) {\r\n        this.body.emitter.emit('_dataChanged');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // main body \r\n    let containedNodes = clusterNode.containedNodes;\r\n    let containedEdges = clusterNode.containedEdges;\r\n\r\n    // allow the user to position the nodes after release.\r\n    if (options !== undefined && options.releaseFunction !== undefined && typeof options.releaseFunction === 'function') {\r\n      let positions = {};\r\n      let clusterPosition = {x:clusterNode.x, y:clusterNode.y};\r\n      for (let nodeId in containedNodes) {\r\n        if (containedNodes.hasOwnProperty(nodeId)) {\r\n          let containedNode = this.body.nodes[nodeId];\r\n          positions[nodeId] = {x: containedNode.x, y: containedNode.y};\r\n        }\r\n      }\r\n      let newPositions = options.releaseFunction(clusterPosition, positions);\r\n\r\n      for (let nodeId in containedNodes) {\r\n        if (containedNodes.hasOwnProperty(nodeId)) {\r\n          let containedNode = this.body.nodes[nodeId];\r\n          if (newPositions[nodeId] !== undefined) {\r\n            containedNode.x = (newPositions[nodeId].x === undefined ? clusterNode.x : newPositions[nodeId].x);\r\n            containedNode.y = (newPositions[nodeId].y === undefined ? clusterNode.y : newPositions[nodeId].y);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // copy the position from the cluster\r\n      util.forEach(containedNodes, function(containedNode) {\r\n        // inherit position\r\n        if (containedNode.options.fixed.x === false) {containedNode.x = clusterNode.x;}\r\n        if (containedNode.options.fixed.y === false) {containedNode.y = clusterNode.y;}\r\n      });\r\n    }\r\n\r\n    // release nodes\r\n    for (let nodeId in containedNodes) {\r\n      if (containedNodes.hasOwnProperty(nodeId)) {\r\n        let containedNode = this.body.nodes[nodeId];\r\n\r\n        // inherit speed\r\n        containedNode.vx = clusterNode.vx;\r\n        containedNode.vy = clusterNode.vy;\r\n\r\n        containedNode.setOptions({physics:true});\r\n\r\n        delete this.clusteredNodes[nodeId];\r\n      }\r\n    }\r\n\r\n    // copy the clusterNode edges because we cannot iterate over an object that we add or remove from.\r\n    let edgesToBeDeleted = [];\r\n    for (let i = 0; i < clusterNode.edges.length; i++) {\r\n      edgesToBeDeleted.push(clusterNode.edges[i]);\r\n    }\r\n\r\n    // actually handling the deleting.\r\n    for (let i = 0; i < edgesToBeDeleted.length; i++) {\r\n      let edge         = edgesToBeDeleted[i];\r\n      let otherNodeId  = this._getConnectedId(edge, clusterNodeId);\r\n      let otherNode    = this.clusteredNodes[otherNodeId];\r\n\r\n      for (let j = 0; j < edge.clusteringEdgeReplacingIds.length; j++) {\r\n        let transferId = edge.clusteringEdgeReplacingIds[j];\r\n        let transferEdge = this.body.edges[transferId];\r\n        if (transferEdge === undefined) continue; \r\n\r\n        // if the other node is in another cluster, we transfer ownership of this edge to the other cluster\r\n        if (otherNode !== undefined) {\r\n          // transfer ownership:\r\n          let otherCluster = this.body.nodes[otherNode.clusterId];\r\n          otherCluster.containedEdges[transferEdge.id] = transferEdge;\r\n\r\n          // delete local reference\r\n          delete containedEdges[transferEdge.id];\r\n\r\n          // get to and from\r\n          let fromId = transferEdge.fromId;\r\n          let toId = transferEdge.toId;\r\n          if (transferEdge.toId == otherNodeId) {\r\n            toId = otherNode.clusterId;\r\n          }\r\n          else {\r\n            fromId = otherNode.clusterId;\r\n          }\r\n\r\n          // create new cluster edge from the otherCluster\r\n          this._createClusteredEdge(\r\n            fromId,\r\n            toId,\r\n            transferEdge,\r\n            otherCluster.clusterEdgeProperties,\r\n            {hidden: false, physics: true});\r\n\r\n        } else {\r\n          this._restoreEdge(transferEdge);\r\n        }\r\n      }\r\n\r\n      edge.remove();\r\n    }\r\n\r\n    // handle the releasing of the edges\r\n    for (let edgeId in containedEdges) {\r\n      if (containedEdges.hasOwnProperty(edgeId)) {\r\n        this._restoreEdge(containedEdges[edgeId]);\r\n      }\r\n    }\r\n\r\n    // remove clusterNode\r\n    delete this.body.nodes[clusterNodeId];\r\n\r\n    if (refreshData === true) {\r\n      this.body.emitter.emit('_dataChanged');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Cluster.id} clusterId\r\n   * @returns {Array.<Node.id>}\r\n   */\r\n  getNodesInCluster(clusterId) {\r\n    let nodesArray = [];\r\n    if (this.isCluster(clusterId) === true) {\r\n      let containedNodes = this.body.nodes[clusterId].containedNodes;\r\n      for (let nodeId in containedNodes) {\r\n        if (containedNodes.hasOwnProperty(nodeId)) {\r\n          nodesArray.push(this.body.nodes[nodeId].id)\r\n        }\r\n      }\r\n    }\r\n\r\n    return nodesArray;\r\n  }\r\n\r\n  /**\r\n  * Get the stack clusterId's that a certain node resides in. cluster A -> cluster B -> cluster C -> node\r\n  *\r\n  * If a node can't be found in the chain, return an empty array.\r\n  *\r\n  * @param {string|number} nodeId\r\n  * @returns {Array}\r\n  */\r\n  findNode(nodeId) {\r\n    let stack = [];\r\n    let max = 100;\r\n    let counter = 0;\r\n    let node;\r\n\r\n    while (this.clusteredNodes[nodeId] !== undefined && counter < max) {\r\n      node = this.body.nodes[nodeId]\r\n      if (node === undefined) return [];\r\n      stack.push(node.id);\r\n\r\n      nodeId = this.clusteredNodes[nodeId].clusterId;\r\n      counter++;\r\n    }\r\n\r\n    node = this.body.nodes[nodeId]\r\n    if (node === undefined) return [];\r\n    stack.push(node.id);\r\n\r\n    stack.reverse();\r\n    return stack;\r\n  }\r\n\r\n  /**\r\n  * Using a clustered nodeId, update with the new options\r\n  * @param {vis.Edge.id} clusteredNodeId\r\n  * @param {object} newOptions\r\n  */\r\n  updateClusteredNode(clusteredNodeId, newOptions) {\r\n    if (clusteredNodeId === undefined) {throw new Error(\"No clusteredNodeId supplied to updateClusteredNode.\");}\r\n    if (newOptions === undefined) {throw new Error(\"No newOptions supplied to updateClusteredNode.\");}\r\n    if (this.body.nodes[clusteredNodeId] === undefined)   {throw new Error(\"The clusteredNodeId supplied to updateClusteredNode does not exist.\");}\r\n\r\n    this.body.nodes[clusteredNodeId].setOptions(newOptions);\r\n    this.body.emitter.emit('_dataChanged');\r\n  }\r\n\r\n  /**\r\n  * Using a base edgeId, update all related clustered edges with the new options\r\n  * @param {vis.Edge.id} startEdgeId\r\n  * @param {object} newOptions\r\n  */\r\n  updateEdge(startEdgeId, newOptions) {\r\n    if (startEdgeId === undefined) {throw new Error(\"No startEdgeId supplied to updateEdge.\");}\r\n    if (newOptions === undefined) {throw new Error(\"No newOptions supplied to updateEdge.\");}\r\n    if (this.body.edges[startEdgeId] === undefined)   {throw new Error(\"The startEdgeId supplied to updateEdge does not exist.\");}\r\n\r\n    let allEdgeIds = this.getClusteredEdges(startEdgeId);\r\n    for (let i = 0; i < allEdgeIds.length; i++) {\r\n      var edge = this.body.edges[allEdgeIds[i]];\r\n      edge.setOptions(newOptions);\r\n    }\r\n    this.body.emitter.emit('_dataChanged');\r\n  }\r\n\r\n  /**\r\n  * Get a stack of clusterEdgeId's (+base edgeid) that a base edge is the same as. cluster edge C -> cluster edge B -> cluster edge A -> base edge(edgeId)\r\n  * @param {vis.Edge.id} edgeId\r\n  * @returns {Array.<vis.Edge.id>}\r\n  */\r\n  getClusteredEdges(edgeId) {\r\n    let stack = [];\r\n    let max = 100;\r\n    let counter = 0;\r\n\r\n    while (edgeId !== undefined && this.body.edges[edgeId] !== undefined && counter < max) {\r\n      stack.push(this.body.edges[edgeId].id);\r\n      edgeId = this.body.edges[edgeId].edgeReplacedById;\r\n      counter++;\r\n    }\r\n    stack.reverse();\r\n    return stack;\r\n  }\r\n\r\n  /**\r\n  * Get the base edge id of clusterEdgeId. cluster edge (clusteredEdgeId) -> cluster edge B -> cluster edge C -> base edge\r\n  * @param {vis.Edge.id} clusteredEdgeId\r\n  * @returns {vis.Edge.id} baseEdgeId\r\n  *\r\n  * TODO: deprecate in 5.0.0. Method getBaseEdges() is the correct one to use.\r\n  */\r\n  getBaseEdge(clusteredEdgeId) {\r\n    // Just kludge this by returning the first base edge id found\r\n    return this.getBaseEdges(clusteredEdgeId)[0];\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all regular edges for this clustered edge id.\r\n   *\r\n   * @param {vis.Edge.id} clusteredEdgeId\r\n   * @returns {Array.<vis.Edge.id>} all baseEdgeId's under this clustered edge\r\n   */\r\n  getBaseEdges(clusteredEdgeId) {\r\n    let IdsToHandle = [clusteredEdgeId];\r\n    let doneIds     = [];\r\n    let foundIds    = [];\r\n    let max     = 100;\r\n    let counter = 0;\r\n\r\n    while (IdsToHandle.length > 0 && counter < max) {\r\n      let nextId = IdsToHandle.pop();\r\n      if (nextId === undefined) continue;     // Paranoia here and onwards\r\n      let nextEdge = this.body.edges[nextId];\r\n      if (nextEdge === undefined) continue;\r\n      counter++;\r\n\r\n      let replacingIds = nextEdge.clusteringEdgeReplacingIds;\r\n      if (replacingIds === undefined) {\r\n        // nextId is a base id\r\n        foundIds.push(nextId);\r\n      } else {\r\n        // Another cluster edge, unravel this one as well\r\n        for (let i = 0; i < replacingIds.length; ++i) {\r\n          let replacingId = replacingIds[i];\r\n\r\n          // Don't add if already handled\r\n          // TODO: never triggers; find a test-case which does\r\n          if (IdsToHandle.indexOf(replacingIds) !== -1 || doneIds.indexOf(replacingIds) !== -1) {\r\n            continue;\r\n          }\r\n\r\n          IdsToHandle.push(replacingId);\r\n        }\r\n      }\r\n\r\n      doneIds.push(nextId);\r\n    }\r\n\r\n    return foundIds;\r\n  }\r\n\r\n\r\n  /**\r\n  * Get the Id the node is connected to\r\n  * @param {vis.Edge} edge\r\n  * @param {Node.id} nodeId\r\n  * @returns {*}\r\n  * @private\r\n  */\r\n  _getConnectedId(edge, nodeId) {\r\n    if (edge.toId != nodeId) {\r\n      return edge.toId;\r\n    }\r\n    else if (edge.fromId != nodeId) {\r\n      return edge.fromId;\r\n    }\r\n    else {\r\n      return edge.fromId;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * We determine how many connections denote an important hub.\r\n  * We take the mean + 2*std as the important hub size. (Assuming a normal distribution of data, ~2.2%)\r\n  *\r\n  * @returns {number}\r\n  * @private\r\n  */\r\n  _getHubSize() {\r\n    let average = 0;\r\n    let averageSquared = 0;\r\n    let hubCounter = 0;\r\n    let largestHub = 0;\r\n\r\n    for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n      let node = this.body.nodes[this.body.nodeIndices[i]];\r\n      if (node.edges.length > largestHub) {\r\n        largestHub = node.edges.length;\r\n      }\r\n      average += node.edges.length;\r\n      averageSquared += Math.pow(node.edges.length,2);\r\n      hubCounter += 1;\r\n    }\r\n    average = average / hubCounter;\r\n    averageSquared = averageSquared / hubCounter;\r\n\r\n    let variance = averageSquared - Math.pow(average,2);\r\n    let standardDeviation = Math.sqrt(variance);\r\n\r\n    let hubThreshold = Math.floor(average + 2*standardDeviation);\r\n\r\n    // always have at least one to cluster\r\n    if (hubThreshold > largestHub) {\r\n      hubThreshold = largestHub;\r\n    }\r\n\r\n    return hubThreshold;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create an edge for the cluster representation.\r\n   *\r\n   * @param {Node.id} fromId\r\n   * @param {Node.id} toId\r\n   * @param {vis.Edge} baseEdge\r\n   * @param {Object} clusterEdgeProperties\r\n   * @param {Object} extraOptions\r\n   * @returns {Edge} newly created clustered edge\r\n   * @private\r\n   */\r\n  _createClusteredEdge(fromId, toId, baseEdge, clusterEdgeProperties, extraOptions) {\r\n    // copy the options of the edge we will replace\r\n    let clonedOptions = NetworkUtil.cloneOptions(baseEdge, 'edge');\r\n    // make sure the properties of clusterEdges are superimposed on it\r\n    util.deepExtend(clonedOptions, clusterEdgeProperties);\r\n\r\n    // set up the edge\r\n    clonedOptions.from = fromId;\r\n    clonedOptions.to   = toId;\r\n    clonedOptions.id   = 'clusterEdge:' + util.randomUUID();\r\n\r\n    // apply the edge specific options to it if specified\r\n    if (extraOptions !== undefined) {\r\n      util.deepExtend(clonedOptions, extraOptions);\r\n    }\r\n\r\n    let newEdge = this.body.functions.createEdge(clonedOptions);\r\n    newEdge.clusteringEdgeReplacingIds = [baseEdge.id];\r\n    newEdge.connect();\r\n\r\n    // Register the new edge\r\n    this.body.edges[newEdge.id] = newEdge;\r\n\r\n    return newEdge;\r\n  }\r\n\r\n\r\n  /**\r\n   * Add the passed child nodes and edges to the given cluster node.\r\n   *\r\n   * @param {Object|Node} childNodes  hash of nodes or single node to add in cluster\r\n   * @param {Object|Edge} childEdges  hash of edges or single edge to take into account when clustering\r\n   * @param {Node} clusterNode  cluster node to add nodes and edges to\r\n   * @param {Object} [clusterEdgeProperties]\r\n   * @private\r\n   */\r\n  _clusterEdges(childNodes, childEdges, clusterNode, clusterEdgeProperties) {\r\n    if (childEdges instanceof Edge) {\r\n      let edge = childEdges;\r\n      let obj = {};\r\n      obj[edge.id] = edge;\r\n      childEdges = obj;\r\n    }\r\n\r\n    if (childNodes instanceof Node) {\r\n      let node = childNodes;\r\n      let obj = {};\r\n      obj[node.id] = node;\r\n      childNodes = obj;\r\n    }\r\n\r\n    if (clusterNode === undefined || clusterNode === null) {\r\n      throw new Error(\"_clusterEdges: parameter clusterNode required\");\r\n    }\r\n\r\n    if (clusterEdgeProperties === undefined) {\r\n      // Take the required properties from the cluster node\r\n      clusterEdgeProperties = clusterNode.clusterEdgeProperties;\r\n    }\r\n\r\n    // create the new edges that will connect to the cluster.\r\n    // All self-referencing edges will be added to childEdges here.\r\n    this._createClusterEdges(childNodes, childEdges, clusterNode, clusterEdgeProperties);\r\n\r\n    // disable the childEdges\r\n    for (let edgeId in childEdges) {\r\n      if (childEdges.hasOwnProperty(edgeId)) {\r\n        if (this.body.edges[edgeId] !== undefined) {\r\n          let edge = this.body.edges[edgeId];\r\n          // cache the options before changing\r\n          this._backupEdgeOptions(edge);\r\n          // disable physics and hide the edge\r\n          edge.setOptions({physics:false});\r\n        }\r\n      }\r\n    }\r\n\r\n    // disable the childNodes\r\n    for (let nodeId in childNodes) {\r\n      if (childNodes.hasOwnProperty(nodeId)) {\r\n        this.clusteredNodes[nodeId] = {clusterId:clusterNode.id, node: this.body.nodes[nodeId]};\r\n        this.body.nodes[nodeId].setOptions({physics:false});\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine in which cluster given nodeId resides.\r\n   *\r\n   * If not in cluster, return undefined.\r\n   *\r\n   * NOTE: If you know a cleaner way to do this, please enlighten me (wimrijnders).\r\n   *\r\n   * @param {Node.id} nodeId\r\n   * @returns {Node|undefined} Node instance for cluster, if present\r\n   * @private\r\n   */\r\n  _getClusterNodeForNode(nodeId) {\r\n    if (nodeId === undefined) return undefined;\r\n    let clusteredNode = this.clusteredNodes[nodeId];\r\n\r\n    // NOTE: If no cluster info found, it should actually be an error\r\n    if (clusteredNode === undefined) return undefined;\r\n    let clusterId = clusteredNode.clusterId;\r\n    if (clusterId === undefined) return undefined;\r\n\r\n    return this.body.nodes[clusterId];\r\n  }\r\n\r\n\r\n  /**\r\n   * Internal helper function for conditionally removing items in array\r\n   *\r\n   * Done like this because Array.filter() is not fully supported by all IE's.\r\n   *\r\n   * @param {Array} arr\r\n   * @param {function} callback\r\n   * @returns {Array}\r\n   * @private\r\n   */\r\n  _filter(arr, callback) {\r\n    let ret = [];\r\n\r\n    util.forEach(arr, (item) => {\r\n      if (callback(item)) {\r\n        ret.push(item);\r\n      }\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  /**\r\n   * Scan all edges for changes in clustering and adjust this if necessary.\r\n   *\r\n   * Call this (internally) after there has been a change in node or edge data.\r\n   *\r\n   * Pre: States of this.body.nodes and this.body.edges consistent\r\n   * Pre: this.clusteredNodes and this.clusteredEdge consistent with containedNodes and containedEdges\r\n   *      of cluster nodes.\r\n   */\r\n  _updateState() {\r\n    let nodeId;\r\n    let deletedNodeIds = [];\r\n    let deletedEdgeIds = [];\r\n\r\n    /**\r\n     * Utility function to iterate over clustering nodes only\r\n     *\r\n     * @param {Function} callback  function to call for each cluster node\r\n     */\r\n    let eachClusterNode = (callback) => {\r\n      util.forEach(this.body.nodes, (node) => {\r\n        if (node.isCluster === true) {\r\n          callback(node);\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    //\r\n    // Remove deleted regular nodes from clustering\r\n    //\r\n\r\n    // Determine the deleted nodes\r\n    for (nodeId in this.clusteredNodes) {\r\n      if (!this.clusteredNodes.hasOwnProperty(nodeId)) continue;\r\n      let node = this.body.nodes[nodeId];\r\n\r\n      if (node === undefined) {\r\n        deletedNodeIds.push(nodeId);\r\n      }\r\n    }\r\n\r\n    // Remove nodes from cluster nodes\r\n    eachClusterNode(function(clusterNode) {\r\n      for (let n = 0; n < deletedNodeIds.length; n++) {\r\n        delete clusterNode.containedNodes[deletedNodeIds[n]];\r\n      }\r\n    });\r\n\r\n    // Remove nodes from cluster list\r\n    for (let n = 0; n < deletedNodeIds.length; n++) {\r\n      delete this.clusteredNodes[deletedNodeIds[n]];\r\n    }\r\n\r\n\r\n    //\r\n    // Remove deleted edges from clustering\r\n    //\r\n\r\n    // Add the deleted clustered edges to the list\r\n    util.forEach(this.clusteredEdges, (edgeId) => {\r\n      let edge = this.body.edges[edgeId];\r\n      if (edge === undefined || !edge.endPointsValid()) {\r\n        deletedEdgeIds.push(edgeId);\r\n      }\r\n    });\r\n\r\n    // Cluster nodes can also contain edges which are not clustered, \r\n    // i.e. nodes 1-2 within cluster with an edge in between.\r\n    // So the cluster nodes also need to be scanned for invalid edges\r\n    eachClusterNode(function(clusterNode) {\r\n      util.forEach(clusterNode.containedEdges, (edge, edgeId) => {\r\n        if (!edge.endPointsValid() && deletedEdgeIds.indexOf(edgeId) === -1) {\r\n          deletedEdgeIds.push(edgeId);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Also scan for cluster edges which need to be removed in the active list.\r\n    // Regular edges have been removed beforehand, so this only picks up the cluster edges.\r\n    util.forEach(this.body.edges, (edge, edgeId) => {\r\n      // Explicitly scan the contained edges for validity\r\n      let isValid = true;\r\n      let replacedIds = edge.clusteringEdgeReplacingIds;\r\n      if (replacedIds !== undefined) {\r\n        let numValid = 0;\r\n\r\n        util.forEach(replacedIds, (containedEdgeId) => {\r\n          let containedEdge   = this.body.edges[containedEdgeId];\r\n\r\n          if (containedEdge !== undefined && containedEdge.endPointsValid()) {\r\n            numValid += 1;\r\n          }\r\n        });\r\n\r\n        isValid = (numValid > 0);\r\n      }\r\n\r\n      if (!edge.endPointsValid() || !isValid) {\r\n        deletedEdgeIds.push(edgeId);\r\n      }\r\n    });\r\n\r\n    // Remove edges from cluster nodes\r\n    eachClusterNode((clusterNode) => {\r\n      util.forEach(deletedEdgeIds, (deletedEdgeId) => {\r\n        delete clusterNode.containedEdges[deletedEdgeId];\r\n\r\n        util.forEach(clusterNode.edges, (edge, m) => {\r\n          if (edge.id === deletedEdgeId) {\r\n            clusterNode.edges[m] = null;  // Don't want to directly delete here, because in the loop\r\n            return;\r\n          }\r\n\r\n          edge.clusteringEdgeReplacingIds = this._filter(edge.clusteringEdgeReplacingIds, function(id) {\r\n            return deletedEdgeIds.indexOf(id) === -1;\r\n          });\r\n        });\r\n\r\n        // Clean up the nulls\r\n        clusterNode.edges = this._filter(clusterNode.edges, function(item) {return item !== null});\r\n      });\r\n    });\r\n\r\n\r\n    // Remove from cluster list\r\n    util.forEach(deletedEdgeIds, (edgeId) => {\r\n      delete this.clusteredEdges[edgeId];\r\n    });\r\n\r\n    // Remove cluster edges from active list (this.body.edges).\r\n    // deletedEdgeIds still contains id of regular edges, but these should all\r\n    // be gone when you reach here.\r\n    util.forEach(deletedEdgeIds, (edgeId) => {\r\n      delete this.body.edges[edgeId];\r\n    });\r\n\r\n\r\n    //\r\n    // Check changed cluster state of edges\r\n    //\r\n\r\n    // Iterating over keys here, because edges may be removed in the loop\r\n    let ids = Object.keys(this.body.edges);\r\n    util.forEach(ids, (edgeId) => {\r\n      let edge = this.body.edges[edgeId];\r\n\r\n      let shouldBeClustered = this._isClusteredNode(edge.fromId) || this._isClusteredNode(edge.toId);\r\n      if (shouldBeClustered === this._isClusteredEdge(edge.id)) {\r\n        return;  // all is well\r\n      }\r\n\r\n      if (shouldBeClustered) {\r\n        // add edge to clustering\r\n        let clusterFrom = this._getClusterNodeForNode(edge.fromId);\r\n        if (clusterFrom !== undefined) {\r\n          this._clusterEdges(this.body.nodes[edge.fromId], edge, clusterFrom);\r\n        }\r\n\r\n        let clusterTo = this._getClusterNodeForNode(edge.toId);\r\n        if (clusterTo !== undefined) {\r\n          this._clusterEdges(this.body.nodes[edge.toId], edge, clusterTo);\r\n        }\r\n\r\n\t\t\t\t// TODO: check that it works for both edges clustered\r\n        //       (This might be paranoia)\r\n      } else {\r\n        // This should not be happening, the state should\r\n        // be properly updated at this point.\r\n        // \r\n        // If it *is* reached during normal operation, then we have to implement\r\n        // undo clustering for this edge here.\r\n        throw new Error('remove edge from clustering not implemented!');\r\n      }\r\n    });\r\n\r\n\r\n    // Clusters may be nested to any level. Keep on opening until nothing to open\r\n    var changed = false;\r\n    var continueLoop = true;\r\n    while (continueLoop) {\r\n      let clustersToOpen = [];\r\n\r\n      // Determine the id's of clusters that need opening\r\n      eachClusterNode(function(clusterNode) {\r\n        let numNodes = Object.keys(clusterNode.containedNodes).length;\r\n        let allowSingle = (clusterNode.options.allowSingleNodeCluster === true);\r\n        if ((allowSingle && numNodes < 1) || (!allowSingle && numNodes < 2)) {\r\n          clustersToOpen.push(clusterNode.id);\r\n        }\r\n      });\r\n\r\n      // Open them\r\n      for (let n = 0; n < clustersToOpen.length; ++n) {\r\n        this.openCluster(clustersToOpen[n], {}, false /* Don't refresh, we're in an refresh/update already */);\r\n      }\r\n\r\n      continueLoop = (clustersToOpen.length > 0);\r\n      changed = changed || continueLoop;\r\n    }\r\n\r\n    if (changed) {\r\n      this._updateState() // Redo this method (recursion possible! should be safe)\r\n    }\r\n  }\r\n\r\n\r\n /**\r\n  * Determine if node with given id is part of a cluster.\r\n  *\r\n  * @param {Node.id} nodeId\r\n  * @return {boolean} true if part of a cluster.\r\n  */\r\n  _isClusteredNode(nodeId) {\r\n    return this.clusteredNodes[nodeId] !== undefined;\r\n  }\r\n\r\n\r\n /**\r\n  * Determine if edge with given id is not visible due to clustering.\r\n  *\r\n  * An edge is considered clustered if:\r\n  * - it is directly replaced by a clustering edge\r\n  * - any of its connecting nodes is in a cluster\r\n  *\r\n  * @param {vis.Edge.id} edgeId\r\n  * @return {boolean} true if part of a cluster.\r\n  */\r\n  _isClusteredEdge(edgeId) {\r\n    return this.clusteredEdges[edgeId] !== undefined;\r\n  }\r\n}\r\n\r\n\r\nexport default ClusterEngine;\r\n","let util = require(\"../../../../util\");\r\nlet Node = require(\"../Node\").default;\r\n\r\n/**\r\n * A Cluster is a special Node that allows a group of Nodes positioned closely together\r\n * to be represented by a single Cluster Node.\r\n *\r\n * @extends Node\r\n */\r\nclass Cluster extends Node {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Array.<HTMLImageElement>}imagelist\r\n   * @param {Array} grouplist\r\n   * @param {Object} globalOptions\r\n   * @param {Object} defaultOptions     Global default options for nodes\r\n   */\r\n  constructor(options, body, imagelist, grouplist, globalOptions, defaultOptions) {\r\n    super(options, body, imagelist, grouplist, globalOptions, defaultOptions);\r\n\r\n    this.isCluster = true;\r\n    this.containedNodes = {};\r\n    this.containedEdges = {};\r\n  }\r\n\r\n\r\n  /**\r\n   * Transfer child cluster data to current and disconnect the child cluster.\r\n   *\r\n   * Please consult the header comment in 'Clustering.js' for the fields set here.\r\n   *\r\n   * @param {string|number} childClusterId  id of child cluster to open\r\n   */\r\n  _openChildCluster(childClusterId) {\r\n    let childCluster = this.body.nodes[childClusterId];\r\n    if (this.containedNodes[childClusterId] === undefined) {\r\n      throw new Error('node with id: ' + childClusterId + ' not in current cluster');\r\n    }\r\n    if (!childCluster.isCluster) {\r\n      throw new Error('node with id: ' + childClusterId + ' is not a cluster');\r\n    }\r\n\r\n    // Disconnect child cluster from current cluster\r\n    delete this.containedNodes[childClusterId];\r\n    util.forEach(childCluster.edges, (edge) => {\r\n      delete this.containedEdges[edge.id];\r\n    });\r\n\r\n    // Transfer nodes and edges\r\n    util.forEach(childCluster.containedNodes, (node, nodeId) => {\r\n      this.containedNodes[nodeId] = node;\r\n    });\r\n    childCluster.containedNodes = {};\r\n\r\n    util.forEach(childCluster.containedEdges, (edge, edgeId) => {\r\n      this.containedEdges[edgeId] = edge;\r\n    });\r\n    childCluster.containedEdges = {};\r\n\r\n    // Transfer edges within cluster edges which are clustered\r\n    util.forEach(childCluster.edges, (clusterEdge) => {\r\n      util.forEach(this.edges, (parentClusterEdge) => {\r\n        // Assumption: a clustered edge can only be present in a single clustering edge\r\n        // Not tested here\r\n        let index = parentClusterEdge.clusteringEdgeReplacingIds.indexOf(clusterEdge.id);\r\n        if (index === -1) return;\r\n\r\n        util.forEach(clusterEdge.clusteringEdgeReplacingIds, (srcId) => {\r\n          parentClusterEdge.clusteringEdgeReplacingIds.push(srcId);\r\n\r\n          // Maintain correct bookkeeping for transferred edge\r\n          this.body.edges[srcId].edgeReplacedById = parentClusterEdge.id;\r\n        });\r\n\r\n        // Remove cluster edge from parent cluster edge\r\n        parentClusterEdge.clusteringEdgeReplacingIds.splice(index, 1);\r\n      });\r\n    });\r\n    childCluster.edges = [];\r\n  }\r\n}\r\n\r\n\r\nexport default Cluster;\r\n","/**\r\n * Initializes window.requestAnimationFrame() to a usable form.\r\n *\r\n * Specifically, set up this method for the case of running on node.js with jsdom enabled.\r\n *\r\n * NOTES:\r\n *\r\n * * On node.js, when calling this directly outside of this class, `window` is not defined.\r\n *   This happens even if jsdom is used.\r\n * * For node.js + jsdom, `window` is available at the moment the constructor is called.\r\n *   For this reason, the called is placed within the constructor.\r\n * * Even then, `window.requestAnimationFrame()` is not defined, so it still needs to be added.\r\n * * During unit testing, it happens that the window object is reset during execution, causing\r\n *   a runtime error due to missing `requestAnimationFrame()`. This needs to be compensated for,\r\n *   see `_requestNextFrame()`.\r\n * * Since this is a global object, it may affect other modules besides `Network`. With normal\r\n *   usage, this does not cause any problems. During unit testing, errors may occur. These have\r\n *   been compensated for, see comment block in _requestNextFrame().\r\n *\r\n * @private\r\n */\r\nfunction _initRequestAnimationFrame() {\r\n  var func;\r\n\r\n  if (window !== undefined) {\r\n    func = window.requestAnimationFrame\r\n        || window.mozRequestAnimationFrame\r\n        || window.webkitRequestAnimationFrame\r\n        || window.msRequestAnimationFrame;\r\n  }\r\n\r\n  if (func === undefined) {\r\n    // window or method not present, setting mock requestAnimationFrame\r\n    window.requestAnimationFrame =\r\n     function(callback) {\r\n       //console.log(\"Called mock requestAnimationFrame\");\r\n       callback();\r\n     }\r\n  } else {\r\n     window.requestAnimationFrame = func;\r\n  }\r\n}\r\n\r\nlet util = require('../../util');\r\n\r\n/**\r\n * The canvas renderer\r\n */\r\nclass CanvasRenderer {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   */\r\n  constructor(body, canvas) {\r\n    _initRequestAnimationFrame();\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n\r\n    this.redrawRequested = false;\r\n    this.renderTimer = undefined;\r\n    this.requiresTimeout = true;\r\n    this.renderingActive = false;\r\n    this.renderRequests = 0;\r\n    this.allowRedraw = true;\r\n\r\n    this.dragging = false;\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      hideEdgesOnDrag: false,\r\n      hideNodesOnDrag: false\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this._determineBrowserMethod();\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    this.body.emitter.on(\"dragStart\", () => { this.dragging = true; });\r\n    this.body.emitter.on(\"dragEnd\", () => { this.dragging = false; });\r\n    this.body.emitter.on(\"_resizeNodes\", () => { this._resizeNodes(); });\r\n    this.body.emitter.on(\"_redraw\", () => {\r\n      if (this.renderingActive === false) {\r\n        this._redraw();\r\n      }\r\n    });\r\n    this.body.emitter.on(\"_blockRedraw\", () => {this.allowRedraw = false;});\r\n    this.body.emitter.on(\"_allowRedraw\", () => {this.allowRedraw = true; this.redrawRequested = false;});\r\n    this.body.emitter.on(\"_requestRedraw\", this._requestRedraw.bind(this));\r\n    this.body.emitter.on(\"_startRendering\", () => {\r\n      this.renderRequests += 1;\r\n      this.renderingActive = true;\r\n      this._startRendering();\r\n    });\r\n    this.body.emitter.on(\"_stopRendering\", () => {\r\n      this.renderRequests -= 1;\r\n      this.renderingActive = this.renderRequests > 0;\r\n      this.renderTimer = undefined;\r\n    });\r\n    this.body.emitter.on('destroy',  () => {\r\n      this.renderRequests = 0;\r\n      this.allowRedraw = false;\r\n      this.renderingActive = false;\r\n      if (this.requiresTimeout === true) {\r\n        clearTimeout(this.renderTimer);\r\n      }\r\n      else {\r\n        window.cancelAnimationFrame(this.renderTimer);\r\n      }\r\n      this.body.emitter.off();\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      let fields = ['hideEdgesOnDrag','hideNodesOnDrag'];\r\n      util.selectiveDeepExtend(fields,this.options, options);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Prepare the drawing of the next frame.\r\n   *\r\n   * Calls the callback when the next frame can or will be drawn.\r\n   *\r\n   * @param {function} callback\r\n   * @param {number} delay - timeout case only, wait this number of milliseconds\r\n   * @returns {function|undefined}\r\n   * @private\r\n   */\r\n  _requestNextFrame(callback, delay) { \r\n    // During unit testing, it happens that the mock window object is reset while\r\n    // the next frame is still pending. Then, either 'window' is not present, or\r\n    // 'requestAnimationFrame()' is not present because it is not defined on the\r\n    // mock window object.\r\n    //\r\n    // As a consequence, unrelated unit tests may appear to fail, even if the problem\r\n    // described happens in the current unit test.\r\n    //\r\n    // This is not something that will happen in normal operation, but we still need\r\n    // to take it into account.\r\n    //\r\n    if (typeof window === 'undefined') return;  // Doing `if (window === undefined)` does not work here!\r\n\r\n    let timer;\r\n\r\n    var myWindow = window;  // Grab a reference to reduce the possibility that 'window' is reset\r\n                            // while running this method.\r\n\r\n    if (this.requiresTimeout === true) {\r\n      // wait given number of milliseconds and perform the animation step function\r\n      timer = myWindow.setTimeout(callback, delay);\r\n    } else {\r\n      if (myWindow.requestAnimationFrame) {\r\n        timer = myWindow.requestAnimationFrame(callback);\r\n      }\r\n    }\r\n\r\n    return timer;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _startRendering() {\r\n    if (this.renderingActive === true) {\r\n      if (this.renderTimer === undefined) {\r\n        this.renderTimer = this._requestNextFrame(this._renderStep.bind(this), this.simulationInterval);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _renderStep() {\r\n    if (this.renderingActive === true) {\r\n      // reset the renderTimer so a new scheduled animation step can be set\r\n      this.renderTimer = undefined;\r\n\r\n      if (this.requiresTimeout === true) {\r\n        // this schedules a new simulation step\r\n        this._startRendering();\r\n      }\r\n\r\n      this._redraw();\r\n\r\n      if (this.requiresTimeout === false) {\r\n        // this schedules a new simulation step\r\n        this._startRendering();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redraw the network with the current data\r\n   * chart will be resized too.\r\n   */\r\n  redraw() {\r\n    this.body.emitter.emit('setSize');\r\n    this._redraw();\r\n  }\r\n\r\n  /**\r\n   * Redraw the network with the current data\r\n   * @private\r\n   */\r\n  _requestRedraw() {\r\n    if (this.redrawRequested !== true && this.renderingActive === false && this.allowRedraw === true) {\r\n      this.redrawRequested = true;\r\n      this._requestNextFrame(() => {this._redraw(false);}, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redraw the network with the current data\r\n   * @param {boolean} [hidden=false] | Used to get the first estimate of the node sizes.\r\n   *                                   Only the nodes are drawn after which they are quickly drawn over.\r\n   * @private\r\n   */\r\n  _redraw(hidden = false) {\r\n    if (this.allowRedraw === true) {\r\n      this.body.emitter.emit(\"initRedraw\");\r\n\r\n      this.redrawRequested = false;\r\n\r\n      // when the container div was hidden, this fixes it back up!\r\n      if (this.canvas.frame.canvas.width === 0 || this.canvas.frame.canvas.height === 0) {\r\n        this.canvas.setSize();\r\n      }\r\n\r\n      this.canvas.setTransform();\r\n\r\n      let ctx = this.canvas.getContext();\r\n\r\n      // clear the canvas\r\n      let w = this.canvas.frame.canvas.clientWidth;\r\n      let h = this.canvas.frame.canvas.clientHeight;\r\n      ctx.clearRect(0, 0, w, h);\r\n\r\n      // if the div is hidden, we stop the redraw here for performance.\r\n      if (this.canvas.frame.clientWidth === 0) {\r\n        return;\r\n      }\r\n\r\n      // set scaling and translation\r\n      ctx.save();\r\n      ctx.translate(this.body.view.translation.x, this.body.view.translation.y);\r\n      ctx.scale(this.body.view.scale, this.body.view.scale);\r\n\r\n      ctx.beginPath();\r\n      this.body.emitter.emit(\"beforeDrawing\", ctx);\r\n      ctx.closePath();\r\n\r\n      if (hidden === false) {\r\n        if (this.dragging === false || (this.dragging === true && this.options.hideEdgesOnDrag === false)) {\r\n          this._drawEdges(ctx);\r\n        }\r\n      }\r\n\r\n      if (this.dragging === false || (this.dragging === true && this.options.hideNodesOnDrag === false)) {\r\n        this._drawNodes(ctx, hidden);\r\n      }\r\n\r\n      ctx.beginPath();\r\n      this.body.emitter.emit(\"afterDrawing\", ctx);\r\n      ctx.closePath();\r\n\r\n\r\n      // restore original scaling and translation\r\n      ctx.restore();\r\n      if (hidden === true) {\r\n        ctx.clearRect(0, 0, w, h);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Redraw all nodes\r\n   *\r\n   * @param {CanvasRenderingContext2D}   ctx\r\n   * @param {boolean} [alwaysShow]\r\n   * @private\r\n   */\r\n  _resizeNodes() {\r\n    this.canvas.setTransform();\r\n    let ctx = this.canvas.getContext();\r\n    ctx.save();\r\n    ctx.translate(this.body.view.translation.x, this.body.view.translation.y);\r\n    ctx.scale(this.body.view.scale, this.body.view.scale);\r\n\r\n    let nodes = this.body.nodes;\r\n    let node;\r\n\r\n    // resize all nodes\r\n    for (let nodeId in nodes) {\r\n      if (nodes.hasOwnProperty(nodeId)) {\r\n        node = nodes[nodeId];\r\n        node.resize(ctx);\r\n        node.updateBoundingBox(ctx, node.selected);\r\n      }\r\n    }\r\n\r\n    // restore original scaling and translation\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Redraw all nodes\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx  2D context of a HTML canvas\r\n   * @param {boolean} [alwaysShow]\r\n   * @private\r\n   */\r\n  _drawNodes(ctx, alwaysShow = false) {\r\n    let nodes = this.body.nodes;\r\n    let nodeIndices = this.body.nodeIndices;\r\n    let node;\r\n    let selected = [];\r\n    let margin = 20;\r\n    let topLeft = this.canvas.DOMtoCanvas({x:-margin,y:-margin});\r\n    let bottomRight = this.canvas.DOMtoCanvas({\r\n      x: this.canvas.frame.canvas.clientWidth+margin,\r\n      y: this.canvas.frame.canvas.clientHeight+margin\r\n    });\r\n    let viewableArea = {top:topLeft.y,left:topLeft.x,bottom:bottomRight.y,right:bottomRight.x};\r\n\r\n    // draw unselected nodes;\r\n    for (let i = 0; i < nodeIndices.length; i++) {\r\n      node = nodes[nodeIndices[i]];\r\n      // set selected nodes aside\r\n      if (node.isSelected()) {\r\n        selected.push(nodeIndices[i]);\r\n      }\r\n      else {\r\n        if (alwaysShow === true) {\r\n          node.draw(ctx);\r\n        }\r\n        else if (node.isBoundingBoxOverlappingWith(viewableArea) === true) {\r\n          node.draw(ctx);\r\n        }\r\n        else {\r\n          node.updateBoundingBox(ctx, node.selected);\r\n        }\r\n      }\r\n    }\r\n\r\n    // draw the selected nodes on top\r\n    for (let i = 0; i < selected.length; i++) {\r\n      node = nodes[selected[i]];\r\n      node.draw(ctx);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Redraw all edges\r\n   * @param {CanvasRenderingContext2D} ctx  2D context of a HTML canvas\r\n   * @private\r\n   */\r\n  _drawEdges(ctx) {\r\n    let edges = this.body.edges;\r\n    let edgeIndices = this.body.edgeIndices;\r\n    let edge;\r\n\r\n    for (let i = 0; i < edgeIndices.length; i++) {\r\n      edge = edges[edgeIndices[i]];\r\n      if (edge.connected === true) {\r\n        edge.draw(ctx);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if the browser requires a setTimeout or a requestAnimationFrame. This was required because\r\n   * some implementations (safari and IE9) did not support requestAnimationFrame\r\n   * @private\r\n   */\r\n  _determineBrowserMethod() {\r\n    if (typeof window !== 'undefined') {\r\n      let browserType = navigator.userAgent.toLowerCase();\r\n      this.requiresTimeout = false;\r\n      if (browserType.indexOf('msie 9.0') != -1) { // IE 9\r\n        this.requiresTimeout = true;\r\n      }\r\n      else if (browserType.indexOf('safari') != -1) {  // safari\r\n        if (browserType.indexOf('chrome') <= -1) {\r\n          this.requiresTimeout = true;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.requiresTimeout = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasRenderer;\r\n","let Hammer = require('../../module/hammer');\r\nlet hammerUtil = require('../../hammerUtil');\r\n\r\nlet util = require('../../util');\r\n\r\n/**\r\n * Create the main frame for the Network.\r\n * This function is executed once when a Network object is created. The frame\r\n * contains a canvas, and this canvas contains all objects like the axis and\r\n * nodes.\r\n */\r\nclass Canvas {\r\n  /**\r\n   * @param {Object} body\r\n   */\r\n  constructor(body) {\r\n    this.body = body;\r\n    this.pixelRatio = 1;\r\n    this.resizeTimer = undefined;\r\n    this.resizeFunction = this._onResize.bind(this);\r\n    this.cameraState = {};\r\n    this.initialized = false;\r\n    this.canvasViewCenter = {};\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      autoResize: true,\r\n      height: '100%',\r\n      width: '100%'\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    // bind the events\r\n    this.body.emitter.once(\"resize\", (obj) => {\r\n      if (obj.width !== 0) {\r\n        this.body.view.translation.x = obj.width * 0.5;\r\n      }\r\n      if (obj.height !== 0) {\r\n        this.body.view.translation.y = obj.height * 0.5;\r\n      }\r\n    });\r\n    this.body.emitter.on(\"setSize\", this.setSize.bind(this));\r\n    this.body.emitter.on(\"destroy\", () => {\r\n      this.hammerFrame.destroy();\r\n      this.hammer.destroy();\r\n      this._cleanUp();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      let fields = ['width','height','autoResize'];\r\n      util.selectiveDeepExtend(fields,this.options, options);\r\n    }\r\n\r\n    if (this.options.autoResize === true) {\r\n      // automatically adapt to a changing size of the browser.\r\n      this._cleanUp();\r\n      this.resizeTimer = setInterval(() => {\r\n        let changed = this.setSize();\r\n        if (changed === true) {\r\n          this.body.emitter.emit(\"_requestRedraw\");\r\n        }\r\n      }, 1000);\r\n      this.resizeFunction = this._onResize.bind(this);\r\n      util.addEventListener(window,'resize',this.resizeFunction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _cleanUp() {\r\n    // automatically adapt to a changing size of the browser.\r\n    if (this.resizeTimer !== undefined) {\r\n      clearInterval(this.resizeTimer);\r\n    }\r\n    util.removeEventListener(window,'resize',this.resizeFunction);\r\n    this.resizeFunction = undefined;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onResize() {\r\n    this.setSize();\r\n    this.body.emitter.emit(\"_redraw\");\r\n  }\r\n\r\n  /**\r\n   * Get and store the cameraState\r\n   *\r\n   * @param {number} [pixelRatio=this.pixelRatio]\r\n   * @private\r\n   */\r\n  _getCameraState(pixelRatio = this.pixelRatio) {\r\n    if (this.initialized === true) {\r\n      this.cameraState.previousWidth = this.frame.canvas.width / pixelRatio;\r\n      this.cameraState.previousHeight = this.frame.canvas.height / pixelRatio;\r\n      this.cameraState.scale = this.body.view.scale;\r\n      this.cameraState.position = this.DOMtoCanvas({\r\n        x: 0.5 * this.frame.canvas.width / pixelRatio,\r\n        y: 0.5 * this.frame.canvas.height / pixelRatio\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the cameraState\r\n   * @private\r\n   */\r\n  _setCameraState() {\r\n    if (this.cameraState.scale !== undefined &&\r\n      this.frame.canvas.clientWidth !== 0 &&\r\n      this.frame.canvas.clientHeight !== 0 &&\r\n      this.pixelRatio !== 0 &&\r\n      this.cameraState.previousWidth > 0) {\r\n\r\n      let widthRatio = (this.frame.canvas.width / this.pixelRatio) / this.cameraState.previousWidth;\r\n      let heightRatio = (this.frame.canvas.height / this.pixelRatio) / this.cameraState.previousHeight;\r\n      let newScale = this.cameraState.scale;\r\n\r\n      if (widthRatio != 1 && heightRatio != 1) {\r\n        newScale = this.cameraState.scale * 0.5 * (widthRatio + heightRatio);\r\n      }\r\n      else if (widthRatio != 1) {\r\n        newScale = this.cameraState.scale * widthRatio;\r\n      }\r\n      else if (heightRatio != 1) {\r\n        newScale = this.cameraState.scale * heightRatio;\r\n      }\r\n\r\n      this.body.view.scale = newScale;\r\n      // this comes from the view module.\r\n      var currentViewCenter = this.DOMtoCanvas({\r\n        x: 0.5 * this.frame.canvas.clientWidth,\r\n        y: 0.5 * this.frame.canvas.clientHeight\r\n      });\r\n\r\n      var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\r\n        x: currentViewCenter.x - this.cameraState.position.x,\r\n        y: currentViewCenter.y - this.cameraState.position.y\r\n      };\r\n      this.body.view.translation.x += distanceFromCenter.x * this.body.view.scale;\r\n      this.body.view.translation.y += distanceFromCenter.y * this.body.view.scale;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number|string} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  _prepareValue(value) {\r\n    if (typeof value === 'number') {\r\n      return value + 'px';\r\n    }\r\n    else if (typeof value === 'string') {\r\n      if (value.indexOf('%') !== -1 || value.indexOf('px') !== -1) {\r\n        return value;\r\n      }\r\n      else if (value.indexOf('%') === -1) {\r\n        return value + 'px';\r\n      }\r\n    }\r\n    throw new Error('Could not use the value supplied for width or height:' + value);\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the HTML\r\n   */\r\n  _create() {\r\n    // remove all elements from the container element.\r\n    while (this.body.container.hasChildNodes()) {\r\n      this.body.container.removeChild(this.body.container.firstChild);\r\n    }\r\n\r\n    this.frame = document.createElement('div');\r\n    this.frame.className = 'vis-network';\r\n    this.frame.style.position = 'relative';\r\n    this.frame.style.overflow = 'hidden';\r\n    this.frame.tabIndex = 900; // tab index is required for keycharm to bind keystrokes to the div instead of the window\r\n\r\n    //////////////////////////////////////////////////////////////////\r\n\r\n    this.frame.canvas = document.createElement(\"canvas\");\r\n    this.frame.canvas.style.position = 'relative';\r\n    this.frame.appendChild(this.frame.canvas);\r\n\r\n    if (!this.frame.canvas.getContext) {\r\n      let noCanvas = document.createElement( 'DIV' );\r\n      noCanvas.style.color = 'red';\r\n      noCanvas.style.fontWeight =  'bold' ;\r\n      noCanvas.style.padding =  '10px';\r\n      noCanvas.innerHTML =  'Error: your browser does not support HTML canvas';\r\n      this.frame.canvas.appendChild(noCanvas);\r\n    }\r\n    else {\r\n      this._setPixelRatio();\r\n      this.setTransform();\r\n    }\r\n\r\n    // add the frame to the container element\r\n    this.body.container.appendChild(this.frame);\r\n\r\n    this.body.view.scale = 1;\r\n    this.body.view.translation = {x: 0.5 * this.frame.canvas.clientWidth,y: 0.5 * this.frame.canvas.clientHeight};\r\n\r\n    this._bindHammer();\r\n  }\r\n\r\n\r\n  /**\r\n   * This function binds hammer, it can be repeated over and over due to the uniqueness check.\r\n   * @private\r\n   */\r\n  _bindHammer() {\r\n    if (this.hammer !== undefined) {\r\n      this.hammer.destroy();\r\n    }\r\n    this.drag = {};\r\n    this.pinch = {};\r\n\r\n    // init hammer\r\n    this.hammer = new Hammer(this.frame.canvas);\r\n    this.hammer.get('pinch').set({enable: true});\r\n    // enable to get better response, todo: test on mobile.\r\n    this.hammer.get('pan').set({threshold:5, direction: Hammer.DIRECTION_ALL});\r\n\r\n    hammerUtil.onTouch(this.hammer, (event) => {this.body.eventListeners.onTouch(event)});\r\n    this.hammer.on('tap',       (event) => {this.body.eventListeners.onTap(event)});\r\n    this.hammer.on('doubletap', (event) => {this.body.eventListeners.onDoubleTap(event)});\r\n    this.hammer.on('press',     (event) => {this.body.eventListeners.onHold(event)});\r\n    this.hammer.on('panstart',  (event) => {this.body.eventListeners.onDragStart(event)});\r\n    this.hammer.on('panmove',   (event) => {this.body.eventListeners.onDrag(event)});\r\n    this.hammer.on('panend',    (event) => {this.body.eventListeners.onDragEnd(event)});\r\n    this.hammer.on('pinch',     (event) => {this.body.eventListeners.onPinch(event)});\r\n\r\n    // TODO: neatly cleanup these handlers when re-creating the Canvas, IF these are done with hammer, event.stopPropagation will not work?\r\n    this.frame.canvas.addEventListener('mousewheel',     (event) => {this.body.eventListeners.onMouseWheel(event)});\r\n    this.frame.canvas.addEventListener('DOMMouseScroll', (event) => {this.body.eventListeners.onMouseWheel(event)});\r\n\r\n    this.frame.canvas.addEventListener('mousemove', (event) => {this.body.eventListeners.onMouseMove(event)});\r\n    this.frame.canvas.addEventListener('contextmenu', (event) => {this.body.eventListeners.onContext(event)});\r\n\r\n    this.hammerFrame = new Hammer(this.frame);\r\n    hammerUtil.onRelease(this.hammerFrame, (event) => {this.body.eventListeners.onRelease(event)});\r\n  }\r\n\r\n\r\n  /**\r\n   * Set a new size for the network\r\n   * @param {string} width   Width in pixels or percentage (for example '800px'\r\n   *                         or '50%')\r\n   * @param {string} height  Height in pixels or percentage  (for example '400px'\r\n   *                         or '30%')\r\n   * @returns {boolean}\r\n   */\r\n  setSize(width = this.options.width, height = this.options.height) {\r\n    width = this._prepareValue(width);\r\n    height= this._prepareValue(height);\r\n\r\n    let emitEvent = false;\r\n    let oldWidth = this.frame.canvas.width;\r\n    let oldHeight = this.frame.canvas.height;\r\n\r\n    // update the pixel ratio\r\n    //\r\n    // NOTE: Comment in following is rather inconsistent; this is the ONLY place in the code\r\n    //       where it is assumed that the pixel ratio could change at runtime.\r\n    //       The only way I can think of this happening is a rotating screen or tablet; but then\r\n    //       there should be a mechanism for reloading the data (TODO: check if this is present).\r\n    //\r\n    //       If the assumption is true (i.e. pixel ratio can change at runtime), then *all* usage\r\n    //       of pixel ratio must be overhauled for this.\r\n    //\r\n    //       For the time being, I will humor the assumption here, and in the rest of the code assume it is\r\n    //       constant.\r\n    let previousRatio = this.pixelRatio; // we cache this because the camera state storage needs the old value\r\n    this._setPixelRatio();\r\n\r\n    if (width != this.options.width || height != this.options.height || this.frame.style.width != width || this.frame.style.height != height) {\r\n      this._getCameraState(previousRatio);\r\n\r\n      this.frame.style.width = width;\r\n      this.frame.style.height = height;\r\n\r\n      this.frame.canvas.style.width = '100%';\r\n      this.frame.canvas.style.height = '100%';\r\n\r\n      this.frame.canvas.width = Math.round(this.frame.canvas.clientWidth * this.pixelRatio);\r\n      this.frame.canvas.height = Math.round(this.frame.canvas.clientHeight * this.pixelRatio);\r\n\r\n      this.options.width = width;\r\n      this.options.height = height;\r\n\r\n      this.canvasViewCenter = {\r\n        x: 0.5 * this.frame.clientWidth,\r\n        y: 0.5 * this.frame.clientHeight\r\n      };\r\n\r\n      emitEvent = true;\r\n    }\r\n    else {\r\n      // this would adapt the width of the canvas to the width from 100% if and only if\r\n      // there is a change.\r\n\r\n      let newWidth  = Math.round(this.frame.canvas.clientWidth  * this.pixelRatio);\r\n      let newHeight = Math.round(this.frame.canvas.clientHeight * this.pixelRatio);\r\n\r\n      // store the camera if there is a change in size.\r\n      if (this.frame.canvas.width !== newWidth || this.frame.canvas.height !== newHeight) {\r\n        this._getCameraState(previousRatio);\r\n      }\r\n\r\n      if (this.frame.canvas.width !== newWidth) {\r\n        this.frame.canvas.width = newWidth;\r\n        emitEvent = true;\r\n      }\r\n      if (this.frame.canvas.height !== newHeight) {\r\n        this.frame.canvas.height = newHeight;\r\n        emitEvent = true;\r\n      }\r\n    }\r\n\r\n    if (emitEvent === true) {\r\n      this.body.emitter.emit('resize', {\r\n        width    : Math.round(this.frame.canvas.width / this.pixelRatio),\r\n        height   : Math.round(this.frame.canvas.height / this.pixelRatio),\r\n        oldWidth : Math.round(oldWidth / this.pixelRatio),\r\n        oldHeight: Math.round(oldHeight / this.pixelRatio)\r\n      });\r\n\r\n      // restore the camera on change.\r\n      this._setCameraState();\r\n    }\r\n\r\n\r\n    // set initialized so the get and set camera will work from now on.\r\n    this.initialized = true;\r\n    return emitEvent;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {CanvasRenderingContext2D}\r\n   */\r\n  getContext() {\r\n    return this.frame.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  /**\r\n   * Determine the pixel ratio for various browsers.\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _determinePixelRatio() {\r\n    let ctx = this.getContext();\r\n    if (ctx === undefined) {\r\n     throw new Error(\"Could not get canvax context\");\r\n    }\r\n\r\n    var numerator = 1;\r\n    if(typeof window !== 'undefined') {  // (window !== undefined) doesn't work here!\r\n      // Protection during unit tests, where 'window' can be missing\r\n      numerator = (window.devicePixelRatio || 1);\r\n    }\r\n\r\n    var denominator = (ctx.webkitBackingStorePixelRatio ||\r\n      ctx.mozBackingStorePixelRatio ||\r\n      ctx.msBackingStorePixelRatio  ||\r\n      ctx.oBackingStorePixelRatio   ||\r\n      ctx.backingStorePixelRatio    || 1);\r\n\r\n    return numerator / denominator;\r\n  }\r\n\r\n  /**\r\n   * Lazy determination of pixel ratio.\r\n   *\r\n   * @private\r\n   */\r\n  _setPixelRatio() {\r\n    this.pixelRatio = this._determinePixelRatio();\r\n  }\r\n\r\n  /**\r\n   * Set the transform in the contained context, based on its pixelRatio\r\n   */\r\n  setTransform() {\r\n    let ctx = this.getContext();\r\n    if (ctx === undefined) {\r\n     throw new Error(\"Could not get canvax context\");\r\n    }\r\n\r\n    ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\r\n  }\r\n\r\n\r\n  /**\r\n   * Convert the X coordinate in DOM-space (coordinate point in browser relative to the container div) to\r\n   * the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon)\r\n   * @param {number} x\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _XconvertDOMtoCanvas(x) {\r\n    return (x - this.body.view.translation.x) / this.body.view.scale;\r\n  }\r\n\r\n  /**\r\n   * Convert the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\r\n   * the X coordinate in DOM-space (coordinate point in browser relative to the container div)\r\n   * @param {number} x\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _XconvertCanvasToDOM(x) {\r\n    return x * this.body.view.scale + this.body.view.translation.x;\r\n  }\r\n\r\n  /**\r\n   * Convert the Y coordinate in DOM-space (coordinate point in browser relative to the container div) to\r\n   * the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon)\r\n   * @param {number} y\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _YconvertDOMtoCanvas(y) {\r\n    return (y - this.body.view.translation.y) / this.body.view.scale;\r\n  }\r\n\r\n  /**\r\n   * Convert the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\r\n   * the Y coordinate in DOM-space (coordinate point in browser relative to the container div)\r\n   * @param {number} y\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _YconvertCanvasToDOM(y) {\r\n    return y * this.body.view.scale + this.body.view.translation.y;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {point} pos\r\n   * @returns {point}\r\n   */\r\n  canvasToDOM (pos) {\r\n    return {x: this._XconvertCanvasToDOM(pos.x), y: this._YconvertCanvasToDOM(pos.y)};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {point} pos\r\n   * @returns {point}\r\n   */\r\n  DOMtoCanvas (pos) {\r\n    return {x: this._XconvertDOMtoCanvas(pos.x), y: this._YconvertDOMtoCanvas(pos.y)};\r\n  }\r\n\r\n}\r\n\r\nexport default Canvas;\r\n","let util = require('../../util');\r\n\r\nvar NetworkUtil = require('../NetworkUtil').default;\r\n\r\n/**\r\n * The view\r\n */\r\nclass View {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   */\r\n  constructor(body, canvas) {\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n\r\n    this.animationSpeed = 1/this.renderRefreshRate;\r\n    this.animationEasingFunction = \"easeInOutQuint\";\r\n    this.easingTime = 0;\r\n    this.sourceScale = 0;\r\n    this.targetScale = 0;\r\n    this.sourceTranslation = 0;\r\n    this.targetTranslation = 0;\r\n    this.lockedOnNodeId = undefined;\r\n    this.lockedOnNodeOffset = undefined;\r\n    this.touchTime = 0;\r\n\r\n    this.viewFunction = undefined;\r\n\r\n    this.body.emitter.on(\"fit\",                 this.fit.bind(this));\r\n    this.body.emitter.on(\"animationFinished\",   () => {this.body.emitter.emit(\"_stopRendering\");});\r\n    this.body.emitter.on(\"unlockNode\",          this.releaseNode.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [options={}]\r\n   */\r\n  setOptions(options = {}) {\r\n    this.options = options;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function zooms out to fit all data on screen based on amount of nodes\r\n   * @param {Object} [options={{nodes=Array}}]\r\n   * @param {boolean} [initialZoom=false]  | zoom based on fitted formula or range, true = fitted, default = false;\r\n   */\r\n  fit(options = {nodes:[]}, initialZoom = false) {\r\n    let range;\r\n    let zoomLevel;\r\n    if (options.nodes === undefined || options.nodes.length === 0) {\r\n      options.nodes = this.body.nodeIndices;\r\n    }\r\n\r\n\r\n    if (initialZoom === true) {\r\n      // check if more than half of the nodes have a predefined position. If so, we use the range, not the approximation.\r\n      let positionDefined = 0;\r\n      for (let nodeId in this.body.nodes) {\r\n        if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n          let node = this.body.nodes[nodeId];\r\n          if (node.predefinedPosition === true) {\r\n            positionDefined += 1;\r\n          }\r\n        }\r\n      }\r\n      if (positionDefined > 0.5 * this.body.nodeIndices.length) {\r\n        this.fit(options,false);\r\n        return;\r\n      }\r\n\r\n      range = NetworkUtil.getRange(this.body.nodes, options.nodes);\r\n\r\n      let numberOfNodes = this.body.nodeIndices.length;\r\n      zoomLevel = 12.662 / (numberOfNodes + 7.4147) + 0.0964822; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.\r\n\r\n      // correct for larger canvasses.\r\n      let factor = Math.min(this.canvas.frame.canvas.clientWidth / 600, this.canvas.frame.canvas.clientHeight / 600);\r\n      zoomLevel *= factor;\r\n    }\r\n    else {\r\n      this.body.emitter.emit(\"_resizeNodes\");\r\n      range = NetworkUtil.getRange(this.body.nodes, options.nodes);\r\n\r\n      let xDistance = Math.abs(range.maxX - range.minX) * 1.1;\r\n      let yDistance = Math.abs(range.maxY - range.minY) * 1.1;\r\n\r\n      let xZoomLevel = this.canvas.frame.canvas.clientWidth  / xDistance;\r\n      let yZoomLevel = this.canvas.frame.canvas.clientHeight / yDistance;\r\n\r\n      zoomLevel = (xZoomLevel <= yZoomLevel) ? xZoomLevel : yZoomLevel;\r\n    }\r\n\r\n    if (zoomLevel > 1.0) {\r\n      zoomLevel = 1.0;\r\n    }\r\n    else if (zoomLevel === 0) {\r\n      zoomLevel = 1.0;\r\n    }\r\n\r\n    let center = NetworkUtil.findCenter(range);\r\n    let animationOptions = {position: center, scale: zoomLevel, animation: options.animation};\r\n    this.moveTo(animationOptions);\r\n  }\r\n  \r\n  // animation\r\n\r\n  /**\r\n   * Center a node in view.\r\n   *\r\n   * @param {number} nodeId\r\n   * @param {number} [options]\r\n   */\r\n  focus(nodeId, options = {}) {\r\n    if (this.body.nodes[nodeId] !== undefined) {\r\n      let nodePosition = {x: this.body.nodes[nodeId].x, y: this.body.nodes[nodeId].y};\r\n      options.position = nodePosition;\r\n      options.lockedOnNode = nodeId;\r\n\r\n      this.moveTo(options)\r\n    }\r\n    else {\r\n      console.log(\"Node: \" + nodeId + \" cannot be found.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options  |  options.offset   = {x:number, y:number}   // offset from the center in DOM pixels\r\n   *                          |  options.scale    = number                 // scale to move to\r\n   *                          |  options.position = {x:number, y:number}   // position to move to\r\n   *                          |  options.animation = {duration:number, easingFunction:String} || Boolean   // position to move to\r\n   */\r\n  moveTo(options) {\r\n    if (options === undefined) {\r\n      options = {};\r\n      return;\r\n    }\r\n    if (options.offset    === undefined)           {options.offset    = {x: 0, y: 0};    }\r\n    if (options.offset.x  === undefined)           {options.offset.x  = 0;               }\r\n    if (options.offset.y  === undefined)           {options.offset.y  = 0;               }\r\n    if (options.scale     === undefined)           {options.scale     = this.body.view.scale;  }\r\n    if (options.position  === undefined)           {options.position  = this.getViewPosition();}\r\n    if (options.animation === undefined)           {options.animation = {duration:0};    }\r\n    if (options.animation === false    )           {options.animation = {duration:0};    }\r\n    if (options.animation === true     )           {options.animation = {};              }\r\n    if (options.animation.duration === undefined)  {options.animation.duration = 1000;   }  // default duration\r\n    if (options.animation.easingFunction === undefined)  {options.animation.easingFunction = \"easeInOutQuad\";  } // default easing function\r\n\r\n    this.animateView(options);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options  |  options.offset   = {x:number, y:number}   // offset from the center in DOM pixels\r\n   *                          |  options.time     = number                 // animation time in milliseconds\r\n   *                          |  options.scale    = number                 // scale to animate to\r\n   *                          |  options.position = {x:number, y:number}   // position to animate to\r\n   *                          |  options.easingFunction = String           // linear, easeInQuad, easeOutQuad, easeInOutQuad,\r\n   *                                                                       // easeInCubic, easeOutCubic, easeInOutCubic,\r\n   *                                                                       // easeInQuart, easeOutQuart, easeInOutQuart,\r\n   *                                                                       // easeInQuint, easeOutQuint, easeInOutQuint\r\n   */\r\n  animateView(options) {\r\n    if (options === undefined) {\r\n      return;\r\n    }\r\n    this.animationEasingFunction = options.animation.easingFunction;\r\n    // release if something focussed on the node\r\n    this.releaseNode();\r\n    if (options.locked === true) {\r\n      this.lockedOnNodeId = options.lockedOnNode;\r\n      this.lockedOnNodeOffset = options.offset;\r\n    }\r\n\r\n    // forcefully complete the old animation if it was still running\r\n    if (this.easingTime != 0) {\r\n      this._transitionRedraw(true); // by setting easingtime to 1, we finish the animation.\r\n    }\r\n\r\n    this.sourceScale = this.body.view.scale;\r\n    this.sourceTranslation = this.body.view.translation;\r\n    this.targetScale = options.scale;\r\n\r\n    // set the scale so the viewCenter is based on the correct zoom level. This is overridden in the transitionRedraw\r\n    // but at least then we'll have the target transition\r\n    this.body.view.scale = this.targetScale;\r\n    let viewCenter = this.canvas.DOMtoCanvas({x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight});\r\n\r\n    let distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\r\n      x: viewCenter.x - options.position.x,\r\n      y: viewCenter.y - options.position.y\r\n    };\r\n    this.targetTranslation = {\r\n      x: this.sourceTranslation.x + distanceFromCenter.x * this.targetScale + options.offset.x,\r\n      y: this.sourceTranslation.y + distanceFromCenter.y * this.targetScale + options.offset.y\r\n    };\r\n\r\n    // if the time is set to 0, don't do an animation\r\n    if (options.animation.duration === 0) {\r\n      if (this.lockedOnNodeId != undefined) {\r\n        this.viewFunction = this._lockedRedraw.bind(this);\r\n        this.body.emitter.on(\"initRedraw\", this.viewFunction);\r\n      }\r\n      else {\r\n        this.body.view.scale = this.targetScale;\r\n        this.body.view.translation = this.targetTranslation;\r\n        this.body.emitter.emit(\"_requestRedraw\");\r\n      }\r\n    }\r\n    else {\r\n      this.animationSpeed = 1 / (60 * options.animation.duration * 0.001) || 1 / 60; // 60 for 60 seconds, 0.001 for milli's\r\n      this.animationEasingFunction = options.animation.easingFunction;\r\n\r\n\r\n      this.viewFunction = this._transitionRedraw.bind(this);\r\n      this.body.emitter.on(\"initRedraw\", this.viewFunction);\r\n      this.body.emitter.emit(\"_startRendering\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * used to animate smoothly by hijacking the redraw function.\r\n   * @private\r\n   */\r\n  _lockedRedraw() {\r\n    let nodePosition = {x: this.body.nodes[this.lockedOnNodeId].x, y: this.body.nodes[this.lockedOnNodeId].y};\r\n    let viewCenter = this.canvas.DOMtoCanvas({x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight});\r\n    let distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\r\n      x: viewCenter.x - nodePosition.x,\r\n      y: viewCenter.y - nodePosition.y\r\n    };\r\n    let sourceTranslation = this.body.view.translation;\r\n    let targetTranslation = {\r\n      x: sourceTranslation.x + distanceFromCenter.x * this.body.view.scale + this.lockedOnNodeOffset.x,\r\n      y: sourceTranslation.y + distanceFromCenter.y * this.body.view.scale + this.lockedOnNodeOffset.y\r\n    };\r\n\r\n    this.body.view.translation = targetTranslation;\r\n  }\r\n\r\n  /**\r\n   * Resets state of a locked on Node\r\n   */\r\n  releaseNode() {\r\n    if (this.lockedOnNodeId !== undefined && this.viewFunction !== undefined) {\r\n      this.body.emitter.off(\"initRedraw\", this.viewFunction);\r\n      this.lockedOnNodeId = undefined;\r\n      this.lockedOnNodeOffset = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} [finished=false]\r\n   * @private\r\n   */\r\n  _transitionRedraw(finished = false) {\r\n    this.easingTime += this.animationSpeed;\r\n    this.easingTime = finished === true ? 1.0 : this.easingTime;\r\n\r\n    let progress = util.easingFunctions[this.animationEasingFunction](this.easingTime);\r\n\r\n    this.body.view.scale = this.sourceScale + (this.targetScale - this.sourceScale) * progress;\r\n    this.body.view.translation = {\r\n      x: this.sourceTranslation.x + (this.targetTranslation.x - this.sourceTranslation.x) * progress,\r\n      y: this.sourceTranslation.y + (this.targetTranslation.y - this.sourceTranslation.y) * progress\r\n    };\r\n\r\n    // cleanup\r\n    if (this.easingTime >= 1.0) {\r\n      this.body.emitter.off(\"initRedraw\", this.viewFunction);\r\n      this.easingTime = 0;\r\n      if (this.lockedOnNodeId != undefined) {\r\n        this.viewFunction = this._lockedRedraw.bind(this);\r\n        this.body.emitter.on(\"initRedraw\", this.viewFunction);\r\n      }\r\n      this.body.emitter.emit(\"animationFinished\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getScale() {\r\n    return this.body.view.scale;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  getViewPosition() {\r\n    return this.canvas.DOMtoCanvas({x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight});\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default View;","let util = require('../../util');\r\nvar NavigationHandler = require('./components/NavigationHandler').default;\r\nvar Popup = require('./../../shared/Popup').default;\r\n\r\n\r\n/**\r\n * Handler for interactions\r\n */\r\nclass InteractionHandler {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   * @param {SelectionHandler} selectionHandler\r\n   */\r\n  constructor(body, canvas, selectionHandler) {\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n    this.selectionHandler = selectionHandler;\r\n    this.navigationHandler = new NavigationHandler(body,canvas);\r\n\r\n    // bind the events from hammer to functions in this object\r\n    this.body.eventListeners.onTap        = this.onTap.bind(this);\r\n    this.body.eventListeners.onTouch      = this.onTouch.bind(this);\r\n    this.body.eventListeners.onDoubleTap  = this.onDoubleTap.bind(this);\r\n    this.body.eventListeners.onHold       = this.onHold.bind(this);\r\n    this.body.eventListeners.onDragStart  = this.onDragStart.bind(this);\r\n    this.body.eventListeners.onDrag       = this.onDrag.bind(this);\r\n    this.body.eventListeners.onDragEnd    = this.onDragEnd.bind(this);\r\n    this.body.eventListeners.onMouseWheel = this.onMouseWheel.bind(this);\r\n    this.body.eventListeners.onPinch      = this.onPinch.bind(this);\r\n    this.body.eventListeners.onMouseMove  = this.onMouseMove.bind(this);\r\n    this.body.eventListeners.onRelease    = this.onRelease.bind(this);\r\n    this.body.eventListeners.onContext    = this.onContext.bind(this);\r\n\r\n    this.touchTime = 0;\r\n    this.drag = {};\r\n    this.pinch = {};\r\n    this.popup = undefined;\r\n    this.popupObj = undefined;\r\n    this.popupTimer = undefined;\r\n\r\n    this.body.functions.getPointer = this.getPointer.bind(this);\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      dragNodes:true,\r\n      dragView: true,\r\n      hover: false,\r\n      keyboard: {\r\n        enabled: false,\r\n        speed: {x: 10, y: 10, zoom: 0.02},\r\n        bindToWindow: true\r\n      },\r\n      navigationButtons: false,\r\n      tooltipDelay: 300,\r\n      zoomView: true\r\n    };\r\n    util.extend(this.options,this.defaultOptions);\r\n\r\n    this.bindEventListeners()\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    this.body.emitter.on('destroy', () => {\r\n      clearTimeout(this.popupTimer);\r\n      delete this.body.functions.getPointer;\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      // extend all but the values in fields\r\n      let fields = ['hideEdgesOnDrag','hideNodesOnDrag','keyboard','multiselect','selectable','selectConnectedEdges'];\r\n      util.selectiveNotDeepExtend(fields, this.options, options);\r\n\r\n      // merge the keyboard options in.\r\n      util.mergeOptions(this.options, options, 'keyboard');\r\n\r\n      if (options.tooltip) {\r\n        util.extend(this.options.tooltip, options.tooltip);\r\n        if (options.tooltip.color) {\r\n          this.options.tooltip.color = util.parseColor(options.tooltip.color);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.navigationHandler.setOptions(this.options);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the pointer location from a touch location\r\n   * @param {{x: number, y: number}} touch\r\n   * @return {{x: number, y: number}} pointer\r\n   * @private\r\n   */\r\n  getPointer(touch) {\r\n    return {\r\n      x: touch.x - util.getAbsoluteLeft(this.canvas.frame.canvas),\r\n      y: touch.y - util.getAbsoluteTop(this.canvas.frame.canvas)\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * On start of a touch gesture, store the pointer\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  onTouch(event) {\r\n    if (new Date().valueOf() - this.touchTime > 50) {\r\n      this.drag.pointer = this.getPointer(event.center);\r\n      this.drag.pinched = false;\r\n      this.pinch.scale = this.body.view.scale;\r\n      // to avoid double fireing of this event because we have two hammer instances. (on canvas and on frame)\r\n      this.touchTime = new Date().valueOf();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * handle tap/click event: select/unselect a node\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onTap(event) {\r\n    let pointer = this.getPointer(event.center);\r\n    let multiselect = this.selectionHandler.options.multiselect &&\r\n        (event.changedPointers[0].ctrlKey || event.changedPointers[0].metaKey);\r\n\r\n    this.checkSelectionChanges(pointer, event, multiselect);\r\n    this.selectionHandler._generateClickEvent('click', event, pointer);\r\n  }\r\n\r\n\r\n  /**\r\n   * handle doubletap event\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onDoubleTap(event) {\r\n    let pointer = this.getPointer(event.center);\r\n    this.selectionHandler._generateClickEvent('doubleClick', event, pointer);\r\n  }\r\n\r\n\r\n  /**\r\n   * handle long tap event: multi select nodes\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onHold(event) {\r\n    let pointer = this.getPointer(event.center);\r\n    let multiselect = this.selectionHandler.options.multiselect;\r\n\r\n    this.checkSelectionChanges(pointer, event, multiselect);\r\n\r\n    this.selectionHandler._generateClickEvent('click', event, pointer);\r\n    this.selectionHandler._generateClickEvent('hold', event, pointer);\r\n  }\r\n\r\n\r\n  /**\r\n   * handle the release of the screen\r\n   *\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onRelease(event) {\r\n    if (new Date().valueOf() - this.touchTime > 10) {\r\n      let pointer = this.getPointer(event.center);\r\n      this.selectionHandler._generateClickEvent('release', event, pointer);\r\n      // to avoid double fireing of this event because we have two hammer instances. (on canvas and on frame)\r\n      this.touchTime = new Date().valueOf();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  onContext(event) {\r\n    let pointer = this.getPointer({x:event.clientX, y:event.clientY});\r\n    this.selectionHandler._generateClickEvent('oncontext', event, pointer);\r\n  }\r\n\r\n\r\n  /**\r\n   * Select and deselect nodes depending current selection change.\r\n   *\r\n   * For changing nodes, select/deselect events are fired.\r\n   *\r\n   * NOTE: For a given edge, if one connecting node is deselected and with the same\r\n   *       click the other node is selected, no events for the edge will fire.\r\n   *       It was selected and it will remain selected.\r\n   *\r\n   * TODO: This is all SelectionHandler calls; the method should be moved to there.\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @param {Event} event\r\n   * @param {boolean} [add=false]\r\n   */\r\n  checkSelectionChanges(pointer, event, add = false) {\r\n    let previousSelection = this.selectionHandler.getSelection();\r\n    let selected = false;\r\n    if (add === true) {\r\n      selected = this.selectionHandler.selectAdditionalOnPoint(pointer);\r\n    }\r\n    else {\r\n      selected = this.selectionHandler.selectOnPoint(pointer);\r\n    }\r\n    let currentSelection = this.selectionHandler.getSelection();\r\n\r\n    // See NOTE in method comment for the reason to do it like this\r\n    let deselectedItems = this._determineDifference(previousSelection, currentSelection);\r\n    let selectedItems   = this._determineDifference(currentSelection , previousSelection);\r\n\r\n    if (deselectedItems.edges.length > 0) {\r\n      this.selectionHandler._generateClickEvent('deselectEdge', event, pointer, previousSelection);\r\n      selected = true;\r\n    }\r\n\r\n    if (deselectedItems.nodes.length > 0) {\r\n      this.selectionHandler._generateClickEvent('deselectNode', event, pointer, previousSelection);\r\n      selected = true;\r\n    }\r\n\r\n    if (selectedItems.nodes.length > 0) {\r\n      this.selectionHandler._generateClickEvent('selectNode', event, pointer);\r\n      selected = true;\r\n    }\r\n\r\n    if (selectedItems.edges.length > 0) {\r\n      this.selectionHandler._generateClickEvent('selectEdge', event, pointer);\r\n      selected = true;\r\n    }\r\n\r\n    // fire the select event if anything has been selected or deselected\r\n    if (selected === true) { // select or unselect\r\n      this.selectionHandler._generateClickEvent('select', event, pointer);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove all node and edge id's from the first set that are present in the second one.\r\n   *\r\n   * @param {{nodes: Array.<Node>, edges: Array.<vis.Edge>}} firstSet\r\n   * @param {{nodes: Array.<Node>, edges: Array.<vis.Edge>}} secondSet\r\n   * @returns {{nodes: Array.<Node>, edges: Array.<vis.Edge>}}\r\n   * @private\r\n   */\r\n  _determineDifference(firstSet, secondSet) {\r\n    let arrayDiff = function(firstArr, secondArr) {\r\n      let result = [];\r\n\r\n      for (let i = 0; i < firstArr.length; i++) {\r\n        let value = firstArr[i];\r\n        if (secondArr.indexOf(value) === -1) {\r\n          result.push(value);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    return {\r\n      nodes: arrayDiff(firstSet.nodes, secondSet.nodes),\r\n      edges: arrayDiff(firstSet.edges, secondSet.edges)\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is called by onDragStart.\r\n   * It is separated out because we can then overload it for the datamanipulation system.\r\n   *\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onDragStart(event) {\r\n    //in case the touch event was triggered on an external div, do the initial touch now.\r\n    if (this.drag.pointer === undefined) {\r\n      this.onTouch(event);\r\n    }\r\n\r\n    // note: drag.pointer is set in onTouch to get the initial touch location\r\n    let node = this.selectionHandler.getNodeAt(this.drag.pointer);\r\n\r\n    this.drag.dragging = true;\r\n    this.drag.selection = [];\r\n    this.drag.translation = util.extend({},this.body.view.translation); // copy the object\r\n    this.drag.nodeId = undefined;\r\n\r\n    if (node !== undefined && this.options.dragNodes === true) {\r\n      this.drag.nodeId = node.id;\r\n      // select the clicked node if not yet selected\r\n      if (node.isSelected() === false) {\r\n        this.selectionHandler.unselectAll();\r\n        this.selectionHandler.selectObject(node);\r\n      }\r\n\r\n      // after select to contain the node\r\n      this.selectionHandler._generateClickEvent('dragStart', event, this.drag.pointer);\r\n\r\n      let selection = this.selectionHandler.selectionObj.nodes;\r\n      // create an array with the selected nodes and their original location and status\r\n      for (let nodeId in selection) {\r\n        if (selection.hasOwnProperty(nodeId)) {\r\n          let object = selection[nodeId];\r\n          let s = {\r\n            id: object.id,\r\n            node: object,\r\n\r\n            // store original x, y, xFixed and yFixed, make the node temporarily Fixed\r\n            x: object.x,\r\n            y: object.y,\r\n            xFixed: object.options.fixed.x,\r\n            yFixed: object.options.fixed.y\r\n          };\r\n\r\n          object.options.fixed.x = true;\r\n          object.options.fixed.y = true;\r\n\r\n          this.drag.selection.push(s);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // fallback if no node is selected and thus the view is dragged.\r\n      this.selectionHandler._generateClickEvent('dragStart', event, this.drag.pointer, undefined, true);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * handle drag event\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onDrag(event) {\r\n    if (this.drag.pinched === true) {\r\n      return;\r\n    }\r\n\r\n    // remove the focus on node if it is focussed on by the focusOnNode\r\n    this.body.emitter.emit('unlockNode');\r\n\r\n    let pointer = this.getPointer(event.center);\r\n\r\n    let selection = this.drag.selection;\r\n    if (selection && selection.length && this.options.dragNodes === true) {\r\n      this.selectionHandler._generateClickEvent('dragging', event, pointer);\r\n\r\n      // calculate delta's and new location\r\n      let deltaX = pointer.x - this.drag.pointer.x;\r\n      let deltaY = pointer.y - this.drag.pointer.y;\r\n\r\n      // update position of all selected nodes\r\n      selection.forEach((selection) => {\r\n        let node = selection.node;\r\n        // only move the node if it was not fixed initially\r\n        if (selection.xFixed === false) {\r\n          node.x = this.canvas._XconvertDOMtoCanvas(this.canvas._XconvertCanvasToDOM(selection.x) + deltaX);\r\n        }\r\n        // only move the node if it was not fixed initially\r\n        if (selection.yFixed === false) {\r\n          node.y = this.canvas._YconvertDOMtoCanvas(this.canvas._YconvertCanvasToDOM(selection.y) + deltaY);\r\n        }\r\n      });\r\n\r\n      // start the simulation of the physics\r\n      this.body.emitter.emit('startSimulation');\r\n    }\r\n    else {\r\n      // move the network\r\n      if (this.options.dragView === true) {\r\n        this.selectionHandler._generateClickEvent('dragging', event, pointer, undefined, true);\r\n\r\n        // if the drag was not started properly because the click started outside the network div, start it now.\r\n        if (this.drag.pointer === undefined) {\r\n          this.onDragStart(event);\r\n          return;\r\n        }\r\n        let diffX = pointer.x - this.drag.pointer.x;\r\n        let diffY = pointer.y - this.drag.pointer.y;\r\n\r\n        this.body.view.translation = {x:this.drag.translation.x + diffX, y:this.drag.translation.y + diffY};\r\n        this.body.emitter.emit('_requestRedraw');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * handle drag start event\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  onDragEnd(event) {\r\n    this.drag.dragging = false;\r\n    let selection = this.drag.selection;\r\n    if (selection && selection.length) {\r\n      selection.forEach(function (s) {\r\n        // restore original xFixed and yFixed\r\n        s.node.options.fixed.x = s.xFixed;\r\n        s.node.options.fixed.y = s.yFixed;\r\n      });\r\n      this.selectionHandler._generateClickEvent('dragEnd', event, this.getPointer(event.center));\r\n      this.body.emitter.emit('startSimulation');\r\n    }\r\n    else {\r\n      this.selectionHandler._generateClickEvent('dragEnd', event, this.getPointer(event.center), undefined, true);\r\n      this.body.emitter.emit('_requestRedraw');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Handle pinch event\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  onPinch(event) {\r\n    let pointer = this.getPointer(event.center);\r\n\r\n    this.drag.pinched = true;\r\n    if (this.pinch['scale'] === undefined) {\r\n      this.pinch.scale = 1;\r\n    }\r\n\r\n    // TODO: enabled moving while pinching?\r\n    let scale = this.pinch.scale * event.scale;\r\n    this.zoom(scale, pointer)\r\n  }\r\n\r\n\r\n  /**\r\n   * Zoom the network in or out\r\n   * @param {number} scale a number around 1, and between 0.01 and 10\r\n   * @param {{x: number, y: number}} pointer    Position on screen\r\n   * @private\r\n   */\r\n  zoom(scale, pointer) {\r\n    if (this.options.zoomView === true) {\r\n      let scaleOld = this.body.view.scale;\r\n      if (scale < 0.00001) {\r\n        scale = 0.00001;\r\n      }\r\n      if (scale > 10) {\r\n        scale = 10;\r\n      }\r\n\r\n      let preScaleDragPointer = undefined;\r\n      if (this.drag !== undefined) {\r\n        if (this.drag.dragging === true) {\r\n          preScaleDragPointer = this.canvas.DOMtoCanvas(this.drag.pointer);\r\n        }\r\n      }\r\n      // + this.canvas.frame.canvas.clientHeight / 2\r\n      let translation = this.body.view.translation;\r\n\r\n      let scaleFrac = scale / scaleOld;\r\n      let tx = (1 - scaleFrac) * pointer.x + translation.x * scaleFrac;\r\n      let ty = (1 - scaleFrac) * pointer.y + translation.y * scaleFrac;\r\n\r\n      this.body.view.scale = scale;\r\n      this.body.view.translation = {x:tx, y:ty};\r\n\r\n      if (preScaleDragPointer != undefined) {\r\n        let postScaleDragPointer = this.canvas.canvasToDOM(preScaleDragPointer);\r\n        this.drag.pointer.x = postScaleDragPointer.x;\r\n        this.drag.pointer.y = postScaleDragPointer.y;\r\n      }\r\n\r\n      this.body.emitter.emit('_requestRedraw');\r\n\r\n      if (scaleOld < scale) {\r\n        this.body.emitter.emit('zoom', {direction: '+', scale: this.body.view.scale, pointer: pointer});\r\n      }\r\n      else {\r\n        this.body.emitter.emit('zoom', {direction: '-', scale: this.body.view.scale, pointer: pointer});\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Event handler for mouse wheel event, used to zoom the timeline\r\n   * See http://adomas.org/javascript-mouse-wheel/\r\n   *     https://github.com/EightMedia/hammer.js/issues/256\r\n   * @param {MouseEvent}  event\r\n   * @private\r\n   */\r\n  onMouseWheel(event) {\r\n    if (this.options.zoomView === true) {\r\n      // retrieve delta\r\n      let delta = 0;\r\n      if (event.wheelDelta) { /* IE/Opera. */\r\n        delta = event.wheelDelta / 120;\r\n      }\r\n      else if (event.detail) { /* Mozilla case. */\r\n        // In Mozilla, sign of delta is different than in IE.\r\n        // Also, delta is multiple of 3.\r\n        delta = -event.detail / 3;\r\n      }\r\n\r\n      // If delta is nonzero, handle it.\r\n      // Basically, delta is now positive if wheel was scrolled up,\r\n      // and negative, if wheel was scrolled down.\r\n      if (delta !== 0) {\r\n\r\n        // calculate the new scale\r\n        let scale = this.body.view.scale;\r\n        let zoom = delta / 10;\r\n        if (delta < 0) {\r\n          zoom = zoom / (1 - zoom);\r\n        }\r\n        scale *= (1 + zoom);\r\n\r\n        // calculate the pointer location\r\n        let pointer = this.getPointer({x: event.clientX, y: event.clientY});\r\n\r\n        // apply the new scale\r\n        this.zoom(scale, pointer);\r\n      }\r\n\r\n      // Prevent default actions caused by mouse wheel.\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Mouse move handler for checking whether the title moves over a node with a title.\r\n   * @param  {Event} event\r\n   * @private\r\n   */\r\n  onMouseMove(event) {\r\n    let pointer = this.getPointer({x:event.clientX, y:event.clientY});\r\n    let popupVisible = false;\r\n\r\n    // check if the previously selected node is still selected\r\n    if (this.popup !== undefined) {\r\n      if (this.popup.hidden === false) {\r\n        this._checkHidePopup(pointer);\r\n      }\r\n\r\n      // if the popup was not hidden above\r\n      if (this.popup.hidden === false) {\r\n        popupVisible = true;\r\n        this.popup.setPosition(pointer.x + 3, pointer.y - 5);\r\n        this.popup.show();\r\n      }\r\n    }\r\n\r\n    // if we bind the keyboard to the div, we have to highlight it to use it. This highlights it on mouse over.\r\n    if (this.options.keyboard.bindToWindow === false && this.options.keyboard.enabled === true) {\r\n      this.canvas.frame.focus();\r\n    }\r\n\r\n    // start a timeout that will check if the mouse is positioned above an element\r\n    if (popupVisible === false) {\r\n      if (this.popupTimer !== undefined) {\r\n        clearInterval(this.popupTimer); // stop any running calculationTimer\r\n        this.popupTimer = undefined;\r\n      }\r\n      if (!this.drag.dragging) {\r\n        this.popupTimer = setTimeout(() => this._checkShowPopup(pointer), this.options.tooltipDelay);\r\n      }\r\n    }\r\n\r\n    // adding hover highlights\r\n    if (this.options.hover === true) {\r\n      this.selectionHandler.hoverObject(event, pointer);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Check if there is an element on the given position in the network\r\n   * (a node or edge). If so, and if this element has a title,\r\n   * show a popup window with its title.\r\n   *\r\n   * @param {{x:number, y:number}} pointer\r\n   * @private\r\n   */\r\n _checkShowPopup(pointer) {\r\n    let x = this.canvas._XconvertDOMtoCanvas(pointer.x);\r\n    let y = this.canvas._YconvertDOMtoCanvas(pointer.y);\r\n    let pointerObj = {\r\n      left:   x,\r\n      top:    y,\r\n      right:  x,\r\n      bottom: y\r\n    };\r\n\r\n    let previousPopupObjId = this.popupObj === undefined ? undefined : this.popupObj.id;\r\n    let nodeUnderCursor = false;\r\n    let popupType = 'node';\r\n\r\n    // check if a node is under the cursor.\r\n    if (this.popupObj === undefined) {\r\n      // search the nodes for overlap, select the top one in case of multiple nodes\r\n      let nodeIndices = this.body.nodeIndices;\r\n      let nodes = this.body.nodes;\r\n      let node;\r\n      let overlappingNodes = [];\r\n      for (let i = 0; i < nodeIndices.length; i++) {\r\n        node = nodes[nodeIndices[i]];\r\n        if (node.isOverlappingWith(pointerObj) === true) {\r\n          if (node.getTitle() !== undefined) {\r\n            overlappingNodes.push(nodeIndices[i]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (overlappingNodes.length > 0) {\r\n        // if there are overlapping nodes, select the last one, this is the one which is drawn on top of the others\r\n        this.popupObj = nodes[overlappingNodes[overlappingNodes.length - 1]];\r\n        // if you hover over a node, the title of the edge is not supposed to be shown.\r\n        nodeUnderCursor = true;\r\n      }\r\n    }\r\n\r\n    if (this.popupObj === undefined && nodeUnderCursor === false) {\r\n      // search the edges for overlap\r\n      let edgeIndices = this.body.edgeIndices;\r\n      let edges = this.body.edges;\r\n      let edge;\r\n      let overlappingEdges = [];\r\n      for (let i = 0; i < edgeIndices.length; i++) {\r\n        edge = edges[edgeIndices[i]];\r\n        if (edge.isOverlappingWith(pointerObj) === true) {\r\n          if (edge.connected === true && edge.getTitle() !== undefined) {\r\n            overlappingEdges.push(edgeIndices[i]);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (overlappingEdges.length > 0) {\r\n        this.popupObj = edges[overlappingEdges[overlappingEdges.length - 1]];\r\n        popupType = 'edge';\r\n      }\r\n    }\r\n\r\n    if (this.popupObj !== undefined) {\r\n      // show popup message window\r\n      if (this.popupObj.id !== previousPopupObjId) {\r\n        if (this.popup === undefined) {\r\n          this.popup = new Popup(this.canvas.frame);\r\n        }\r\n\r\n        this.popup.popupTargetType = popupType;\r\n        this.popup.popupTargetId = this.popupObj.id;\r\n\r\n        // adjust a small offset such that the mouse cursor is located in the\r\n        // bottom left location of the popup, and you can easily move over the\r\n        // popup area\r\n        this.popup.setPosition(pointer.x + 3, pointer.y - 5);\r\n        this.popup.setText(this.popupObj.getTitle());\r\n        this.popup.show();\r\n        this.body.emitter.emit('showPopup',this.popupObj.id);\r\n      }\r\n    }\r\n    else {\r\n      if (this.popup !== undefined) {\r\n        this.popup.hide();\r\n        this.body.emitter.emit('hidePopup');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if the popup must be hidden, which is the case when the mouse is no\r\n   * longer hovering on the object\r\n   * @param {{x:number, y:number}} pointer\r\n   * @private\r\n   */\r\n _checkHidePopup(pointer) {\r\n    let pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\r\n\r\n    let stillOnObj = false;\r\n    if (this.popup.popupTargetType === 'node') {\r\n      if (this.body.nodes[this.popup.popupTargetId] !== undefined) {\r\n        stillOnObj = this.body.nodes[this.popup.popupTargetId].isOverlappingWith(pointerObj);\r\n\r\n        // if the mouse is still one the node, we have to check if it is not also on one that is drawn on top of it.\r\n        // we initially only check stillOnObj because this is much faster.\r\n        if (stillOnObj === true) {\r\n          let overNode = this.selectionHandler.getNodeAt(pointer);\r\n          stillOnObj = overNode === undefined ? false : overNode.id === this.popup.popupTargetId;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (this.selectionHandler.getNodeAt(pointer) === undefined) {\r\n        if (this.body.edges[this.popup.popupTargetId] !== undefined) {\r\n          stillOnObj = this.body.edges[this.popup.popupTargetId].isOverlappingWith(pointerObj);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    if (stillOnObj === false) {\r\n      this.popupObj = undefined;\r\n      this.popup.hide();\r\n      this.body.emitter.emit('hidePopup');\r\n    }\r\n  }\r\n}\r\n\r\nexport default InteractionHandler;\r\n","var Hammer = require('../../../module/hammer');\r\nvar hammerUtil = require('../../../hammerUtil');\r\nvar keycharm = require('keycharm');\r\n\r\n/**\r\n * Navigation Handler\r\n */\r\nclass NavigationHandler {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   */\r\n  constructor(body, canvas) {\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n\r\n    this.iconsCreated = false;\r\n    this.navigationHammers = [];\r\n    this.boundFunctions = {};\r\n    this.touchTime = 0;\r\n    this.activated = false;\r\n\r\n\r\n    this.body.emitter.on(\"activate\",   () => {this.activated = true;  this.configureKeyboardBindings();});\r\n    this.body.emitter.on(\"deactivate\", () => {this.activated = false; this.configureKeyboardBindings();});\r\n    this.body.emitter.on(\"destroy\",    () => {if (this.keycharm !== undefined) {this.keycharm.destroy();}});\r\n\r\n    this.options = {}\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      this.options = options;\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates or refreshes navigation and sets key bindings\r\n   */\r\n  create() {\r\n    if (this.options.navigationButtons === true) {\r\n      if (this.iconsCreated === false) {\r\n        this.loadNavigationElements();\r\n      }\r\n    }\r\n    else if (this.iconsCreated === true) {\r\n      this.cleanNavigation();\r\n    }\r\n\r\n    this.configureKeyboardBindings();\r\n  }\r\n\r\n  /**\r\n   * Cleans up previous navigation items\r\n   */\r\n  cleanNavigation() {\r\n    // clean hammer bindings\r\n    if (this.navigationHammers.length != 0) {\r\n      for (var i = 0; i < this.navigationHammers.length; i++) {\r\n        this.navigationHammers[i].destroy();\r\n      }\r\n      this.navigationHammers = [];\r\n    }\r\n\r\n    // clean up previous navigation items\r\n    if (this.navigationDOM && this.navigationDOM['wrapper'] && this.navigationDOM['wrapper'].parentNode) {\r\n      this.navigationDOM['wrapper'].parentNode.removeChild(this.navigationDOM['wrapper']);\r\n    }\r\n\r\n    this.iconsCreated = false;\r\n  }\r\n\r\n  /**\r\n   * Creation of the navigation controls nodes. They are drawn over the rest of the nodes and are not affected by scale and translation\r\n   * they have a triggerFunction which is called on click. If the position of the navigation controls is dependent\r\n   * on this.frame.canvas.clientWidth or this.frame.canvas.clientHeight, we flag horizontalAlignLeft and verticalAlignTop false.\r\n   * This means that the location will be corrected by the _relocateNavigation function on a size change of the canvas.\r\n   *\r\n   * @private\r\n   */\r\n  loadNavigationElements() {\r\n    this.cleanNavigation();\r\n\r\n    this.navigationDOM = {};\r\n    var navigationDivs = ['up','down','left','right','zoomIn','zoomOut','zoomExtends'];\r\n    var navigationDivActions = ['_moveUp','_moveDown','_moveLeft','_moveRight','_zoomIn','_zoomOut','_fit'];\r\n\r\n    this.navigationDOM['wrapper'] = document.createElement('div');\r\n    this.navigationDOM['wrapper'].className = 'vis-navigation';\r\n    this.canvas.frame.appendChild(this.navigationDOM['wrapper']);\r\n\r\n    for (var i = 0; i < navigationDivs.length; i++) {\r\n      this.navigationDOM[navigationDivs[i]] = document.createElement('div');\r\n      this.navigationDOM[navigationDivs[i]].className = 'vis-button vis-' + navigationDivs[i];\r\n      this.navigationDOM['wrapper'].appendChild(this.navigationDOM[navigationDivs[i]]);\r\n\r\n      var hammer = new Hammer(this.navigationDOM[navigationDivs[i]]);\r\n      if (navigationDivActions[i] === \"_fit\") {\r\n        hammerUtil.onTouch(hammer, this._fit.bind(this));\r\n      }\r\n      else {\r\n        hammerUtil.onTouch(hammer, this.bindToRedraw.bind(this,navigationDivActions[i]));\r\n      }\r\n\r\n      this.navigationHammers.push(hammer);\r\n    }\r\n\r\n    // use a hammer for the release so we do not require the one used in the rest of the network\r\n    // the one the rest uses can be overloaded by the manipulation system.\r\n    var hammerFrame = new Hammer(this.canvas.frame);\r\n    hammerUtil.onRelease(hammerFrame, () => {this._stopMovement();});\r\n    this.navigationHammers.push(hammerFrame);\r\n\r\n    this.iconsCreated = true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} action\r\n   */\r\n  bindToRedraw(action) {\r\n    if (this.boundFunctions[action] === undefined) {\r\n      this.boundFunctions[action] = this[action].bind(this);\r\n      this.body.emitter.on(\"initRedraw\", this.boundFunctions[action]);\r\n      this.body.emitter.emit(\"_startRendering\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} action\r\n   */\r\n  unbindFromRedraw(action) {\r\n    if (this.boundFunctions[action] !== undefined) {\r\n      this.body.emitter.off(\"initRedraw\", this.boundFunctions[action]);\r\n      this.body.emitter.emit(\"_stopRendering\");\r\n      delete this.boundFunctions[action];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this stops all movement induced by the navigation buttons\r\n   *\r\n   * @private\r\n   */\r\n  _fit() {\r\n    if (new Date().valueOf() - this.touchTime > 700) { // TODO: fix ugly hack to avoid hammer's double fireing of event (because we use release?)\r\n      this.body.emitter.emit(\"fit\", {duration: 700});\r\n      this.touchTime = new Date().valueOf();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this stops all movement induced by the navigation buttons\r\n   *\r\n   * @private\r\n   */\r\n  _stopMovement() {\r\n    for (let boundAction in this.boundFunctions) {\r\n      if (this.boundFunctions.hasOwnProperty(boundAction)) {\r\n        this.body.emitter.off(\"initRedraw\", this.boundFunctions[boundAction]);\r\n        this.body.emitter.emit(\"_stopRendering\");\r\n      }\r\n    }\r\n    this.boundFunctions = {};\r\n  }\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _moveUp()   {this.body.view.translation.y += this.options.keyboard.speed.y;}\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _moveDown() {this.body.view.translation.y -= this.options.keyboard.speed.y;}\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _moveLeft() {this.body.view.translation.x += this.options.keyboard.speed.x;}\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _moveRight(){this.body.view.translation.x -= this.options.keyboard.speed.x;}\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _zoomIn() {\r\n    var scaleOld = this.body.view.scale;\r\n    var scale = this.body.view.scale * (1 + this.options.keyboard.speed.zoom);\r\n    var translation = this.body.view.translation;\r\n    var scaleFrac = scale / scaleOld;\r\n    var tx = (1 - scaleFrac) * this.canvas.canvasViewCenter.x + translation.x * scaleFrac;\r\n    var ty = (1 - scaleFrac) * this.canvas.canvasViewCenter.y + translation.y * scaleFrac;\r\n\r\n    this.body.view.scale = scale;\r\n    this.body.view.translation = { x: tx, y: ty };\r\n    this.body.emitter.emit('zoom', { direction: '+', scale: this.body.view.scale, pointer: null });\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _zoomOut()  {\r\n    var scaleOld = this.body.view.scale;\r\n    var scale = this.body.view.scale / (1 + this.options.keyboard.speed.zoom);\r\n    var translation = this.body.view.translation;\r\n    var scaleFrac = scale / scaleOld;\r\n    var tx = (1 - scaleFrac) * this.canvas.canvasViewCenter.x + translation.x * scaleFrac;\r\n    var ty = (1 - scaleFrac) * this.canvas.canvasViewCenter.y + translation.y * scaleFrac;\r\n\r\n    this.body.view.scale = scale;\r\n    this.body.view.translation = { x: tx, y: ty };\r\n    this.body.emitter.emit('zoom', { direction: '-', scale: this.body.view.scale, pointer: null });\r\n  }\r\n\r\n\r\n  /**\r\n   * bind all keys using keycharm.\r\n   */\r\n  configureKeyboardBindings() {\r\n    if (this.keycharm !== undefined) {\r\n      this.keycharm.destroy();\r\n    }\r\n\r\n    if (this.options.keyboard.enabled === true) {\r\n      if (this.options.keyboard.bindToWindow === true) {\r\n        this.keycharm = keycharm({container: window, preventDefault: true});\r\n      }\r\n      else {\r\n        this.keycharm = keycharm({container: this.canvas.frame, preventDefault: true});\r\n      }\r\n\r\n      this.keycharm.reset();\r\n\r\n      if (this.activated === true) {\r\n        this.keycharm.bind(\"up\",       () => {this.bindToRedraw(\"_moveUp\")   ;}, \"keydown\");\r\n        this.keycharm.bind(\"down\",     () => {this.bindToRedraw(\"_moveDown\") ;}, \"keydown\");\r\n        this.keycharm.bind(\"left\",     () => {this.bindToRedraw(\"_moveLeft\") ;}, \"keydown\");\r\n        this.keycharm.bind(\"right\",    () => {this.bindToRedraw(\"_moveRight\");}, \"keydown\");\r\n        this.keycharm.bind(\"=\",        () => {this.bindToRedraw(\"_zoomIn\")   ;}, \"keydown\");\r\n        this.keycharm.bind(\"num+\",     () => {this.bindToRedraw(\"_zoomIn\")   ;}, \"keydown\");\r\n        this.keycharm.bind(\"num-\",     () => {this.bindToRedraw(\"_zoomOut\")  ;}, \"keydown\");\r\n        this.keycharm.bind(\"-\",        () => {this.bindToRedraw(\"_zoomOut\")  ;}, \"keydown\");\r\n        this.keycharm.bind(\"[\",        () => {this.bindToRedraw(\"_zoomOut\")  ;}, \"keydown\");\r\n        this.keycharm.bind(\"]\",        () => {this.bindToRedraw(\"_zoomIn\")   ;}, \"keydown\");\r\n        this.keycharm.bind(\"pageup\",   () => {this.bindToRedraw(\"_zoomIn\")   ;}, \"keydown\");\r\n        this.keycharm.bind(\"pagedown\", () => {this.bindToRedraw(\"_zoomOut\")  ;}, \"keydown\");\r\n\r\n        this.keycharm.bind(\"up\",       () => {this.unbindFromRedraw(\"_moveUp\")   ;}, \"keyup\");\r\n        this.keycharm.bind(\"down\",     () => {this.unbindFromRedraw(\"_moveDown\") ;}, \"keyup\");\r\n        this.keycharm.bind(\"left\",     () => {this.unbindFromRedraw(\"_moveLeft\") ;}, \"keyup\");\r\n        this.keycharm.bind(\"right\",    () => {this.unbindFromRedraw(\"_moveRight\");}, \"keyup\");\r\n        this.keycharm.bind(\"=\",        () => {this.unbindFromRedraw(\"_zoomIn\")   ;}, \"keyup\");\r\n        this.keycharm.bind(\"num+\",     () => {this.unbindFromRedraw(\"_zoomIn\")   ;}, \"keyup\");\r\n        this.keycharm.bind(\"num-\",     () => {this.unbindFromRedraw(\"_zoomOut\")  ;}, \"keyup\");\r\n        this.keycharm.bind(\"-\",        () => {this.unbindFromRedraw(\"_zoomOut\")  ;}, \"keyup\");\r\n        this.keycharm.bind(\"[\",        () => {this.unbindFromRedraw(\"_zoomOut\")  ;}, \"keyup\");\r\n        this.keycharm.bind(\"]\",        () => {this.unbindFromRedraw(\"_zoomIn\")   ;}, \"keyup\");\r\n        this.keycharm.bind(\"pageup\",   () => {this.unbindFromRedraw(\"_zoomIn\")   ;}, \"keyup\");\r\n        this.keycharm.bind(\"pagedown\", () => {this.unbindFromRedraw(\"_zoomOut\")  ;}, \"keyup\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default NavigationHandler;\r\n","/**\r\n * Popup is a class to create a popup window with some text\r\n */\r\nclass Popup {\r\n  /**\r\n   * @param {Element} container       The container object.\r\n   * @param {string}  overflowMethod  How the popup should act to overflowing ('flip' or 'cap')\r\n   */\r\n  constructor(container, overflowMethod) {\r\n    this.container = container;\r\n    this.overflowMethod = overflowMethod || 'cap';\r\n\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.padding = 5;\r\n    this.hidden = false;\r\n\r\n    // create the frame\r\n    this.frame = document.createElement('div');\r\n    this.frame.className = 'vis-tooltip';\r\n    this.container.appendChild(this.frame);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x   Horizontal position of the popup window\r\n   * @param {number} y   Vertical position of the popup window\r\n   */\r\n  setPosition(x, y) {\r\n    this.x = parseInt(x);\r\n    this.y = parseInt(y);\r\n  }\r\n\r\n  /**\r\n   * Set the content for the popup window. This can be HTML code or text.\r\n   * @param {string | Element} content\r\n   */\r\n  setText(content) {\r\n    if (content instanceof Element) {\r\n      this.frame.innerHTML = '';\r\n      this.frame.appendChild(content);\r\n    }\r\n    else {\r\n      this.frame.innerHTML = content; // string containing text or HTML\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the popup window\r\n   * @param {boolean} [doShow]    Show or hide the window\r\n   */\r\n  show(doShow) {\r\n    if (doShow === undefined) {\r\n      doShow = true;\r\n    }\r\n\r\n    if (doShow === true) {\r\n      var height = this.frame.clientHeight;\r\n      var width = this.frame.clientWidth;\r\n      var maxHeight = this.frame.parentNode.clientHeight;\r\n      var maxWidth = this.frame.parentNode.clientWidth;\r\n\r\n      var left = 0, top = 0;\r\n\r\n      if (this.overflowMethod == 'flip') {\r\n        var isLeft = false, isTop = true; // Where around the position it's located\r\n\r\n        if (this.y - height < this.padding) {\r\n          isTop = false;\r\n        }\r\n\r\n        if (this.x + width > maxWidth - this.padding) {\r\n          isLeft = true;\r\n        }\r\n\r\n        if (isLeft) {\r\n          left = this.x - width;\r\n        } else {\r\n          left = this.x;\r\n        }\r\n\r\n        if (isTop) {\r\n          top = this.y - height;\r\n        } else {\r\n          top = this.y;\r\n        }\r\n      } else {\r\n        top = (this.y - height);\r\n        if (top + height + this.padding > maxHeight) {\r\n          top = maxHeight - height - this.padding;\r\n        }\r\n        if (top < this.padding) {\r\n          top = this.padding;\r\n        }\r\n\r\n        left = this.x;\r\n        if (left + width + this.padding > maxWidth) {\r\n          left = maxWidth - width - this.padding;\r\n        }\r\n        if (left < this.padding) {\r\n          left = this.padding;\r\n        }\r\n      }\r\n\r\n      this.frame.style.left = left + \"px\";\r\n      this.frame.style.top = top + \"px\";\r\n      this.frame.style.visibility = \"visible\";\r\n      this.hidden = false;\r\n    }\r\n    else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the popup window\r\n   */\r\n  hide() {\r\n    this.hidden = true;\r\n    this.frame.style.left = \"0\";\r\n    this.frame.style.top = \"0\";\r\n    this.frame.style.visibility = \"hidden\";\r\n  }\r\n\r\n  /**\r\n   * Remove the popup window\r\n   */\r\n  destroy() {\r\n    this.frame.parentNode.removeChild(this.frame); // Remove element from DOM\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","var Node = require('./components/Node').default;\r\nvar Edge = require('./components/Edge').default;\r\n\r\nlet util = require('../../util');\r\n\r\n/**\r\n * The handler for selections\r\n */\r\nclass SelectionHandler {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   */\r\n  constructor(body, canvas) {\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n    this.selectionObj = {nodes: [], edges: []};\r\n    this.hoverObj = {nodes:{},edges:{}};\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      multiselect: false,\r\n      selectable: true,\r\n      selectConnectedEdges: true,\r\n      hoverConnectedEdges: true\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this.body.emitter.on(\"_dataChanged\", () => {\r\n      this.updateSelection()\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [options]\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      let fields = ['multiselect','hoverConnectedEdges','selectable','selectConnectedEdges'];\r\n      util.selectiveDeepExtend(fields,this.options, options);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * handles the selection part of the tap;\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @returns {boolean}\r\n   */\r\n  selectOnPoint(pointer) {\r\n    let selected = false;\r\n    if (this.options.selectable === true) {\r\n      let obj = this.getNodeAt(pointer) || this.getEdgeAt(pointer);\r\n\r\n      // unselect after getting the objects in order to restore width and height.\r\n      this.unselectAll();\r\n\r\n      if (obj !== undefined) {\r\n        selected = this.selectObject(obj);\r\n      }\r\n      this.body.emitter.emit(\"_requestRedraw\");\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @returns {boolean}\r\n   */\r\n  selectAdditionalOnPoint(pointer) {\r\n    let selectionChanged = false;\r\n    if (this.options.selectable === true) {\r\n      let obj = this.getNodeAt(pointer) || this.getEdgeAt(pointer);\r\n\r\n      if (obj !== undefined) {\r\n        selectionChanged = true;\r\n        if (obj.isSelected() === true) {\r\n          this.deselectObject(obj);\r\n        }\r\n        else {\r\n          this.selectObject(obj);\r\n        }\r\n\r\n        this.body.emitter.emit(\"_requestRedraw\");\r\n      }\r\n    }\r\n    return selectionChanged;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create an object containing the standard fields for an event.\r\n   *\r\n   * @param {Event} event\r\n   * @param {{x: number, y: number}} pointer Object with the x and y screen coordinates of the mouse\r\n   * @returns {{}}\r\n   * @private\r\n   */\r\n  _initBaseEvent(event, pointer) {\r\n    let properties = {};\r\n\r\n    properties['pointer'] = {\r\n      DOM: {x: pointer.x, y: pointer.y},\r\n      canvas: this.canvas.DOMtoCanvas(pointer)\r\n    };\r\n    properties['event'] = event;\r\n\r\n    return properties;\r\n  }\r\n\r\n\r\n  /**\r\n   * Generate an event which the user can catch.\r\n   *\r\n   * This adds some extra data to the event with respect to cursor position and\r\n   * selected nodes and edges.\r\n   *\r\n   * @param {string} eventType                          Name of event to send\r\n   * @param {Event}  event\r\n   * @param {{x: number, y: number}} pointer            Object with the x and y screen coordinates of the mouse\r\n   * @param {Object|undefined} oldSelection             If present, selection state before event occured\r\n   * @param {boolean|undefined} [emptySelection=false]  Indicate if selection data should be passed\r\n   */\r\n  _generateClickEvent(eventType, event, pointer, oldSelection, emptySelection = false) {\r\n    let properties = this._initBaseEvent(event, pointer);\r\n\r\n    if (emptySelection === true) {\r\n      properties.nodes = [];\r\n      properties.edges = [];\r\n    }\r\n    else {\r\n      let tmp = this.getSelection();\r\n      properties.nodes = tmp.nodes;\r\n      properties.edges = tmp.edges;\r\n    }\r\n\r\n    if (oldSelection !== undefined) {\r\n      properties['previousSelection'] = oldSelection;\r\n    }\r\n\r\n    if (eventType == 'click') {\r\n      // For the time being, restrict this functionality to\r\n      // just the click event.\r\n      properties.items = this.getClickedItems(pointer);\r\n    }\r\n\r\n    this.body.emitter.emit(eventType, properties);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} obj\r\n   * @param {boolean} [highlightEdges=this.options.selectConnectedEdges]\r\n   * @returns {boolean}\r\n   */\r\n  selectObject(obj, highlightEdges = this.options.selectConnectedEdges) {\r\n    if (obj !== undefined) {\r\n      if (obj instanceof Node) {\r\n        if (highlightEdges === true) {\r\n          this._selectConnectedEdges(obj);\r\n        }\r\n      }\r\n      obj.select();\r\n      this._addToSelection(obj);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} obj\r\n   */\r\n  deselectObject(obj) {\r\n    if (obj.isSelected() === true) {\r\n      obj.selected = false;\r\n      this._removeFromSelection(obj);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * retrieve all nodes overlapping with given object\r\n   * @param {Object} object  An object with parameters left, top, right, bottom\r\n   * @return {number[]}   An array with id's of the overlapping nodes\r\n   * @private\r\n   */\r\n  _getAllNodesOverlappingWith(object) {\r\n    let overlappingNodes = [];\r\n    let nodes = this.body.nodes;\r\n    for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n      let nodeId = this.body.nodeIndices[i];\r\n      if (nodes[nodeId].isOverlappingWith(object)) {\r\n        overlappingNodes.push(nodeId);\r\n      }\r\n    }\r\n    return overlappingNodes;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return a position object in canvasspace from a single point in screenspace\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @returns {{left: number, top: number, right: number, bottom: number}}\r\n   * @private\r\n   */\r\n  _pointerToPositionObject(pointer) {\r\n    let canvasPos = this.canvas.DOMtoCanvas(pointer);\r\n    return {\r\n      left:   canvasPos.x - 1,\r\n      top:    canvasPos.y + 1,\r\n      right:  canvasPos.x + 1,\r\n      bottom: canvasPos.y - 1\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the top node at the passed point (like a click)\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @param {boolean} [returnNode=true]\r\n   * @return {Node | undefined} node\r\n   */\r\n  getNodeAt(pointer, returnNode = true) {\r\n    // we first check if this is an navigation controls element\r\n    let positionObject = this._pointerToPositionObject(pointer);\r\n    let overlappingNodes = this._getAllNodesOverlappingWith(positionObject);\r\n    // if there are overlapping nodes, select the last one, this is the\r\n    // one which is drawn on top of the others\r\n    if (overlappingNodes.length > 0) {\r\n      if (returnNode === true) {\r\n        return this.body.nodes[overlappingNodes[overlappingNodes.length - 1]];\r\n      }\r\n      else {\r\n        return overlappingNodes[overlappingNodes.length - 1];\r\n      }\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * retrieve all edges overlapping with given object, selector is around center\r\n   * @param {Object} object  An object with parameters left, top, right, bottom\r\n   * @param {number[]} overlappingEdges An array with id's of the overlapping nodes\r\n   * @private\r\n   */\r\n  _getEdgesOverlappingWith(object, overlappingEdges) {\r\n    let edges = this.body.edges;\r\n    for (let i = 0; i < this.body.edgeIndices.length; i++) {\r\n      let edgeId = this.body.edgeIndices[i];\r\n      if (edges[edgeId].isOverlappingWith(object)) {\r\n        overlappingEdges.push(edgeId);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * retrieve all nodes overlapping with given object\r\n   * @param {Object} object  An object with parameters left, top, right, bottom\r\n   * @return {number[]}   An array with id's of the overlapping nodes\r\n   * @private\r\n   */\r\n  _getAllEdgesOverlappingWith(object) {\r\n    let overlappingEdges = [];\r\n    this._getEdgesOverlappingWith(object,overlappingEdges);\r\n    return overlappingEdges;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the edges nearest to the passed point (like a click)\r\n   *\r\n   * @param {{x: number, y: number}} pointer\r\n   * @param {boolean} [returnEdge=true]\r\n   * @return {Edge | undefined} node\r\n   */\r\n  getEdgeAt(pointer, returnEdge = true) {\r\n    // Iterate over edges, pick closest within 10\r\n    var canvasPos = this.canvas.DOMtoCanvas(pointer);\r\n    var mindist = 10;\r\n    var overlappingEdge = null;\r\n    var edges = this.body.edges;\r\n    for (var i = 0; i < this.body.edgeIndices.length; i++) {\r\n      var edgeId = this.body.edgeIndices[i];\r\n      var edge = edges[edgeId];\r\n      if (edge.connected) {\r\n        var xFrom = edge.from.x;\r\n        var yFrom = edge.from.y;\r\n        var xTo = edge.to.x;\r\n        var yTo = edge.to.y;\r\n        var dist = edge.edgeType.getDistanceToEdge(xFrom, yFrom, xTo, yTo, canvasPos.x, canvasPos.y);\r\n        if(dist < mindist){\r\n          overlappingEdge = edgeId;\r\n          mindist = dist;\r\n        }\r\n      }\r\n    }\r\n    if (overlappingEdge !== null) {\r\n      if (returnEdge === true) {\r\n        return this.body.edges[overlappingEdge];\r\n      }\r\n      else {\r\n        return overlappingEdge;\r\n      }\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add object to the selection array.\r\n   *\r\n   * @param {Object} obj\r\n   * @private\r\n   */\r\n  _addToSelection(obj) {\r\n    if (obj instanceof Node) {\r\n      this.selectionObj.nodes[obj.id] = obj;\r\n    }\r\n    else {\r\n      this.selectionObj.edges[obj.id] = obj;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add object to the selection array.\r\n   *\r\n   * @param {Object} obj\r\n   * @private\r\n   */\r\n  _addToHover(obj) {\r\n    if (obj instanceof Node) {\r\n      this.hoverObj.nodes[obj.id] = obj;\r\n    }\r\n    else {\r\n      this.hoverObj.edges[obj.id] = obj;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove a single option from selection.\r\n   *\r\n   * @param {Object} obj\r\n   * @private\r\n   */\r\n  _removeFromSelection(obj) {\r\n    if (obj instanceof Node) {\r\n      delete this.selectionObj.nodes[obj.id];\r\n      this._unselectConnectedEdges(obj);\r\n    }\r\n    else {\r\n      delete this.selectionObj.edges[obj.id];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unselect all. The selectionObj is useful for this.\r\n   */\r\n  unselectAll() {\r\n    for(let nodeId in this.selectionObj.nodes) {\r\n      if(this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        this.selectionObj.nodes[nodeId].unselect();\r\n      }\r\n    }\r\n    for(let edgeId in this.selectionObj.edges) {\r\n      if(this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        this.selectionObj.edges[edgeId].unselect();\r\n      }\r\n    }\r\n\r\n    this.selectionObj = {nodes:{},edges:{}};\r\n  }\r\n\r\n\r\n  /**\r\n   * return the number of selected nodes\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getSelectedNodeCount() {\r\n    let count = 0;\r\n    for (let nodeId in this.selectionObj.nodes) {\r\n      if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * return the selected node\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getSelectedNode() {\r\n    for (let nodeId in this.selectionObj.nodes) {\r\n      if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        return this.selectionObj.nodes[nodeId];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * return the selected edge\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getSelectedEdge() {\r\n    for (let edgeId in this.selectionObj.edges) {\r\n      if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        return this.selectionObj.edges[edgeId];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  /**\r\n   * return the number of selected edges\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getSelectedEdgeCount() {\r\n    let count = 0;\r\n    for (let edgeId in this.selectionObj.edges) {\r\n      if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n\r\n  /**\r\n   * return the number of selected objects.\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getSelectedObjectCount() {\r\n    let count = 0;\r\n    for(let nodeId in this.selectionObj.nodes) {\r\n      if(this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        count += 1;\r\n      }\r\n    }\r\n    for(let edgeId in this.selectionObj.edges) {\r\n      if(this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Check if anything is selected\r\n   *\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _selectionIsEmpty() {\r\n    for(let nodeId in this.selectionObj.nodes) {\r\n      if(this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        return false;\r\n      }\r\n    }\r\n    for(let edgeId in this.selectionObj.edges) {\r\n      if(this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * check if one of the selected nodes is a cluster.\r\n   *\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _clusterInSelection() {\r\n    for(let nodeId in this.selectionObj.nodes) {\r\n      if(this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        if (this.selectionObj.nodes[nodeId].clusterSize > 1) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * select the edges connected to the node that is being selected\r\n   *\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _selectConnectedEdges(node) {\r\n    for (let i = 0; i < node.edges.length; i++) {\r\n      let edge = node.edges[i];\r\n      edge.select();\r\n      this._addToSelection(edge);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * select the edges connected to the node that is being selected\r\n   *\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _hoverConnectedEdges(node) {\r\n    for (let i = 0; i < node.edges.length; i++) {\r\n      let edge = node.edges[i];\r\n      edge.hover = true;\r\n      this._addToHover(edge);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * unselect the edges connected to the node that is being selected\r\n   *\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _unselectConnectedEdges(node) {\r\n    for (let i = 0; i < node.edges.length; i++) {\r\n      let edge = node.edges[i];\r\n      edge.unselect();\r\n      this._removeFromSelection(edge);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the highlight from a node or edge, in response to mouse movement\r\n   *\r\n   * @param {Event}  event\r\n   * @param {{x: number, y: number}} pointer object with the x and y screen coordinates of the mouse\r\n   * @param {Node|vis.Edge} object\r\n   * @private\r\n   */\r\n  emitBlurEvent(event, pointer, object) {\r\n    let properties = this._initBaseEvent(event, pointer);\r\n\r\n    if (object.hover === true) {\r\n      object.hover = false;\r\n      if (object instanceof Node) {\r\n        properties.node = object.id;\r\n        this.body.emitter.emit(\"blurNode\", properties);\r\n      }\r\n      else {\r\n        properties.edge = object.id;\r\n        this.body.emitter.emit(\"blurEdge\", properties);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the highlight for a node or edge, in response to mouse movement\r\n   *\r\n   * @param {Event}  event\r\n   * @param {{x: number, y: number}} pointer object with the x and y screen coordinates of the mouse\r\n   * @param {Node|vis.Edge} object\r\n   * @returns {boolean} hoverChanged\r\n   * @private\r\n   */\r\n  emitHoverEvent(event, pointer, object) {\r\n    let properties   = this._initBaseEvent(event, pointer);\r\n    let hoverChanged = false;\r\n\r\n    if (object.hover === false) {\r\n      object.hover = true;\r\n      this._addToHover(object);\r\n      hoverChanged = true;\r\n      if (object instanceof Node) {\r\n        properties.node = object.id;\r\n        this.body.emitter.emit(\"hoverNode\", properties);\r\n      }\r\n      else {\r\n        properties.edge = object.id;\r\n        this.body.emitter.emit(\"hoverEdge\", properties);\r\n      }\r\n    }\r\n\r\n    return hoverChanged;\r\n  }\r\n\r\n\r\n  /**\r\n   * Perform actions in response to a mouse movement.\r\n   *\r\n   * @param {Event}  event\r\n   * @param {{x: number, y: number}} pointer | object with the x and y screen coordinates of the mouse\r\n   */\r\n  hoverObject(event, pointer) {\r\n    let object = this.getNodeAt(pointer);\r\n    if (object === undefined) {\r\n      object = this.getEdgeAt(pointer);\r\n    }\r\n\r\n    let hoverChanged = false;\r\n    // remove all node hover highlights\r\n    for (let nodeId in this.hoverObj.nodes) {\r\n      if (this.hoverObj.nodes.hasOwnProperty(nodeId)) {\r\n        if (object === undefined || (object instanceof Node && object.id != nodeId) || object instanceof Edge) {\r\n          this.emitBlurEvent(event, pointer, this.hoverObj.nodes[nodeId]);\r\n          delete this.hoverObj.nodes[nodeId];\r\n          hoverChanged = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // removing all edge hover highlights\r\n    for (let edgeId in this.hoverObj.edges) {\r\n      if (this.hoverObj.edges.hasOwnProperty(edgeId)) {\r\n        // if the hover has been changed here it means that the node has been hovered over or off\r\n        // we then do not use the emitBlurEvent method here.\r\n        if (hoverChanged === true) {\r\n          this.hoverObj.edges[edgeId].hover = false;\r\n          delete this.hoverObj.edges[edgeId];\r\n        }\r\n        // if the blur remains the same and the object is undefined (mouse off) or another\r\n        // edge has been hovered, or another node has been hovered we blur the edge.\r\n        else if (object === undefined || (object instanceof Edge && object.id != edgeId) || (object instanceof Node && !object.hover)) {\r\n          this.emitBlurEvent(event, pointer, this.hoverObj.edges[edgeId]);\r\n          delete this.hoverObj.edges[edgeId];\r\n          hoverChanged = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object !== undefined) {\r\n      hoverChanged = hoverChanged || this.emitHoverEvent(event, pointer, object);\r\n      if (object instanceof Node && this.options.hoverConnectedEdges === true) {\r\n        this._hoverConnectedEdges(object);\r\n      }\r\n    }\r\n\r\n    if (hoverChanged === true) {\r\n      this.body.emitter.emit('_requestRedraw');\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * retrieve the currently selected objects\r\n   * @return {{nodes: Array.<string>, edges: Array.<string>}} selection\r\n   */\r\n  getSelection() {\r\n    let nodeIds = this.getSelectedNodes();\r\n    let edgeIds = this.getSelectedEdges();\r\n    return {nodes:nodeIds, edges:edgeIds};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * retrieve the currently selected nodes\r\n   * @return {string[]} selection    An array with the ids of the\r\n   *                                            selected nodes.\r\n   */\r\n  getSelectedNodes() {\r\n    let idArray = [];\r\n    if (this.options.selectable === true) {\r\n      for (let nodeId in this.selectionObj.nodes) {\r\n        if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n          idArray.push(this.selectionObj.nodes[nodeId].id);\r\n        }\r\n      }\r\n    }\r\n    return idArray;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * retrieve the currently selected edges\r\n   * @return {Array} selection    An array with the ids of the\r\n   *                                            selected nodes.\r\n   */\r\n  getSelectedEdges() {\r\n    let idArray = [];\r\n    if (this.options.selectable === true) {\r\n      for (let edgeId in this.selectionObj.edges) {\r\n        if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n          idArray.push(this.selectionObj.edges[edgeId].id);\r\n        }\r\n      }\r\n    }\r\n    return idArray;\r\n  }\r\n\r\n  /**\r\n   * Updates the current selection\r\n   * @param {{nodes: Array.<string>, edges: Array.<string>}} selection\r\n   * @param {Object} options                                 Options\r\n   */\r\n  setSelection(selection, options = {}) {\r\n    let i, id;\r\n\r\n    if (!selection || (!selection.nodes && !selection.edges))\r\n      throw 'Selection must be an object with nodes and/or edges properties';\r\n    // first unselect any selected node, if option is true or undefined\r\n    if (options.unselectAll || options.unselectAll === undefined) {\r\n      this.unselectAll();\r\n    }\r\n    if (selection.nodes) {\r\n      for (i = 0; i < selection.nodes.length; i++) {\r\n        id = selection.nodes[i];\r\n\r\n        let node = this.body.nodes[id];\r\n        if (!node) {\r\n          throw new RangeError('Node with id \"' + id + '\" not found');\r\n        }\r\n        // don't select edges with it\r\n        this.selectObject(node, options.highlightEdges);\r\n      }\r\n    }\r\n\r\n    if (selection.edges) {\r\n      for (i = 0; i < selection.edges.length; i++) {\r\n        id = selection.edges[i];\r\n\r\n        let edge = this.body.edges[id];\r\n        if (!edge) {\r\n          throw new RangeError('Edge with id \"' + id + '\" not found');\r\n        }\r\n        this.selectObject(edge);\r\n      }\r\n    }\r\n    this.body.emitter.emit('_requestRedraw');\r\n  }\r\n\r\n\r\n  /**\r\n   * select zero or more nodes with the option to highlight edges\r\n   * @param {number[] | string[]} selection     An array with the ids of the\r\n   *                                            selected nodes.\r\n   * @param {boolean} [highlightEdges]\r\n   */\r\n  selectNodes(selection, highlightEdges = true) {\r\n    if (!selection || (selection.length === undefined))\r\n      throw 'Selection must be an array with ids';\r\n\r\n    this.setSelection({nodes: selection}, {highlightEdges: highlightEdges});\r\n  }\r\n\r\n\r\n  /**\r\n   * select zero or more edges\r\n   * @param {number[] | string[]} selection     An array with the ids of the\r\n   *                                            selected nodes.\r\n   */\r\n  selectEdges(selection) {\r\n    if (!selection || (selection.length === undefined))\r\n      throw 'Selection must be an array with ids';\r\n\r\n    this.setSelection({edges: selection});\r\n  }\r\n\r\n  /**\r\n   * Validate the selection: remove ids of nodes which no longer exist\r\n   * @private\r\n   */\r\n  updateSelection() {\r\n    for (let nodeId in this.selectionObj.nodes) {\r\n      if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\r\n        if (!this.body.nodes.hasOwnProperty(nodeId)) {\r\n          delete this.selectionObj.nodes[nodeId];\r\n        }\r\n      }\r\n    }\r\n    for (let edgeId in this.selectionObj.edges) {\r\n      if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\r\n        if (!this.body.edges.hasOwnProperty(edgeId)) {\r\n          delete this.selectionObj.edges[edgeId];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine all the visual elements clicked which are on the given point.\r\n   *\r\n   * All elements are returned; this includes nodes, edges and their labels.\r\n   * The order returned is from highest to lowest, i.e. element 0 of the return\r\n   * value is the topmost item clicked on.\r\n   *\r\n   * The return value consists of an array of the following possible elements:\r\n   *\r\n   * - `{nodeId:number}`             - node with given id clicked on\r\n   * - `{nodeId:number, labelId:0}`  - label of node with given id clicked on\r\n   * - `{edgeId:number}`             - edge with given id clicked on\r\n   * - `{edge:number, labelId:0}`    - label of edge with given id clicked on\r\n   *\r\n   * ## NOTES\r\n   *\r\n   * - Currently, there is only one label associated with a node or an edge,\r\n   *   but this is expected to change somewhere in the future.\r\n   * - Since there is no z-indexing yet, it is not really possible to set the nodes and\r\n   *   edges in the correct order. For the time being, nodes come first.\r\n   *\r\n   * @param {point} pointer  mouse position in screen coordinates\r\n   * @returns {Array.<nodeClickItem|nodeLabelClickItem|edgeClickItem|edgeLabelClickItem>}\r\n   * @private\r\n   */ \r\n  getClickedItems(pointer) {\r\n    let point = this.canvas.DOMtoCanvas(pointer);\r\n    var items = [];\r\n\r\n    // Note reverse order; we want the topmost clicked items to be first in the array\r\n    // Also note that selected nodes are disregarded here; these normally display on top\r\n    let nodeIndices = this.body.nodeIndices;\r\n    let nodes = this.body.nodes;\r\n    for (let i = nodeIndices.length - 1; i >= 0; i--) {\r\n      let node = nodes[nodeIndices[i]];\r\n      let ret = node.getItemsOnPoint(point);\r\n      items.push.apply(items, ret); // Append the return value to the running list.\r\n    }\r\n\r\n    let edgeIndices = this.body.edgeIndices;\r\n    let edges = this.body.edges;\r\n    for (let i = edgeIndices.length - 1; i >= 0; i--) {\r\n      let edge = edges[edgeIndices[i]];\r\n      let ret = edge.getItemsOnPoint(point);\r\n      items.push.apply(items, ret); // Append the return value to the running list.\r\n    }\r\n\r\n    return items;\r\n  }\r\n}\r\n\r\nexport default SelectionHandler;\r\n","'use strict';\r\n/**\r\n * There's a mix-up with terms in the code. Following are the formal definitions:\r\n *\r\n *   tree   - a strict hierarchical network, i.e. every node has at most one parent\r\n *   forest - a collection of trees. These distinct trees are thus not connected.\r\n *\r\n * So:\r\n * - in a network that is not a tree, there exist nodes with multiple parents.\r\n * - a network consisting of unconnected sub-networks, of which at least one\r\n *   is not a tree, is not a forest.\r\n *\r\n * In the code, the definitions are:\r\n *\r\n *   tree   - any disconnected sub-network, strict hierarchical or not.\r\n *   forest - a bunch of these sub-networks\r\n *\r\n * The difference between tree and not-tree is important in the code, notably within\r\n * to the block-shifting algorithm. The algorithm assumes formal trees and fails\r\n * for not-trees, often in a spectacular manner (search for 'exploding network' in the issues).\r\n *\r\n * In order to distinguish the definitions in the following code, the adjective 'formal' is\r\n * used. If 'formal' is absent, you must assume the non-formal definition.\r\n *\r\n * ----------------------------------------------------------------------------------\r\n * NOTES\r\n * =====\r\n *\r\n * A hierarchical layout is a different thing from a hierarchical network.\r\n * The layout is a way to arrange the nodes in the view; this can be done\r\n * on non-hierarchical networks as well. The converse is also possible.\r\n */\r\nlet util = require('../../util');\r\nvar NetworkUtil = require('../NetworkUtil').default;\r\nvar {HorizontalStrategy, VerticalStrategy} = require('./components/DirectionStrategy.js');\r\n\r\n\r\n/**\r\n * Container for derived data on current network, relating to hierarchy.\r\n *\r\n * @private\r\n */\r\nclass HierarchicalStatus {\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor() {\r\n    this.childrenReference = {};     // child id's per node id\r\n    this.parentReference = {};       // parent id's per node id\r\n    this.trees = {};                 // tree id per node id; i.e. to which tree does given node id belong\r\n\r\n    this.distributionOrdering = {};  // The nodes per level, in the display order\r\n    this.levels = {};                // hierarchy level per node id\r\n    this.distributionIndex = {};     // The position of the node in the level sorting order, per node id.\r\n\r\n    this.isTree = false;             // True if current network is a formal tree \r\n    this.treeIndex = -1;             // Highest tree id in current network.\r\n  }\r\n\r\n  /**\r\n   * Add the relation between given nodes to the current state.\r\n   *\r\n   * @param {Node.id} parentNodeId\r\n   * @param {Node.id} childNodeId\r\n   */\r\n  addRelation(parentNodeId, childNodeId) {\r\n    if (this.childrenReference[parentNodeId] === undefined) {\r\n      this.childrenReference[parentNodeId] = [];\r\n    }\r\n    this.childrenReference[parentNodeId].push(childNodeId);\r\n\r\n    if (this.parentReference[childNodeId] === undefined) {\r\n      this.parentReference[childNodeId] = [];\r\n    }\r\n    this.parentReference[childNodeId].push(parentNodeId);\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if the current state is for a formal tree or formal forest.\r\n   *\r\n   * This is the case if every node has at most one parent.\r\n   *\r\n   * Pre: parentReference init'ed properly for current network\r\n   */\r\n  checkIfTree() {\r\n    for (let i in this.parentReference) {\r\n      if (this.parentReference[i].length > 1) {\r\n        this.isTree = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.isTree = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the number of separate trees in the current network.\r\n   * @returns {number}\r\n   */\r\n  numTrees() {\r\n    return (this.treeIndex + 1);  // This assumes the indexes are assigned consecitively\r\n  }\r\n\r\n\r\n  /**\r\n   * Assign a tree id to a node\r\n   * @param {Node} node\r\n   * @param {string|number} treeId\r\n   */\r\n  setTreeIndex(node, treeId) {\r\n    if (treeId === undefined) return;  // Don't bother\r\n\r\n    if (this.trees[node.id] === undefined) {\r\n      this.trees[node.id] = treeId;\r\n      this.treeIndex = Math.max(treeId, this.treeIndex);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Ensure level for given id is defined.\r\n   *\r\n   * Sets level to zero for given node id if not already present\r\n   *\r\n   * @param {Node.id} nodeId\r\n   */\r\n  ensureLevel(nodeId) {\r\n    if (this.levels[nodeId] === undefined) {\r\n      this.levels[nodeId] = 0;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * get the maximum level of a branch.\r\n   *\r\n   * TODO: Never entered; find a test case to test this!\r\n   * @param {Node.id} nodeId\r\n   * @returns {number}\r\n   */\r\n  getMaxLevel(nodeId) {\r\n    let accumulator = {};\r\n\r\n    let _getMaxLevel = (nodeId) => {\r\n      if (accumulator[nodeId] !== undefined) {\r\n        return accumulator[nodeId];\r\n      }\r\n      let level = this.levels[nodeId];\r\n      if (this.childrenReference[nodeId]) {\r\n        let children = this.childrenReference[nodeId];\r\n        if (children.length > 0) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            level = Math.max(level,_getMaxLevel(children[i]));\r\n          }\r\n        }\r\n      }\r\n      accumulator[nodeId] = level;\r\n      return level;\r\n    };\r\n\r\n    return _getMaxLevel(nodeId);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nodeA\r\n   * @param {Node} nodeB\r\n   */\r\n  levelDownstream(nodeA, nodeB) {\r\n    if (this.levels[nodeB.id] === undefined) {\r\n      // set initial level\r\n      if (this.levels[nodeA.id] === undefined) {\r\n        this.levels[nodeA.id] = 0;\r\n      }\r\n      // set level\r\n      this.levels[nodeB.id] = this.levels[nodeA.id] + 1;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Small util method to set the minimum levels of the nodes to zero.\r\n   *\r\n   * @param {Array.<Node>} nodes\r\n   */\r\n  setMinLevelToZero(nodes) {\r\n    let minLevel = 1e9;\r\n    // get the minimum level\r\n    for (let nodeId in nodes) {\r\n      if (nodes.hasOwnProperty(nodeId)) {\r\n        if (this.levels[nodeId] !== undefined) {\r\n          minLevel = Math.min(this.levels[nodeId], minLevel);\r\n        }\r\n      }\r\n    }\r\n\r\n    // subtract the minimum from the set so we have a range starting from 0\r\n    for (let nodeId in nodes) {\r\n      if (nodes.hasOwnProperty(nodeId)) {\r\n        if (this.levels[nodeId] !== undefined) {\r\n          this.levels[nodeId] -= minLevel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the min and max xy-coordinates of a given tree\r\n   *\r\n   * @param {Array.<Node>} nodes\r\n   * @param {number} index\r\n   * @returns {{min_x: number, max_x: number, min_y: number, max_y: number}}\r\n   */\r\n  getTreeSize(nodes, index) {\r\n    let min_x = 1e9;\r\n    let max_x = -1e9;\r\n    let min_y = 1e9;\r\n    let max_y = -1e9;\r\n\r\n    for (let nodeId in this.trees) {\r\n      if (this.trees.hasOwnProperty(nodeId)) {\r\n        if (this.trees[nodeId] === index) {\r\n          let node = nodes[nodeId];\r\n          min_x = Math.min(node.x, min_x);\r\n          max_x = Math.max(node.x, max_x);\r\n          min_y = Math.min(node.y, min_y);\r\n          max_y = Math.max(node.y, max_y);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      min_x: min_x,\r\n      max_x: max_x,\r\n      min_y: min_y,\r\n      max_y: max_y\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if two nodes have the same parent(s)\r\n   *\r\n   * @param {Node} node1\r\n   * @param {Node} node2\r\n   * @return {boolean} true if the two nodes have a same ancestor node, false otherwise\r\n   */\r\n  hasSameParent(node1, node2) {\r\n    let parents1 = this.parentReference[node1.id];\r\n    let parents2 = this.parentReference[node2.id];\r\n    if (parents1 === undefined || parents2 === undefined) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < parents1.length; i++) {\r\n      for (let j = 0; j < parents2.length; j++) {\r\n        if (parents1[i] == parents2[j]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if two nodes are in the same tree.\r\n   *\r\n   * @param {Node} node1\r\n   * @param {Node} node2\r\n   * @return {Boolean} true if this is so, false otherwise\r\n   */\r\n  inSameSubNetwork(node1, node2) {\r\n    return (this.trees[node1.id] === this.trees[node2.id]);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get a list of the distinct levels in the current network\r\n   *\r\n   * @returns {Array}\r\n   */\r\n  getLevels() {\r\n    return Object.keys(this.distributionOrdering);\r\n  }\r\n\r\n\r\n  /**\r\n   * Add a node to the ordering per level\r\n   *\r\n   * @param {Node} node\r\n   * @param {number} level\r\n   */\r\n  addToOrdering(node, level) {\r\n    if (this.distributionOrdering[level] === undefined) {\r\n      this.distributionOrdering[level] = [];\r\n    }\r\n\r\n    var isPresent = false;\r\n    var curLevel = this.distributionOrdering[level];\r\n    for (var n in curLevel) {\r\n      //if (curLevel[n].id === node.id) {\r\n      if (curLevel[n] === node) {\r\n        isPresent = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!isPresent) {\r\n      this.distributionOrdering[level].push(node);\r\n      this.distributionIndex[node.id] = this.distributionOrdering[level].length - 1;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * The Layout Engine\r\n */\r\nclass LayoutEngine {\r\n  /**\r\n   * @param {Object} body\r\n   */\r\n  constructor(body) {\r\n    this.body = body;\r\n\r\n    this.initialRandomSeed = Math.round(Math.random() * 1000000);\r\n    this.randomSeed = this.initialRandomSeed;\r\n    this.setPhysics = false;\r\n    this.options = {};\r\n    this.optionsBackup = {physics:{}};\r\n\r\n    this.defaultOptions = {\r\n      randomSeed: undefined,\r\n      improvedLayout: true,\r\n      hierarchical: {\r\n        enabled:false,\r\n        levelSeparation: 150,\r\n        nodeSpacing: 100,\r\n        treeSpacing: 200,\r\n        blockShifting: true,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: 'UD',   // UD, DU, LR, RL\r\n        sortMethod: 'hubsize' // hubsize, directed\r\n      }\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Binds event listeners\r\n   */\r\n  bindEventListeners() {\r\n    this.body.emitter.on('_dataChanged', () => {\r\n      this.setupHierarchicalLayout();\r\n    });\r\n    this.body.emitter.on('_dataLoaded', () => {\r\n      this.layoutNetwork();\r\n    });\r\n    this.body.emitter.on('_resetHierarchicalLayout', () => {\r\n      this.setupHierarchicalLayout();\r\n    });\r\n    this.body.emitter.on('_adjustEdgesForHierarchicalLayout', () => {\r\n      if (this.options.hierarchical.enabled !== true) {\r\n        return;\r\n      }\r\n      // get the type of static smooth curve in case it is required\r\n      let type = this.direction.curveType();\r\n\r\n      // force all edges into static smooth curves.\r\n      this.body.emitter.emit('_forceDisableDynamicCurves', type, false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options\r\n   * @param {Object} allOptions\r\n   * @returns {Object}\r\n   */\r\n  setOptions(options, allOptions) {\r\n    if (options !== undefined) {\r\n      let hierarchical = this.options.hierarchical;\r\n      let prevHierarchicalState = hierarchical.enabled;\r\n      util.selectiveDeepExtend([\"randomSeed\", \"improvedLayout\"],this.options, options);\r\n      util.mergeOptions(this.options, options, 'hierarchical');\r\n      if (options.randomSeed !== undefined)     {this.initialRandomSeed = options.randomSeed;}\r\n\r\n      if (hierarchical.enabled === true) {\r\n        if (prevHierarchicalState === true) {\r\n          // refresh the overridden options for nodes and edges.\r\n          this.body.emitter.emit('refresh', true);\r\n        }\r\n\r\n        // make sure the level separation is the right way up\r\n        if (hierarchical.direction === 'RL' || hierarchical.direction === 'DU') {\r\n          if (hierarchical.levelSeparation > 0) {\r\n            hierarchical.levelSeparation *= -1;\r\n          }\r\n        }\r\n        else {\r\n          if (hierarchical.levelSeparation < 0) {\r\n            hierarchical.levelSeparation *= -1;\r\n          }\r\n        }\r\n\r\n        this.setDirectionStrategy();\r\n\r\n        this.body.emitter.emit('_resetHierarchicalLayout');\r\n        // because the hierarchical system needs it's own physics and smooth curve settings,\r\n        // we adapt the other options if needed.\r\n        return this.adaptAllOptionsForHierarchicalLayout(allOptions);\r\n      }\r\n      else {\r\n        if (prevHierarchicalState === true) {\r\n          // refresh the overridden options for nodes and edges.\r\n          this.body.emitter.emit('refresh');\r\n          return util.deepExtend(allOptions,this.optionsBackup);\r\n        }\r\n      }\r\n    }\r\n    return allOptions;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} allOptions\r\n   * @returns {Object}\r\n   */\r\n  adaptAllOptionsForHierarchicalLayout(allOptions) {\r\n    if (this.options.hierarchical.enabled === true) {\r\n      let backupPhysics = this.optionsBackup.physics;\r\n\r\n      // set the physics\r\n      if (allOptions.physics === undefined || allOptions.physics === true) {\r\n        allOptions.physics = {\r\n          enabled: backupPhysics.enabled === undefined ? true : backupPhysics.enabled,\r\n          solver :'hierarchicalRepulsion'\r\n        };\r\n        backupPhysics.enabled = backupPhysics.enabled === undefined ? true : backupPhysics.enabled;\r\n        backupPhysics.solver = backupPhysics.solver || 'barnesHut';\r\n      }\r\n      else if (typeof allOptions.physics === 'object') {\r\n        backupPhysics.enabled = allOptions.physics.enabled === undefined ? true : allOptions.physics.enabled;\r\n        backupPhysics.solver  = allOptions.physics.solver  || 'barnesHut';\r\n        allOptions.physics.solver = 'hierarchicalRepulsion';\r\n      }\r\n      else if (allOptions.physics !== false) {\r\n        backupPhysics.solver ='barnesHut';\r\n        allOptions.physics = {solver:'hierarchicalRepulsion'};\r\n      }\r\n\r\n      // get the type of static smooth curve in case it is required\r\n      let type = this.direction.curveType();\r\n\r\n      // disable smooth curves if nothing is defined. If smooth curves have been turned on,\r\n      // turn them into static smooth curves.\r\n      if (allOptions.edges === undefined) {\r\n        this.optionsBackup.edges = {smooth:{enabled:true, type:'dynamic'}};\r\n        allOptions.edges = {smooth: false};\r\n      }\r\n      else if (allOptions.edges.smooth === undefined) {\r\n        this.optionsBackup.edges = {smooth:{enabled:true, type:'dynamic'}};\r\n        allOptions.edges.smooth = false;\r\n      }\r\n      else {\r\n        if (typeof allOptions.edges.smooth === 'boolean') {\r\n          this.optionsBackup.edges = {smooth:allOptions.edges.smooth};\r\n          allOptions.edges.smooth = {enabled: allOptions.edges.smooth, type:type}\r\n        }\r\n        else {\r\n          let smooth =  allOptions.edges.smooth;\r\n\r\n          // allow custom types except for dynamic\r\n          if (smooth.type !== undefined && smooth.type !== 'dynamic') {\r\n            type = smooth.type;\r\n          }\r\n\r\n          // TODO: this is options merging; see if the standard routines can be used here.\r\n          this.optionsBackup.edges = {\r\n            smooth        : smooth.enabled        === undefined ? true     : smooth.enabled,\r\n            type          : smooth.type           === undefined ? 'dynamic': smooth.type,\r\n            roundness     : smooth.roundness      === undefined ? 0.5      : smooth.roundness,\r\n            forceDirection: smooth.forceDirection === undefined ? false    : smooth.forceDirection\r\n          };\r\n\r\n\r\n          // NOTE: Copying an object to self; this is basically setting defaults for undefined variables\r\n          allOptions.edges.smooth = {\r\n            enabled       : smooth.enabled        === undefined ? true : smooth.enabled,\r\n            type          : type,\r\n            roundness     : smooth.roundness      === undefined ? 0.5  : smooth.roundness,\r\n            forceDirection: smooth.forceDirection === undefined ? false: smooth.forceDirection\r\n          }\r\n        }\r\n      }\r\n\r\n      // Force all edges into static smooth curves.\r\n      // Only applies to edges that do not use the global options for smooth.\r\n      this.body.emitter.emit('_forceDisableDynamicCurves', type);\r\n    }\r\n\r\n    return allOptions;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  seededRandom() {\r\n    let x = Math.sin(this.randomSeed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array.<Node>} nodesArray\r\n   */\r\n  positionInitially(nodesArray) {\r\n    if (this.options.hierarchical.enabled !== true) {\r\n      this.randomSeed = this.initialRandomSeed;\r\n      let radius = nodesArray.length + 50;\r\n      for (let i = 0; i < nodesArray.length; i++) {\r\n        let node = nodesArray[i];\r\n        let angle = 2 * Math.PI * this.seededRandom();\r\n        if (node.x === undefined) {\r\n          node.x = radius * Math.cos(angle);\r\n        }\r\n        if (node.y === undefined) {\r\n          node.y = radius * Math.sin(angle);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Use Kamada Kawai to position nodes. This is quite a heavy algorithm so if there are a lot of nodes we\r\n   * cluster them first to reduce the amount.\r\n   */\r\n  layoutNetwork() {\r\n    if (this.options.hierarchical.enabled !== true && this.options.improvedLayout === true) {\r\n      let indices = this.body.nodeIndices;\r\n\r\n      // first check if we should Kamada Kawai to layout. The threshold is if less than half of the visible\r\n      // nodes have predefined positions we use this.\r\n      let positionDefined = 0;\r\n      for (let i = 0; i < indices.length; i++) {\r\n        let node = this.body.nodes[indices[i]];\r\n        if (node.predefinedPosition === true) {\r\n          positionDefined += 1;\r\n        }\r\n      }\r\n\r\n      // if less than half of the nodes have a predefined position we continue\r\n      if (positionDefined < 0.5 * indices.length) {\r\n        let MAX_LEVELS = 10;\r\n        let level = 0;\r\n        let clusterThreshold = 150;  // TODO add this to options\r\n\r\n        //\r\n        // Define the options for the hidden cluster nodes\r\n        // These options don't propagate outside the clustering phase.\r\n        //\r\n        // Some options are explicitly disabled, because they may be set in group or default node options.\r\n        // The clusters are never displayed, so most explicit settings here serve as performance optimizations.\r\n        //\r\n        // The explicit setting of 'shape' is to avoid `shape: 'image'`; images are not passed to the hidden\r\n        // cluster nodes, leading to an exception on creation.\r\n        //\r\n        // All settings here are performance related, except when noted otherwise.\r\n        //\r\n        let clusterOptions = {\r\n          clusterNodeProperties:{\r\n            shape: 'ellipse',       // Bugfix: avoid type 'image', no images supplied\r\n            label: '',              // avoid label handling\r\n            group: '',              // avoid group handling\r\n            font: {multi: false},   // avoid font propagation\r\n          },\r\n          clusterEdgeProperties:{\r\n            label: '',              // avoid label handling\r\n            font: {multi: false},   // avoid font propagation\r\n            smooth: {\r\n              enabled: false        // avoid drawing penalty for complex edges\r\n            }\r\n          }\r\n        };\r\n\r\n        // if there are a lot of nodes, we cluster before we run the algorithm.\r\n        // NOTE: this part fails to find clusters for large scale-free networks, which should\r\n        //       be easily clusterable.\r\n        // TODO: examine why this is so\r\n        if (indices.length > clusterThreshold) {\r\n          let startLength = indices.length;\r\n          while (indices.length > clusterThreshold && level <= MAX_LEVELS) {\r\n            //console.time(\"clustering\")\r\n            level += 1;\r\n            let before = indices.length;\r\n            // if there are many nodes we do a hubsize cluster\r\n            if (level % 3 === 0) {\r\n              this.body.modules.clustering.clusterBridges(clusterOptions);\r\n            }\r\n            else {\r\n              this.body.modules.clustering.clusterOutliers(clusterOptions);\r\n            }\r\n            let after = indices.length;\r\n            if (before == after && level % 3 !== 0) {\r\n              this._declusterAll();\r\n              this.body.emitter.emit(\"_layoutFailed\");\r\n              console.info(\"This network could not be positioned by this version of the improved layout algorithm.\"\r\n                        +  \" Please disable improvedLayout for better performance.\");\r\n              return;\r\n            }\r\n            //console.timeEnd(\"clustering\")\r\n            //console.log(before,level,after);\r\n          }\r\n          // increase the size of the edges\r\n          this.body.modules.kamadaKawai.setOptions({springLength: Math.max(150, 2 * startLength)})\r\n        }\r\n        if (level > MAX_LEVELS){\r\n          console.info(\"The clustering didn't succeed within the amount of interations allowed,\"\r\n                     + \" progressing with partial result.\");\r\n        }\r\n\r\n        // position the system for these nodes and edges\r\n        this.body.modules.kamadaKawai.solve(indices, this.body.edgeIndices, true);\r\n\r\n        // shift to center point\r\n        this._shiftToCenter();\r\n\r\n        // perturb the nodes a little bit to force the physics to kick in\r\n        let offset = 70;\r\n        for (let i = 0; i < indices.length; i++) {\r\n          // Only perturb the nodes that aren't fixed\r\n          let node = this.body.nodes[indices[i]];\r\n          if (node.predefinedPosition === false) {\r\n            node.x += (0.5 - this.seededRandom())*offset;\r\n            node.y += (0.5 - this.seededRandom())*offset;\r\n          }\r\n        }\r\n\r\n        // uncluster all clusters\r\n        this._declusterAll();\r\n\r\n        // reposition all bezier nodes.\r\n        this.body.emitter.emit(\"_repositionBezierNodes\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move all the nodes towards to the center so gravitational pull wil not move the nodes away from view\r\n   * @private\r\n   */\r\n  _shiftToCenter() {\r\n    let range = NetworkUtil.getRangeCore(this.body.nodes, this.body.nodeIndices);\r\n    let center = NetworkUtil.findCenter(range);\r\n    for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n      let node = this.body.nodes[this.body.nodeIndices[i]];\r\n      node.x -= center.x;\r\n      node.y -= center.y;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands all clusters\r\n   * @private\r\n   */\r\n  _declusterAll() {\r\n    let clustersPresent = true;\r\n    while (clustersPresent === true) {\r\n      clustersPresent = false;\r\n      for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n        if (this.body.nodes[this.body.nodeIndices[i]].isCluster === true) {\r\n          clustersPresent = true;\r\n          this.body.modules.clustering.openCluster(this.body.nodeIndices[i], {}, false);\r\n        }\r\n      }\r\n      if (clustersPresent === true) {\r\n        this.body.emitter.emit('_dataChanged');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number|*}\r\n   */\r\n  getSeed() {\r\n    return this.initialRandomSeed;\r\n  }\r\n\r\n  /**\r\n   * This is the main function to layout the nodes in a hierarchical way.\r\n   * It checks if the node details are supplied correctly\r\n   *\r\n   * @private\r\n   */\r\n  setupHierarchicalLayout() {\r\n    if (this.options.hierarchical.enabled === true && this.body.nodeIndices.length > 0) {\r\n      // get the size of the largest hubs and check if the user has defined a level for a node.\r\n      let node, nodeId;\r\n      let definedLevel = false;\r\n      let undefinedLevel = false;\r\n      this.lastNodeOnLevel = {};\r\n      this.hierarchical = new HierarchicalStatus();\r\n\r\n      for (nodeId in this.body.nodes) {\r\n        if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n          node = this.body.nodes[nodeId];\r\n          if (node.options.level !== undefined) {\r\n            definedLevel = true;\r\n            this.hierarchical.levels[nodeId] = node.options.level;\r\n          }\r\n          else {\r\n            undefinedLevel = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      // if the user defined some levels but not all, alert and run without hierarchical layout\r\n      if (undefinedLevel === true && definedLevel === true) {\r\n        throw new Error('To use the hierarchical layout, nodes require either no predefined levels'\r\n                      + ' or levels have to be defined for all nodes.');\r\n      }\r\n      else {\r\n        // define levels if undefined by the users. Based on hubsize.\r\n        if (undefinedLevel === true) {\r\n          let sortMethod = this.options.hierarchical.sortMethod;\r\n          if (sortMethod === 'hubsize') {\r\n            this._determineLevelsByHubsize();\r\n          }\r\n          else if (sortMethod === 'directed') {\r\n            this._determineLevelsDirected();\r\n          }\r\n          else if (sortMethod === 'custom') {\r\n            this._determineLevelsCustomCallback();\r\n          }\r\n        }\r\n\r\n\r\n        // fallback for cases where there are nodes but no edges\r\n        for (let nodeId in this.body.nodes) {\r\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n            this.hierarchical.ensureLevel(nodeId);\r\n          }\r\n        }\r\n        // check the distribution of the nodes per level.\r\n        let distribution = this._getDistribution();\r\n\r\n        // get the parent children relations.\r\n        this._generateMap();\r\n\r\n        // place the nodes on the canvas.\r\n        this._placeNodesByHierarchy(distribution);\r\n\r\n        // condense the whitespace.\r\n        this._condenseHierarchy();\r\n\r\n        // shift to center so gravity does not have to do much\r\n        this._shiftToCenter();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _condenseHierarchy() {\r\n    // Global var in this scope to define when the movement has stopped.\r\n    let stillShifting = false;\r\n    let branches = {};\r\n    // first we have some methods to help shifting trees around.\r\n    // the main method to shift the trees\r\n    let shiftTrees = () => {\r\n      let treeSizes = getTreeSizes();\r\n      let shiftBy = 0;\r\n      for (let i = 0; i < treeSizes.length - 1; i++) {\r\n        let diff = treeSizes[i].max - treeSizes[i+1].min;\r\n        shiftBy += diff + this.options.hierarchical.treeSpacing;\r\n        shiftTree(i + 1, shiftBy);\r\n      }\r\n    };\r\n\r\n    // shift a single tree by an offset\r\n    let shiftTree = (index, offset) => {\r\n      let trees = this.hierarchical.trees;\r\n\r\n      for (let nodeId in trees) {\r\n        if (trees.hasOwnProperty(nodeId)) {\r\n          if (trees[nodeId] === index) {\r\n            this.direction.shift(nodeId, offset);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    // get the width of all trees\r\n    let getTreeSizes = () => {\r\n      let treeWidths = [];\r\n      for (let i = 0; i < this.hierarchical.numTrees(); i++) {\r\n        treeWidths.push(this.direction.getTreeSize(i));\r\n      }\r\n      return treeWidths;\r\n    };\r\n\r\n\r\n    // get a map of all nodes in this branch\r\n    let getBranchNodes = (source, map) => {\r\n      if (map[source.id]) {\r\n        return;\r\n      }\r\n      map[source.id] = true;\r\n      if (this.hierarchical.childrenReference[source.id]) {\r\n        let children = this.hierarchical.childrenReference[source.id];\r\n        if (children.length > 0) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            getBranchNodes(this.body.nodes[children[i]], map);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    // get a min max width as well as the maximum movement space it has on either sides\r\n    // we use min max terminology because width and height can interchange depending on the direction of the layout\r\n    let getBranchBoundary = (branchMap, maxLevel = 1e9) => {\r\n      let minSpace = 1e9;\r\n      let maxSpace = 1e9;\r\n      let min = 1e9;\r\n      let max = -1e9;\r\n      for (let branchNode in branchMap) {\r\n        if (branchMap.hasOwnProperty(branchNode)) {\r\n          let node = this.body.nodes[branchNode];\r\n          let level = this.hierarchical.levels[node.id];\r\n          let position = this.direction.getPosition(node);\r\n\r\n          // get the space around the node.\r\n          let [minSpaceNode, maxSpaceNode] = this._getSpaceAroundNode(node,branchMap);\r\n          minSpace = Math.min(minSpaceNode, minSpace);\r\n          maxSpace = Math.min(maxSpaceNode, maxSpace);\r\n\r\n          // the width is only relevant for the levels two nodes have in common. This is why we filter on this.\r\n          if (level <= maxLevel) {\r\n            min = Math.min(position, min);\r\n            max = Math.max(position, max);\r\n          }\r\n        }\r\n      }\r\n\r\n      return [min, max, minSpace, maxSpace];\r\n    }\r\n\r\n\r\n    // check what the maximum level is these nodes have in common.\r\n    let getCollisionLevel = (node1, node2) => {\r\n      let maxLevel1 = this.hierarchical.getMaxLevel(node1.id);\r\n      let maxLevel2 = this.hierarchical.getMaxLevel(node2.id);\r\n      return Math.min(maxLevel1, maxLevel2);\r\n    };\r\n\r\n\r\n    /**\r\n     * Condense elements. These can be nodes or branches depending on the callback.\r\n     *\r\n     * @param {function} callback\r\n     * @param {Array.<number>} levels\r\n     * @param {*} centerParents\r\n     */\r\n    let shiftElementsCloser = (callback, levels, centerParents) => {\r\n      let hier = this.hierarchical;\r\n\r\n      for (let i = 0; i < levels.length; i++) {\r\n        let level = levels[i];\r\n        let levelNodes = hier.distributionOrdering[level];\r\n        if (levelNodes.length > 1) {\r\n          for (let j = 0; j < levelNodes.length - 1; j++) {\r\n            let node1 = levelNodes[j];\r\n            let node2 = levelNodes[j+1];\r\n\r\n            // NOTE: logic maintained as it was; if nodes have same ancestor,\r\n            //       then of course they are in the same sub-network.\r\n            if (hier.hasSameParent(node1, node2) && hier.inSameSubNetwork(node1, node2) ) {\r\n              callback(node1, node2, centerParents);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // callback for shifting branches\r\n    let branchShiftCallback = (node1, node2, centerParent = false) => {\r\n      //window.CALLBACKS.push(() => {\r\n        let pos1 = this.direction.getPosition(node1);\r\n        let pos2 = this.direction.getPosition(node2);\r\n        let diffAbs = Math.abs(pos2 - pos1);\r\n        let nodeSpacing =  this.options.hierarchical.nodeSpacing;\r\n        //console.log(\"NOW CHECKING:\", node1.id, node2.id, diffAbs);\r\n        if (diffAbs > nodeSpacing) {\r\n          let branchNodes1 = {};\r\n          let branchNodes2 = {};\r\n\r\n          getBranchNodes(node1, branchNodes1);\r\n          getBranchNodes(node2, branchNodes2);\r\n\r\n          // check the largest distance between the branches\r\n          let maxLevel = getCollisionLevel(node1, node2);\r\n          let branchNodeBoundary1 = getBranchBoundary(branchNodes1, maxLevel);\r\n          let branchNodeBoundary2 = getBranchBoundary(branchNodes2, maxLevel);\r\n          let max1 = branchNodeBoundary1[1];\r\n          let min2 = branchNodeBoundary2[0];\r\n          let minSpace2 = branchNodeBoundary2[2];\r\n\r\n          //console.log(node1.id, getBranchBoundary(branchNodes1, maxLevel), node2.id,\r\n          //            getBranchBoundary(branchNodes2, maxLevel), maxLevel);\r\n          let diffBranch = Math.abs(max1 - min2);\r\n          if (diffBranch > nodeSpacing) {\r\n            let offset = max1 - min2 + nodeSpacing;\r\n            if (offset < -minSpace2 + nodeSpacing) {\r\n              offset = -minSpace2 + nodeSpacing;\r\n              //console.log(\"RESETTING OFFSET\", max1 - min2 + this.options.hierarchical.nodeSpacing, -minSpace2, offset);\r\n            }\r\n            if (offset < 0) {\r\n              //console.log(\"SHIFTING\", node2.id, offset);\r\n              this._shiftBlock(node2.id, offset);\r\n              stillShifting = true;\r\n\r\n              if (centerParent === true)\r\n                this._centerParent(node2);\r\n            }\r\n          }\r\n\r\n        }\r\n        //this.body.emitter.emit(\"_redraw\");})\r\n    };\r\n\r\n    let minimizeEdgeLength = (iterations, node) => {\r\n      //window.CALLBACKS.push(() => {\r\n      //  console.log(\"ts\",node.id);\r\n        let nodeId = node.id;\r\n        let allEdges = node.edges;\r\n        let nodeLevel = this.hierarchical.levels[node.id];\r\n\r\n        // gather constants\r\n        let C2 = this.options.hierarchical.levelSeparation * this.options.hierarchical.levelSeparation;\r\n        let referenceNodes = {};\r\n        let aboveEdges = [];\r\n        for (let i = 0; i < allEdges.length; i++) {\r\n          let edge = allEdges[i];\r\n          if (edge.toId != edge.fromId) {\r\n            let otherNode = edge.toId == nodeId ? edge.from : edge.to;\r\n            referenceNodes[allEdges[i].id] = otherNode;\r\n            if (this.hierarchical.levels[otherNode.id] < nodeLevel) {\r\n              aboveEdges.push(edge);\r\n            }\r\n          }\r\n        }\r\n\r\n        // differentiated sum of lengths based on only moving one node over one axis\r\n        let getFx = (point, edges) => {\r\n          let sum = 0;\r\n          for (let i = 0; i < edges.length; i++) {\r\n            if (referenceNodes[edges[i].id] !== undefined) {\r\n              let a = this.direction.getPosition(referenceNodes[edges[i].id]) - point;\r\n              sum += a / Math.sqrt(a * a + C2);\r\n            }\r\n          }\r\n          return sum;\r\n        };\r\n\r\n        // doubly differentiated sum of lengths based on only moving one node over one axis\r\n        let getDFx = (point, edges) => {\r\n          let sum = 0;\r\n          for (let i = 0; i < edges.length; i++) {\r\n            if (referenceNodes[edges[i].id] !== undefined) {\r\n              let a = this.direction.getPosition(referenceNodes[edges[i].id]) - point;\r\n              sum -= (C2 * Math.pow(a * a + C2, -1.5));\r\n            }\r\n          }\r\n          return sum;\r\n        };\r\n\r\n        let getGuess = (iterations, edges) => {\r\n          let guess = this.direction.getPosition(node);\r\n          // Newton's method for optimization\r\n          let guessMap = {};\r\n          for (let i = 0; i < iterations; i++) {\r\n            let fx = getFx(guess, edges);\r\n            let dfx = getDFx(guess, edges);\r\n\r\n            // we limit the movement to avoid instability.\r\n            let limit = 40;\r\n            let ratio = Math.max(-limit, Math.min(limit, Math.round(fx/dfx)));\r\n            guess = guess - ratio;\r\n            // reduce duplicates\r\n            if (guessMap[guess] !== undefined) {\r\n              break;\r\n            }\r\n            guessMap[guess] = i;\r\n          }\r\n          return guess;\r\n        };\r\n\r\n        let moveBranch = (guess) => {\r\n          // position node if there is space\r\n          let nodePosition = this.direction.getPosition(node);\r\n\r\n          // check movable area of the branch\r\n          if (branches[node.id] === undefined) {\r\n            let branchNodes = {};\r\n            getBranchNodes(node, branchNodes);\r\n            branches[node.id] = branchNodes;\r\n          }\r\n          let branchBoundary = getBranchBoundary(branches[node.id]);\r\n          let minSpaceBranch = branchBoundary[2];\r\n          let maxSpaceBranch = branchBoundary[3];\r\n\r\n          let diff = guess - nodePosition;\r\n\r\n          // check if we are allowed to move the node:\r\n          let branchOffset = 0;\r\n          if (diff > 0) {\r\n            branchOffset = Math.min(diff, maxSpaceBranch - this.options.hierarchical.nodeSpacing);\r\n          }\r\n          else if (diff < 0) {\r\n            branchOffset = -Math.min(-diff, minSpaceBranch - this.options.hierarchical.nodeSpacing);\r\n          }\r\n\r\n          if (branchOffset != 0) {\r\n            //console.log(\"moving branch:\",branchOffset, maxSpaceBranch, minSpaceBranch)\r\n            this._shiftBlock(node.id, branchOffset);\r\n            //this.body.emitter.emit(\"_redraw\");\r\n            stillShifting = true;\r\n          }\r\n        };\r\n\r\n        let moveNode = (guess) => {\r\n          let nodePosition = this.direction.getPosition(node);\r\n\r\n          // position node if there is space\r\n          let [minSpace, maxSpace] = this._getSpaceAroundNode(node);\r\n          let diff = guess - nodePosition;\r\n          // check if we are allowed to move the node:\r\n          let newPosition = nodePosition;\r\n          if (diff > 0) {\r\n            newPosition = Math.min(nodePosition + (maxSpace - this.options.hierarchical.nodeSpacing), guess);\r\n          }\r\n          else if (diff < 0) {\r\n            newPosition = Math.max(nodePosition - (minSpace - this.options.hierarchical.nodeSpacing), guess);\r\n          }\r\n\r\n          if (newPosition !== nodePosition) {\r\n            //console.log(\"moving Node:\",diff, minSpace, maxSpace);\r\n            this.direction.setPosition(node, newPosition);\r\n            //this.body.emitter.emit(\"_redraw\");\r\n            stillShifting = true;\r\n          }\r\n        };\r\n\r\n        let guess = getGuess(iterations, aboveEdges);\r\n        moveBranch(guess);\r\n        guess = getGuess(iterations, allEdges);\r\n        moveNode(guess);\r\n      //})\r\n    };\r\n\r\n    // method to remove whitespace between branches. Because we do bottom up, we can center the parents.\r\n    let minimizeEdgeLengthBottomUp = (iterations) => {\r\n      let levels = this.hierarchical.getLevels();\r\n      levels = levels.reverse();\r\n      for (let i = 0; i < iterations; i++) {\r\n        stillShifting = false;\r\n        for (let j = 0; j < levels.length; j++) {\r\n          let level = levels[j];\r\n          let levelNodes = this.hierarchical.distributionOrdering[level];\r\n          for (let k = 0; k < levelNodes.length; k++) {\r\n            minimizeEdgeLength(1000, levelNodes[k]);\r\n          }\r\n        }\r\n        if (stillShifting !== true) {\r\n          //console.log(\"FINISHED minimizeEdgeLengthBottomUp IN \" + i);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    // method to remove whitespace between branches. Because we do bottom up, we can center the parents.\r\n    let shiftBranchesCloserBottomUp = (iterations) => {\r\n      let levels = this.hierarchical.getLevels();\r\n      levels = levels.reverse();\r\n      for (let i = 0; i < iterations; i++) {\r\n        stillShifting = false;\r\n        shiftElementsCloser(branchShiftCallback, levels, true);\r\n        if (stillShifting !== true) {\r\n          //console.log(\"FINISHED shiftBranchesCloserBottomUp IN \" + (i+1));\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    // center all parents\r\n    let centerAllParents = () => {\r\n      for (let nodeId in this.body.nodes) {\r\n        if (this.body.nodes.hasOwnProperty(nodeId))\r\n          this._centerParent(this.body.nodes[nodeId]);\r\n      }\r\n    };\r\n\r\n    // center all parents\r\n    let centerAllParentsBottomUp = () => {\r\n      let levels = this.hierarchical.getLevels();\r\n      levels = levels.reverse();\r\n      for (let i = 0; i < levels.length; i++) {\r\n        let level = levels[i];\r\n        let levelNodes = this.hierarchical.distributionOrdering[level];\r\n        for (let j = 0; j < levelNodes.length; j++) {\r\n          this._centerParent(levelNodes[j]);\r\n        }\r\n      }\r\n    };\r\n\r\n    // the actual work is done here.\r\n    if (this.options.hierarchical.blockShifting === true) {\r\n      shiftBranchesCloserBottomUp(5);\r\n      centerAllParents();\r\n    }\r\n\r\n    // minimize edge length\r\n    if (this.options.hierarchical.edgeMinimization === true) {\r\n      minimizeEdgeLengthBottomUp(20);\r\n    }\r\n\r\n    if (this.options.hierarchical.parentCentralization === true) {\r\n      centerAllParentsBottomUp()\r\n    }\r\n\r\n    shiftTrees();\r\n  }\r\n\r\n  /**\r\n   * This gives the space around the node. IF a map is supplied, it will only check against nodes NOT in the map.\r\n   * This is used to only get the distances to nodes outside of a branch.\r\n   * @param {Node} node\r\n   * @param {{Node.id: vis.Node}} map\r\n   * @returns {number[]}\r\n   * @private\r\n   */\r\n  _getSpaceAroundNode(node, map) {\r\n    let useMap = true;\r\n    if (map === undefined) {\r\n      useMap = false;\r\n    }\r\n    let level = this.hierarchical.levels[node.id];\r\n    if (level !== undefined) {\r\n      let index = this.hierarchical.distributionIndex[node.id];\r\n      let position = this.direction.getPosition(node);\r\n      let ordering = this.hierarchical.distributionOrdering[level];\r\n      let minSpace = 1e9;\r\n      let maxSpace = 1e9;\r\n      if (index !== 0) {\r\n        let prevNode = ordering[index - 1];\r\n        if ((useMap === true && map[prevNode.id] === undefined) || useMap === false) {\r\n          let prevPos = this.direction.getPosition(prevNode);\r\n          minSpace = position - prevPos;\r\n        }\r\n      }\r\n\r\n      if (index != ordering.length - 1) {\r\n        let nextNode = ordering[index + 1];\r\n        if ((useMap === true && map[nextNode.id] === undefined) || useMap === false) {\r\n          let nextPos = this.direction.getPosition(nextNode);\r\n          maxSpace = Math.min(maxSpace, nextPos - position);\r\n        }\r\n      }\r\n\r\n      return [minSpace, maxSpace];\r\n    }\r\n    else {\r\n      return [0, 0];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * We use this method to center a parent node and check if it does not cross other nodes when it does.\r\n   * @param {Node} node\r\n   * @private\r\n   */\r\n  _centerParent(node) {\r\n    if (this.hierarchical.parentReference[node.id]) {\r\n      let parents = this.hierarchical.parentReference[node.id];\r\n      for (var i = 0; i < parents.length; i++) {\r\n        let parentId = parents[i];\r\n        let parentNode = this.body.nodes[parentId];\r\n        let children = this.hierarchical.childrenReference[parentId];\r\n\r\n        if (children !== undefined) {\r\n          // get the range of the children\r\n          let newPosition = this._getCenterPosition(children);\r\n\r\n          let position = this.direction.getPosition(parentNode);\r\n          let [minSpace, maxSpace] = this._getSpaceAroundNode(parentNode);\r\n          let diff = position - newPosition;\r\n          if ((diff < 0 && Math.abs(diff) < maxSpace - this.options.hierarchical.nodeSpacing) ||\r\n              (diff > 0 && Math.abs(diff) < minSpace - this.options.hierarchical.nodeSpacing)) {\r\n            this.direction.setPosition(parentNode, newPosition);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This function places the nodes on the canvas based on the hierarchial distribution.\r\n   *\r\n   * @param {Object} distribution | obtained by the function this._getDistribution()\r\n   * @private\r\n   */\r\n  _placeNodesByHierarchy(distribution) {\r\n    this.positionedNodes = {};\r\n    // start placing all the level 0 nodes first. Then recursively position their branches.\r\n    for (let level in distribution) {\r\n      if (distribution.hasOwnProperty(level)) {\r\n        // sort nodes in level by position:\r\n        let nodeArray = Object.keys(distribution[level]);\r\n        nodeArray = this._indexArrayToNodes(nodeArray);\r\n        this.direction.sort(nodeArray);\r\n        let handledNodeCount = 0;\r\n\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          let node = nodeArray[i];\r\n          if (this.positionedNodes[node.id] === undefined) {\r\n            let spacing = this.options.hierarchical.nodeSpacing;\r\n            let pos = spacing * handledNodeCount;\r\n            // We get the X or Y values we need and store them in pos and previousPos.\r\n            // The get and set make sure we get X or Y\r\n            if (handledNodeCount > 0) {\r\n              pos = this.direction.getPosition(nodeArray[i-1]) + spacing;\r\n            }\r\n            this.direction.setPosition(node, pos, level);\r\n            this._validatePositionAndContinue(node, level, pos);\r\n\r\n            handledNodeCount++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This is a recursively called function to enumerate the branches from the largest hubs and place the nodes\r\n   * on a X position that ensures there will be no overlap.\r\n   *\r\n   * @param {Node.id} parentId\r\n   * @param {number} parentLevel\r\n   * @private\r\n   */\r\n  _placeBranchNodes(parentId, parentLevel) {\r\n    let childRef = this.hierarchical.childrenReference[parentId];\r\n\r\n    // if this is not a parent, cancel the placing. This can happen with multiple parents to one child.\r\n    if (childRef === undefined) {\r\n      return;\r\n    }\r\n\r\n    // get a list of childNodes\r\n    let childNodes = [];\r\n    for (let i = 0; i < childRef.length; i++) {\r\n      childNodes.push(this.body.nodes[childRef[i]]);\r\n    }\r\n\r\n    // use the positions to order the nodes.\r\n    this.direction.sort(childNodes);\r\n\r\n    // position the childNodes\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n      let childNode = childNodes[i];\r\n      let childNodeLevel = this.hierarchical.levels[childNode.id];\r\n      // check if the child node is below the parent node and if it has already been positioned.\r\n      if (childNodeLevel > parentLevel && this.positionedNodes[childNode.id] === undefined) {\r\n        // get the amount of space required for this node. If parent the width is based on the amount of children.\r\n        let spacing = this.options.hierarchical.nodeSpacing;\r\n        let pos;\r\n\r\n        // we get the X or Y values we need and store them in pos and previousPos.\r\n        // The get and set make sure we get X or Y\r\n        if (i === 0) {\r\n          pos = this.direction.getPosition(this.body.nodes[parentId]);\r\n        } else {\r\n          pos = this.direction.getPosition(childNodes[i-1]) + spacing;\r\n        }\r\n        this.direction.setPosition(childNode, pos, childNodeLevel);\r\n        this._validatePositionAndContinue(childNode, childNodeLevel, pos);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // center the parent nodes.\r\n    let center = this._getCenterPosition(childNodes);\r\n    this.direction.setPosition(this.body.nodes[parentId], center, parentLevel);\r\n  }\r\n\r\n\r\n  /**\r\n   * This method checks for overlap and if required shifts the branch. It also keeps records of positioned nodes.\r\n   * Finally it will call _placeBranchNodes to place the branch nodes.\r\n   * @param {Node} node\r\n   * @param {number} level\r\n   * @param {number} pos\r\n   * @private\r\n   */\r\n  _validatePositionAndContinue(node, level, pos) {\r\n    // This method only works for formal trees and formal forests\r\n    // Early exit if this is not the case\r\n    if (!this.hierarchical.isTree) return;\r\n\r\n    // if overlap has been detected, we shift the branch\r\n    if (this.lastNodeOnLevel[level] !== undefined) {\r\n      let previousPos = this.direction.getPosition(this.body.nodes[this.lastNodeOnLevel[level]]);\r\n      if (pos - previousPos < this.options.hierarchical.nodeSpacing) {\r\n        let diff = (previousPos + this.options.hierarchical.nodeSpacing) - pos;\r\n        let sharedParent = this._findCommonParent(this.lastNodeOnLevel[level], node.id);\r\n        this._shiftBlock(sharedParent.withChild, diff);\r\n      }\r\n    }\r\n\r\n    this.lastNodeOnLevel[level] = node.id;  // store change in position.\r\n    this.positionedNodes[node.id] = true;\r\n    this._placeBranchNodes(node.id, level);\r\n  }\r\n\r\n  /**\r\n   * Receives an array with node indices and returns an array with the actual node references.\r\n   * Used for sorting based on node properties.\r\n   * @param {Array.<Node.id>} idArray\r\n   * @returns {Array.<Node>}\r\n   */\r\n  _indexArrayToNodes(idArray) {\r\n    let array = [];\r\n    for (let i = 0; i < idArray.length; i++) {\r\n      array.push(this.body.nodes[idArray[i]])\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * This function get the distribution of levels based on hubsize\r\n   *\r\n   * @returns {Object}\r\n   * @private\r\n   */\r\n  _getDistribution() {\r\n    let distribution = {};\r\n    let nodeId, node;\r\n\r\n    // we fix Y because the hierarchy is vertical,\r\n    // we fix X so we do not give a node an x position for a second time.\r\n    // the fix of X is removed after the x value has been set.\r\n    for (nodeId in this.body.nodes) {\r\n      if (this.body.nodes.hasOwnProperty(nodeId)) {\r\n        node = this.body.nodes[nodeId];\r\n        let level = this.hierarchical.levels[nodeId] === undefined ? 0 : this.hierarchical.levels[nodeId];\r\n        this.direction.fix(node, level);\r\n        if (distribution[level] === undefined) {\r\n          distribution[level] = {};\r\n        }\r\n        distribution[level][nodeId] = node;\r\n      }\r\n    }\r\n    return distribution;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the active (i.e. visible) edges for this node\r\n   *\r\n   * @param {Node} node\r\n   * @returns {Array.<vis.Edge>} Array of edge instances\r\n   * @private\r\n   */\r\n  _getActiveEdges(node) {\r\n    let result = [];\r\n\r\n    util.forEach(node.edges, (edge) => { \r\n      if (this.body.edgeIndices.indexOf(edge.id) !== -1) {\r\n        result.push(edge);\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the hubsizes for all active nodes.\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getHubSizes() {\r\n    let hubSizes = {};\r\n    let nodeIds = this.body.nodeIndices;\r\n\r\n    util.forEach(nodeIds, (nodeId) => { \r\n      let node = this.body.nodes[nodeId];\r\n      let hubSize = this._getActiveEdges(node).length;\r\n      hubSizes[hubSize] = true;\r\n    });\r\n\r\n    // Make an array of the size sorted descending\r\n    let result = [];\r\n    util.forEach(hubSizes, (size) => { \r\n      result.push(Number(size));\r\n    });\r\n\r\n    result.sort(function(a, b) {\r\n      return b - a;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * this function allocates nodes in levels based on the recursive branching from the largest hubs.\r\n   *\r\n   * @private\r\n   */\r\n  _determineLevelsByHubsize() {\r\n    let levelDownstream = (nodeA, nodeB) => {\r\n      this.hierarchical.levelDownstream(nodeA, nodeB);\r\n    }\r\n\r\n    let hubSizes = this._getHubSizes();\r\n\r\n    for (let i = 0; i < hubSizes.length; ++i ) {\r\n      let hubSize = hubSizes[i];\r\n      if (hubSize === 0) break;\r\n\r\n      util.forEach(this.body.nodeIndices, (nodeId) => { \r\n        let node = this.body.nodes[nodeId];\r\n\r\n        if (hubSize === this._getActiveEdges(node).length) {\r\n          this._crawlNetwork(levelDownstream, nodeId);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * TODO: release feature\r\n   * TODO: Determine if this feature is needed at all\r\n   *\r\n   * @private\r\n   */\r\n  _determineLevelsCustomCallback() {\r\n    let minLevel = 100000;\r\n\r\n    // TODO: this should come from options.\r\n    let customCallback = function(nodeA, nodeB, edge) {  // eslint-disable-line no-unused-vars\r\n\r\n    };\r\n\r\n    // TODO: perhaps move to HierarchicalStatus.\r\n    //       But I currently don't see the point, this method is not used.\r\n    let levelByDirection = (nodeA, nodeB, edge) => {\r\n      let levelA = this.hierarchical.levels[nodeA.id];\r\n      // set initial level\r\n      if (levelA === undefined) { levelA = this.hierarchical.levels[nodeA.id] = minLevel;}\r\n\r\n      let diff = customCallback(\r\n        NetworkUtil.cloneOptions(nodeA,'node'),\r\n        NetworkUtil.cloneOptions(nodeB,'node'),\r\n        NetworkUtil.cloneOptions(edge,'edge')\r\n      );\r\n\r\n      this.hierarchical.levels[nodeB.id] = levelA + diff;\r\n    };\r\n\r\n    this._crawlNetwork(levelByDirection);\r\n    this.hierarchical.setMinLevelToZero(this.body.nodes);\r\n  }\r\n\r\n  /**\r\n   * Allocate nodes in levels based on the direction of the edges.\r\n   *\r\n   * @private\r\n   */\r\n  _determineLevelsDirected() {\r\n    let minLevel = 10000;\r\n\r\n    /**\r\n     * Check if there is an edge going the opposite direction for given edge\r\n     *\r\n     * @param {Edge} edge  edge to check\r\n     * @returns {boolean} true if there's another edge going into the opposite direction\r\n     */\r\n    let isBidirectional = (edge) => {\r\n      util.forEach(this.body.edges, (otherEdge) => {\r\n        if (otherEdge.toId === edge.fromId && otherEdge.fromId === edge.toId) {\r\n          return true;\r\n        }\r\n      });\r\n\r\n      return false;\r\n    };\r\n\r\n\r\n    let levelByDirection = (nodeA, nodeB, edge) => {\r\n      let levelA = this.hierarchical.levels[nodeA.id];\r\n      let levelB = this.hierarchical.levels[nodeB.id];\r\n\r\n      if (isBidirectional(edge) && levelA !== undefined && levelB !== undefined) {\r\n        // Don't redo the level determination if already done in this case.\r\n        return;\r\n      }\r\n\r\n      // set initial level\r\n      if (levelA === undefined) { levelA = this.hierarchical.levels[nodeA.id] = minLevel;}\r\n      if (edge.toId == nodeB.id) {\r\n        this.hierarchical.levels[nodeB.id] = levelA + 1;\r\n      }\r\n      else {\r\n        this.hierarchical.levels[nodeB.id] = levelA - 1;\r\n      }\r\n    };\r\n\r\n    this._crawlNetwork(levelByDirection);\r\n    this.hierarchical.setMinLevelToZero(this.body.nodes);\r\n  }\r\n\r\n\r\n  /**\r\n   * Update the bookkeeping of parent and child.\r\n   * @private\r\n   */\r\n  _generateMap() {\r\n    let fillInRelations = (parentNode, childNode) => {\r\n      if (this.hierarchical.levels[childNode.id] > this.hierarchical.levels[parentNode.id]) {\r\n        this.hierarchical.addRelation(parentNode.id, childNode.id);\r\n      }\r\n    };\r\n\r\n    this._crawlNetwork(fillInRelations);\r\n    this.hierarchical.checkIfTree();\r\n  }\r\n\r\n\r\n  /**\r\n   * Crawl over the entire network and use a callback on each node couple that is connected to each other.\r\n   * @param {function} [callback=function(){}]          | will receive nodeA, nodeB and the connecting edge. A and B are distinct.\r\n   * @param {Node.id} startingNodeId\r\n   * @private\r\n   */\r\n  _crawlNetwork(callback = function() {}, startingNodeId) {\r\n    let progress = {};\r\n\r\n    let crawler = (node, tree) => {\r\n      if (progress[node.id] === undefined) {\r\n        this.hierarchical.setTreeIndex(node, tree);\r\n\r\n        progress[node.id] = true;\r\n        let childNode;\r\n        let edges = this._getActiveEdges(node);\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let edge = edges[i];\r\n          if (edge.connected === true) {\r\n            if (edge.toId == node.id) {         // Not '===' because id's can be string and numeric\r\n              childNode = edge.from;\r\n            }\r\n            else {\r\n              childNode = edge.to;\r\n            }\r\n\r\n            if (node.id != childNode.id) {      // Not '!==' because id's can be string and numeric\r\n              callback(node, childNode, edge);\r\n              crawler(childNode, tree);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    if (startingNodeId === undefined) {\r\n      // Crawl over all nodes\r\n      let treeIndex = 0;      // Serves to pass a unique id for the current distinct tree\r\n\r\n      for (let i = 0; i < this.body.nodeIndices.length; i++) {\r\n        let nodeId = this.body.nodeIndices[i];\r\n\r\n        if (progress[nodeId] === undefined) {\r\n          let node = this.body.nodes[nodeId];\r\n          crawler(node, treeIndex);\r\n          treeIndex += 1;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // Crawl from the given starting node\r\n      let node = this.body.nodes[startingNodeId];\r\n      if (node === undefined) {\r\n        console.error(\"Node not found:\", startingNodeId);\r\n        return;\r\n      }\r\n      crawler(node);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Shift a branch a certain distance\r\n   * @param {Node.id} parentId\r\n   * @param {number} diff\r\n   * @private\r\n   */\r\n  _shiftBlock(parentId, diff) {\r\n    let progress = {};\r\n    let shifter = (parentId) => {\r\n      if (progress[parentId]) {\r\n        return;\r\n      }\r\n      progress[parentId] = true;\r\n      this.direction.shift(parentId, diff);\r\n\r\n      let childRef = this.hierarchical.childrenReference[parentId];\r\n      if (childRef !== undefined) {\r\n        for (let i = 0; i < childRef.length; i++) {\r\n          shifter(childRef[i]);\r\n        }\r\n      }\r\n    };\r\n    shifter(parentId);\r\n  }\r\n\r\n\r\n  /**\r\n   * Find a common parent between branches.\r\n   * @param {Node.id} childA\r\n   * @param {Node.id} childB\r\n   * @returns {{foundParent, withChild}}\r\n   * @private\r\n   */\r\n  _findCommonParent(childA,childB) {\r\n    let parents = {};\r\n    let iterateParents = (parents,child) => {\r\n      let parentRef =  this.hierarchical.parentReference[child];\r\n      if (parentRef !== undefined) {\r\n        for (let i = 0; i < parentRef.length; i++) {\r\n          let parent = parentRef[i];\r\n          parents[parent] = true;\r\n          iterateParents(parents, parent)\r\n        }\r\n      }\r\n    };\r\n    let findParent = (parents, child) => {\r\n      let parentRef =  this.hierarchical.parentReference[child];\r\n      if (parentRef !== undefined) {\r\n        for (let i = 0; i < parentRef.length; i++) {\r\n          let parent = parentRef[i];\r\n          if (parents[parent] !== undefined) {\r\n            return {foundParent:parent, withChild:child};\r\n          }\r\n          let branch = findParent(parents, parent);\r\n          if (branch.foundParent !== null) {\r\n            return branch;\r\n          }\r\n        }\r\n      }\r\n      return {foundParent:null, withChild:child};\r\n    };\r\n\r\n    iterateParents(parents, childA);\r\n    return findParent(parents, childB);\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the strategy pattern for handling the coordinates given the current direction.\r\n   *\r\n   * The individual instances contain all the operations and data specific to a layout direction.\r\n   *\r\n   * @param {Node} node\r\n   * @param {{x: number, y: number}} position\r\n   * @param {number} level\r\n   * @param {boolean} [doNotUpdate=false]\r\n   * @private\r\n   */\r\n  setDirectionStrategy() {\r\n    var isVertical = (this.options.hierarchical.direction === 'UD'\r\n                   || this.options.hierarchical.direction === 'DU');\r\n\r\n    if(isVertical) {\r\n      this.direction = new VerticalStrategy(this); \r\n    } else {\r\n      this.direction = new HorizontalStrategy(this); \r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Determine the center position of a branch from the passed list of child nodes\r\n   *\r\n   * This takes into account the positions of all the child nodes.\r\n   * @param {Array.<Node|vis.Node.id>} childNodes  Array of either child nodes or node id's\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getCenterPosition(childNodes) {\r\n    let minPos = 1e9;\r\n    let maxPos = -1e9;\r\n\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n      let childNode;\r\n      if (childNodes[i].id !== undefined) {\r\n        childNode = childNodes[i];\r\n      } else {\r\n        let childNodeId = childNodes[i];\r\n        childNode = this.body.nodes[childNodeId];\r\n      }\r\n\r\n      let position = this.direction.getPosition(childNode);\r\n      minPos = Math.min(minPos, position);\r\n      maxPos = Math.max(maxPos, position);\r\n    }\r\n\r\n    return 0.5 * (minPos + maxPos);\r\n  }\r\n}\r\n\r\nexport default LayoutEngine;\r\n","/**\r\n * Helper classes for LayoutEngine.\r\n *\r\n * Strategy pattern for usage of direction methods for hierarchical layouts.\r\n */\r\n\r\n\r\n/**\r\n * Interface definition for direction strategy classes.\r\n *\r\n * This class describes the interface for the Strategy\r\n * pattern classes used to differentiate horizontal and vertical\r\n * direction of hierarchical results.\r\n *\r\n * For a given direction, one coordinate will be 'fixed', meaning that it is\r\n * determined by level.\r\n * The other coordinate is 'unfixed', meaning that the nodes on a given level\r\n * can still move along that coordinate. So:\r\n *\r\n * - `vertical` layout: `x` unfixed, `y` fixed per level\r\n * - `horizontal` layout: `x` fixed per level, `y` unfixed\r\n *\r\n * The local methods are stubs and should be regarded as abstract.\r\n * Derived classes **must** implement all the methods themselves.\r\n *\r\n * @private\r\n */\r\nclass DirectionInterface {\r\n  /** @ignore **/\r\n  abstract() {\r\n    throw new Error(\"Can't instantiate abstract class!\");\r\n  }\r\n\r\n  /**\r\n   * This is a dummy call which is used to suppress the jsdoc errors of type:\r\n   *\r\n   *   \"'param' is assigned a value but never used\"\r\n   *\r\n   * @ignore\r\n   **/\r\n  fake_use() {\r\n    // Do nothing special\r\n  }\r\n\r\n  /**\r\n   * Type to use to translate dynamic curves to, in the case of hierarchical layout.\r\n   * Dynamic curves do not work for these.\r\n   *\r\n   * The value should be perpendicular to the actual direction of the layout.\r\n   *\r\n   * @return {string} Direction, either 'vertical' or 'horizontal'\r\n   */\r\n  curveType() { return this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Return the value of the coordinate that is not fixed for this direction.\r\n   *\r\n   * @param {Node} node The node to read\r\n   * @return {number} Value of the unfixed coordinate\r\n   */\r\n  getPosition(node) { this.fake_use(node); return this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Set the value of the coordinate that is not fixed for this direction.\r\n   *\r\n   * @param {Node} node The node to adjust\r\n   * @param {number} position\r\n   * @param {number} [level] if specified, the hierarchy level that this node should be fixed to\r\n   */\r\n  setPosition(node, position, level = undefined) { this.fake_use(node, position, level); this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Get the width of a tree.\r\n   *\r\n   * A `tree` here is a subset of nodes within the network which are not connected to other nodes,\r\n   * only among themselves. In essence, it is a sub-network.\r\n   *\r\n   * @param {number} index The index number of a tree\r\n   * @return {number} the width of a tree in the view coordinates\r\n   */\r\n  getTreeSize(index) { this.fake_use(index); return this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Sort array of nodes on the unfixed coordinates.\r\n   *\r\n   * @param {Array.<Node>} nodeArray array of nodes to sort\r\n   */\r\n  sort(nodeArray) { this.fake_use(nodeArray); this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Assign the fixed coordinate of the node to the given level\r\n   *\r\n   * @param {Node} node The node to adjust\r\n   * @param {number} level The level to fix to\r\n   */\r\n  fix(node, level) { this.fake_use(node, level); this.abstract(); }\r\n\r\n\r\n  /**\r\n   * Add an offset to the unfixed coordinate of the given node. \r\n   *\r\n   * @param {NodeId} nodeId Id of the node to adjust\r\n   * @param {number} diff Offset to add to the unfixed coordinate\r\n   */\r\n  shift(nodeId, diff) { this.fake_use(nodeId, diff); this.abstract(); }\r\n}\r\n\r\n\r\n/**\r\n * Vertical Strategy\r\n *\r\n * Coordinate `y` is fixed on levels, coordinate `x` is unfixed.\r\n *\r\n * @extends DirectionInterface\r\n * @private\r\n */\r\nclass VerticalStrategy extends DirectionInterface {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {Object} layout reference to the parent LayoutEngine instance.\r\n   */\r\n  constructor(layout) {\r\n    super();\r\n    this.layout = layout;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  curveType() {\r\n    return 'horizontal';\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  getPosition(node) {\r\n    return node.x;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  setPosition(node, position, level = undefined) {\r\n    if (level !== undefined) {\r\n      this.layout.hierarchical.addToOrdering(node, level);\r\n    }\r\n    node.x = position;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  getTreeSize(index) {\r\n    let res = this.layout.hierarchical.getTreeSize(this.layout.body.nodes, index);\r\n    return {min: res.min_x, max: res.max_x};\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  sort(nodeArray) {\r\n    nodeArray.sort(function(a, b) {\r\n      // Test on 'undefined' takes care of divergent behaviour in chrome\r\n      if (a.x === undefined || b.x === undefined) return 0;   // THIS HAPPENS\r\n      return a.x - b.x;\r\n    });\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  fix(node, level) {\r\n    node.y = this.layout.options.hierarchical.levelSeparation * level;\r\n    node.options.fixed.y = true;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  shift(nodeId, diff) {\r\n    this.layout.body.nodes[nodeId].x += diff;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Horizontal Strategy\r\n *\r\n * Coordinate `x` is fixed on levels, coordinate `y` is unfixed.\r\n *\r\n * @extends DirectionInterface\r\n * @private\r\n */\r\nclass HorizontalStrategy extends DirectionInterface {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {Object} layout reference to the parent LayoutEngine instance.\r\n   */\r\n  constructor(layout) {\r\n    super();\r\n    this.layout = layout;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  curveType() {\r\n    return 'vertical';\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  getPosition(node) {\r\n    return node.y;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  setPosition(node, position, level = undefined) {\r\n    if (level !== undefined) {\r\n      this.layout.hierarchical.addToOrdering(node, level);\r\n    }\r\n    node.y = position;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  getTreeSize(index) {\r\n    let res = this.layout.hierarchical.getTreeSize(this.layout.body.nodes, index);\r\n    return {min: res.min_y, max: res.max_y};\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  sort(nodeArray) {\r\n    nodeArray.sort(function(a, b) {\r\n      // Test on 'undefined' takes care of divergent behaviour in chrome\r\n      if (a.y === undefined || b.y === undefined) return 0;   // THIS HAPPENS\r\n      return a.y - b.y;\r\n    });\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  fix(node, level) {\r\n    node.x = this.layout.options.hierarchical.levelSeparation * level;\r\n    node.options.fixed.x = true;\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  shift(nodeId, diff) {\r\n    this.layout.body.nodes[nodeId].y += diff;\r\n  }\r\n}\r\n\r\n\r\nexport {HorizontalStrategy, VerticalStrategy};\r\n","\r\nlet util = require('../../util');\r\nlet Hammer = require('../../module/hammer');\r\nlet hammerUtil = require('../../hammerUtil');\r\n\r\n/**\r\n * Clears the toolbar div element of children\r\n *\r\n * @private\r\n */\r\nclass ManipulationSystem {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {Canvas} canvas\r\n   * @param {SelectionHandler} selectionHandler\r\n   */\r\n  constructor(body, canvas, selectionHandler) {\r\n    this.body = body;\r\n    this.canvas = canvas;\r\n    this.selectionHandler = selectionHandler;\r\n\r\n    this.editMode = false;\r\n    this.manipulationDiv = undefined;\r\n    this.editModeDiv     = undefined;\r\n    this.closeDiv        = undefined;\r\n\r\n    this.manipulationHammers = [];\r\n    this.temporaryUIFunctions = {};\r\n    this.temporaryEventFunctions = [];\r\n\r\n    this.touchTime = 0;\r\n    this.temporaryIds = {nodes: [], edges:[]};\r\n    this.guiEnabled = false;\r\n    this.inMode = false;\r\n    this.selectedControlNode = undefined;\r\n\r\n    this.options = {};\r\n    this.defaultOptions = {\r\n      enabled: false,\r\n      initiallyActive: false,\r\n      addNode: true,\r\n      addEdge: true,\r\n      editNode: undefined,\r\n      editEdge: true,\r\n      deleteNode: true,\r\n      deleteEdge: true,\r\n      controlNodeStyle:{\r\n        shape:'dot',\r\n        size:6,\r\n        color: {background: '#ff0000', border: '#3c3c3c', highlight: {background: '#07f968', border: '#3c3c3c'}},\r\n        borderWidth: 2,\r\n        borderWidthSelected: 2\r\n      }\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this.body.emitter.on('destroy',     () => {this._clean();});\r\n    this.body.emitter.on('_dataChanged',this._restore.bind(this));\r\n    this.body.emitter.on('_resetData',  this._restore.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * If something changes in the data during editing, switch back to the initial datamanipulation state and close all edit modes.\r\n   * @private\r\n   */\r\n  _restore() {\r\n    if (this.inMode !== false) {\r\n      if (this.options.initiallyActive === true) {\r\n        this.enableEditMode();\r\n      }\r\n      else {\r\n        this.disableEditMode();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the Options\r\n   *\r\n   * @param {Object} options\r\n   * @param {Object} allOptions\r\n   * @param {Object} globalOptions\r\n   */\r\n  setOptions(options, allOptions, globalOptions) {\r\n    if (allOptions !== undefined) {\r\n      if (allOptions.locale !== undefined)  {this.options.locale = allOptions.locale}   else {this.options.locale = globalOptions.locale;}\r\n      if (allOptions.locales !== undefined) {this.options.locales = allOptions.locales} else {this.options.locales = globalOptions.locales;}\r\n    }\r\n\r\n    if (options !== undefined) {\r\n      if (typeof options === 'boolean') {\r\n        this.options.enabled = options;\r\n      }\r\n      else {\r\n        this.options.enabled = true;\r\n        util.deepExtend(this.options, options);\r\n      }\r\n      if (this.options.initiallyActive === true) {\r\n        this.editMode = true;\r\n      }\r\n      this._setup();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Enable or disable edit-mode. Draws the DOM required and cleans up after itself.\r\n   *\r\n   * @private\r\n   */\r\n  toggleEditMode() {\r\n    if (this.editMode === true) {\r\n      this.disableEditMode();\r\n    }\r\n    else {\r\n      this.enableEditMode();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Enables Edit Mode\r\n   */\r\n  enableEditMode() {\r\n    this.editMode = true;\r\n\r\n    this._clean();\r\n    if (this.guiEnabled === true) {\r\n      this.manipulationDiv.style.display = 'block';\r\n      this.closeDiv.style.display = 'block';\r\n      this.editModeDiv.style.display = 'none';\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables Edit Mode\r\n   */\r\n  disableEditMode() {\r\n    this.editMode = false;\r\n\r\n    this._clean();\r\n    if (this.guiEnabled === true) {\r\n      this.manipulationDiv.style.display = 'none';\r\n      this.closeDiv.style.display = 'none';\r\n      this.editModeDiv.style.display = 'block';\r\n      this._createEditButton();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the main toolbar. Removes functions bound to the select event. Binds all the buttons of the toolbar.\r\n   *\r\n   * @private\r\n   */\r\n  showManipulatorToolbar() {\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n\r\n    // reset global variables\r\n    this.manipulationDOM = {};\r\n\r\n    // if the gui is enabled, draw all elements.\r\n    if (this.guiEnabled === true) {\r\n      // a _restore will hide these menus\r\n      this.editMode = true;\r\n      this.manipulationDiv.style.display = 'block';\r\n      this.closeDiv.style.display = 'block';\r\n\r\n      let selectedNodeCount  = this.selectionHandler._getSelectedNodeCount();\r\n      let selectedEdgeCount  = this.selectionHandler._getSelectedEdgeCount();\r\n      let selectedTotalCount = selectedNodeCount + selectedEdgeCount;\r\n      let locale = this.options.locales[this.options.locale];\r\n      let needSeperator = false;\r\n\r\n\r\n      if (this.options.addNode !== false) {\r\n        this._createAddNodeButton(locale);\r\n        needSeperator = true;\r\n      }\r\n      if (this.options.addEdge !== false) {\r\n        if (needSeperator === true) {\r\n          this._createSeperator(1);\r\n        } else {\r\n          needSeperator = true;\r\n        }\r\n        this._createAddEdgeButton(locale);\r\n      }\r\n\r\n      if (selectedNodeCount === 1 && typeof this.options.editNode === 'function') {\r\n        if (needSeperator === true) {\r\n          this._createSeperator(2);\r\n        } else {\r\n          needSeperator = true;\r\n        }\r\n        this._createEditNodeButton(locale);\r\n      }\r\n      else if (selectedEdgeCount === 1 && selectedNodeCount === 0 && this.options.editEdge !== false) {\r\n        if (needSeperator === true) {\r\n          this._createSeperator(3);\r\n        } else {\r\n          needSeperator = true;\r\n        }\r\n        this._createEditEdgeButton(locale);\r\n      }\r\n\r\n      // remove buttons\r\n      if (selectedTotalCount !== 0) {\r\n        if (selectedNodeCount > 0 && this.options.deleteNode !== false) {\r\n          if (needSeperator === true) {\r\n            this._createSeperator(4);\r\n          }\r\n          this._createDeleteButton(locale);\r\n        }\r\n        else if (selectedNodeCount === 0 && this.options.deleteEdge !== false) {\r\n          if (needSeperator === true) {\r\n            this._createSeperator(4);\r\n          }\r\n          this._createDeleteButton(locale);\r\n        }\r\n      }\r\n\r\n      // bind the close button\r\n      this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\r\n\r\n      // refresh this bar based on what has been selected\r\n      this._temporaryBindEvent('select', this.showManipulatorToolbar.bind(this));\r\n    }\r\n\r\n    // redraw to show any possible changes\r\n    this.body.emitter.emit('_redraw');\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the toolbar for adding Nodes\r\n   */\r\n  addNodeMode() {\r\n    // when using the gui, enable edit mode if it wasnt already.\r\n    if (this.editMode !== true) {\r\n      this.enableEditMode();\r\n    }\r\n\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n\r\n    this.inMode = 'addNode';\r\n    if (this.guiEnabled === true) {\r\n      let locale = this.options.locales[this.options.locale];\r\n      this.manipulationDOM = {};\r\n      this._createBackButton(locale);\r\n      this._createSeperator();\r\n      this._createDescription(locale['addDescription'] || this.options.locales['en']['addDescription']);\r\n\r\n      // bind the close button\r\n      this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\r\n    }\r\n\r\n    this._temporaryBindEvent('click', this._performAddNode.bind(this));\r\n  }\r\n\r\n  /**\r\n   * call the bound function to handle the editing of the node. The node has to be selected.\r\n   */\r\n  editNode() {\r\n    // when using the gui, enable edit mode if it wasnt already.\r\n    if (this.editMode !== true) {\r\n      this.enableEditMode();\r\n    }\r\n\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n    let node = this.selectionHandler._getSelectedNode();\r\n    if (node !== undefined) {\r\n      this.inMode = 'editNode';\r\n      if (typeof this.options.editNode === 'function') {\r\n        if (node.isCluster !== true) {\r\n          let data = util.deepExtend({}, node.options, false);\r\n          data.x = node.x;\r\n          data.y = node.y;\r\n\r\n          if (this.options.editNode.length === 2) {\r\n            this.options.editNode(data, (finalizedData) => {\r\n              if (finalizedData !== null && finalizedData !== undefined && this.inMode === 'editNode') { // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\r\n                this.body.data.nodes.getDataSet().update(finalizedData);\r\n              }\r\n              this.showManipulatorToolbar();\r\n            });\r\n          }\r\n          else {\r\n            throw new Error('The function for edit does not support two arguments (data, callback)');\r\n          }\r\n        }\r\n        else {\r\n          alert(this.options.locales[this.options.locale]['editClusterError'] || this.options.locales['en']['editClusterError']);\r\n        }\r\n      }\r\n      else {\r\n        throw new Error('No function has been configured to handle the editing of nodes.');\r\n      }\r\n    }\r\n    else {\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * create the toolbar to connect nodes\r\n   */\r\n  addEdgeMode() {\r\n    // when using the gui, enable edit mode if it wasnt already.\r\n    if (this.editMode !== true) {\r\n      this.enableEditMode();\r\n    }\r\n\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n\r\n    this.inMode = 'addEdge';\r\n    if (this.guiEnabled === true) {\r\n      let locale = this.options.locales[this.options.locale];\r\n      this.manipulationDOM = {};\r\n      this._createBackButton(locale);\r\n      this._createSeperator();\r\n      this._createDescription(locale['edgeDescription'] || this.options.locales['en']['edgeDescription']);\r\n\r\n      // bind the close button\r\n      this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\r\n    }\r\n\r\n    // temporarily overload functions\r\n    this._temporaryBindUI('onTouch',    this._handleConnect.bind(this));\r\n    this._temporaryBindUI('onDragEnd',  this._finishConnect.bind(this));\r\n    this._temporaryBindUI('onDrag',     this._dragControlNode.bind(this));\r\n    this._temporaryBindUI('onRelease',  this._finishConnect.bind(this));\r\n    this._temporaryBindUI('onDragStart',this._dragStartEdge.bind(this));\r\n    this._temporaryBindUI('onHold', () => {});\r\n  }\r\n\r\n  /**\r\n   * create the toolbar to edit edges\r\n   */\r\n  editEdgeMode() {\r\n    // when using the gui, enable edit mode if it wasn't already.\r\n    if (this.editMode !== true) {\r\n      this.enableEditMode();\r\n    }\r\n\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n\r\n    this.inMode = 'editEdge';\r\n    if (typeof this.options.editEdge === 'object' && typeof this.options.editEdge.editWithoutDrag === \"function\") {\r\n      this.edgeBeingEditedId = this.selectionHandler.getSelectedEdges()[0];\r\n      if (this.edgeBeingEditedId !== undefined) {\r\n        var edge = this.body.edges[this.edgeBeingEditedId];\r\n        this._performEditEdge(edge.from, edge.to);\r\n        return;\r\n      }\r\n    }\r\n    if (this.guiEnabled === true) {\r\n      let locale = this.options.locales[this.options.locale];\r\n      this.manipulationDOM = {};\r\n      this._createBackButton(locale);\r\n      this._createSeperator();\r\n      this._createDescription(locale['editEdgeDescription'] || this.options.locales['en']['editEdgeDescription']);\r\n\r\n      // bind the close button\r\n      this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\r\n    }\r\n\r\n    this.edgeBeingEditedId = this.selectionHandler.getSelectedEdges()[0];\r\n    if (this.edgeBeingEditedId !== undefined) {\r\n      let edge = this.body.edges[this.edgeBeingEditedId];\r\n\r\n      // create control nodes\r\n      let controlNodeFrom = this._getNewTargetNode(edge.from.x, edge.from.y);\r\n      let controlNodeTo = this._getNewTargetNode(edge.to.x, edge.to.y);\r\n\r\n      this.temporaryIds.nodes.push(controlNodeFrom.id);\r\n      this.temporaryIds.nodes.push(controlNodeTo.id);\r\n\r\n      this.body.nodes[controlNodeFrom.id] = controlNodeFrom;\r\n      this.body.nodeIndices.push(controlNodeFrom.id);\r\n      this.body.nodes[controlNodeTo.id] = controlNodeTo;\r\n      this.body.nodeIndices.push(controlNodeTo.id);\r\n\r\n      // temporarily overload UI functions, cleaned up automatically because of _temporaryBindUI\r\n      this._temporaryBindUI('onTouch', this._controlNodeTouch.bind(this));    // used to get the position\r\n      this._temporaryBindUI('onTap', () => {});                             // disabled\r\n      this._temporaryBindUI('onHold', () => {});                             // disabled\r\n      this._temporaryBindUI('onDragStart', this._controlNodeDragStart.bind(this));// used to select control node\r\n      this._temporaryBindUI('onDrag', this._controlNodeDrag.bind(this));     // used to drag control node\r\n      this._temporaryBindUI('onDragEnd', this._controlNodeDragEnd.bind(this));  // used to connect or revert control nodes\r\n      this._temporaryBindUI('onMouseMove', () => {});                             // disabled\r\n\r\n      // create function to position control nodes correctly on movement\r\n      // automatically cleaned up because we use the temporary bind\r\n      this._temporaryBindEvent('beforeDrawing', (ctx) => {\r\n        let positions = edge.edgeType.findBorderPositions(ctx);\r\n        if (controlNodeFrom.selected === false) {\r\n          controlNodeFrom.x = positions.from.x;\r\n          controlNodeFrom.y = positions.from.y;\r\n        }\r\n        if (controlNodeTo.selected === false) {\r\n          controlNodeTo.x = positions.to.x;\r\n          controlNodeTo.y = positions.to.y;\r\n        }\r\n      });\r\n\r\n      this.body.emitter.emit('_redraw');\r\n    }\r\n    else {\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * delete everything in the selection\r\n   */\r\n  deleteSelected() {\r\n    // when using the gui, enable edit mode if it wasnt already.\r\n    if (this.editMode !== true) {\r\n      this.enableEditMode();\r\n    }\r\n\r\n    // restore the state of any bound functions or events, remove control nodes, restore physics\r\n    this._clean();\r\n\r\n    this.inMode = 'delete';\r\n    let selectedNodes = this.selectionHandler.getSelectedNodes();\r\n    let selectedEdges = this.selectionHandler.getSelectedEdges();\r\n    let deleteFunction = undefined;\r\n    if (selectedNodes.length > 0) {\r\n      for (let i = 0; i < selectedNodes.length; i++) {\r\n        if (this.body.nodes[selectedNodes[i]].isCluster === true) {\r\n          alert(this.options.locales[this.options.locale]['deleteClusterError'] || this.options.locales['en']['deleteClusterError']);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (typeof this.options.deleteNode === 'function') {\r\n        deleteFunction = this.options.deleteNode;\r\n      }\r\n    }\r\n    else if (selectedEdges.length > 0) {\r\n      if (typeof this.options.deleteEdge === 'function') {\r\n        deleteFunction = this.options.deleteEdge;\r\n      }\r\n    }\r\n\r\n    if (typeof deleteFunction === 'function') {\r\n      let data = {nodes: selectedNodes, edges: selectedEdges};\r\n      if (deleteFunction.length === 2) {\r\n        deleteFunction(data, (finalizedData) => {\r\n          if (finalizedData !== null && finalizedData !== undefined && this.inMode === 'delete') { // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\r\n            this.body.data.edges.getDataSet().remove(finalizedData.edges);\r\n            this.body.data.nodes.getDataSet().remove(finalizedData.nodes);\r\n            this.body.emitter.emit('startSimulation');\r\n            this.showManipulatorToolbar();\r\n          }\r\n          else {\r\n            this.body.emitter.emit('startSimulation');\r\n            this.showManipulatorToolbar();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        throw new Error('The function for delete does not support two arguments (data, callback)')\r\n      }\r\n    }\r\n    else {\r\n      this.body.data.edges.getDataSet().remove(selectedEdges);\r\n      this.body.data.nodes.getDataSet().remove(selectedNodes);\r\n      this.body.emitter.emit('startSimulation');\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //********************************************** PRIVATE ***************************************//\r\n\r\n  /**\r\n   * draw or remove the DOM\r\n   * @private\r\n   */\r\n  _setup() {\r\n    if (this.options.enabled === true) {\r\n      // Enable the GUI\r\n      this.guiEnabled = true;\r\n\r\n      this._createWrappers();\r\n      if (this.editMode === false) {\r\n        this._createEditButton();\r\n      }\r\n      else {\r\n        this.showManipulatorToolbar();\r\n      }\r\n    }\r\n    else {\r\n      this._removeManipulationDOM();\r\n\r\n      // disable the gui\r\n      this.guiEnabled = false;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * create the div overlays that contain the DOM\r\n   * @private\r\n   */\r\n  _createWrappers() {\r\n    // load the manipulator HTML elements. All styling done in css.\r\n    if (this.manipulationDiv === undefined) {\r\n      this.manipulationDiv = document.createElement('div');\r\n      this.manipulationDiv.className = 'vis-manipulation';\r\n      if (this.editMode === true) {\r\n        this.manipulationDiv.style.display = 'block';\r\n      }\r\n      else {\r\n        this.manipulationDiv.style.display = 'none';\r\n      }\r\n      this.canvas.frame.appendChild(this.manipulationDiv);\r\n    }\r\n\r\n    // container for the edit button.\r\n    if (this.editModeDiv === undefined) {\r\n      this.editModeDiv = document.createElement('div');\r\n      this.editModeDiv.className = 'vis-edit-mode';\r\n      if (this.editMode === true) {\r\n        this.editModeDiv.style.display = 'none';\r\n      }\r\n      else {\r\n        this.editModeDiv.style.display = 'block';\r\n      }\r\n      this.canvas.frame.appendChild(this.editModeDiv);\r\n    }\r\n\r\n\r\n    // container for the close div button\r\n    if (this.closeDiv === undefined) {\r\n      this.closeDiv = document.createElement('div');\r\n      this.closeDiv.className = 'vis-close';\r\n      this.closeDiv.style.display = this.manipulationDiv.style.display;\r\n      this.canvas.frame.appendChild(this.closeDiv);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * generate a new target node. Used for creating new edges and editing edges\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @returns {Node}\r\n   * @private\r\n   */\r\n  _getNewTargetNode(x,y) {\r\n    let controlNodeStyle = util.deepExtend({}, this.options.controlNodeStyle);\r\n\r\n    controlNodeStyle.id = 'targetNode' + util.randomUUID();\r\n    controlNodeStyle.hidden = false;\r\n    controlNodeStyle.physics = false;\r\n    controlNodeStyle.x = x;\r\n    controlNodeStyle.y = y;\r\n\r\n    // we have to define the bounding box in order for the nodes to be drawn immediately\r\n    let node = this.body.functions.createNode(controlNodeStyle);\r\n    node.shape.boundingBox = {left: x, right:x, top:y, bottom:y};\r\n\r\n    return node;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the edit button\r\n   */\r\n  _createEditButton() {\r\n    // restore everything to it's original state (if applicable)\r\n    this._clean();\r\n\r\n    // reset the manipulationDOM\r\n    this.manipulationDOM = {};\r\n\r\n    // empty the editModeDiv\r\n    util.recursiveDOMDelete(this.editModeDiv);\r\n\r\n\r\n    // create the contents for the editMode button\r\n    let locale = this.options.locales[this.options.locale];\r\n    let button = this._createButton('editMode', 'vis-button vis-edit vis-edit-mode', locale['edit'] || this.options.locales['en']['edit']);\r\n    this.editModeDiv.appendChild(button);\r\n\r\n    // bind a hammer listener to the button, calling the function toggleEditMode.\r\n    this._bindHammerToDiv(button, this.toggleEditMode.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * this function cleans up after everything this module does. Temporary elements, functions and events are removed, physics restored, hammers removed.\r\n   * @private\r\n   */\r\n  _clean() {\r\n    // not in mode\r\n    this.inMode = false;\r\n\r\n    // _clean the divs\r\n    if (this.guiEnabled === true) {\r\n      util.recursiveDOMDelete(this.editModeDiv);\r\n      util.recursiveDOMDelete(this.manipulationDiv);\r\n\r\n      // removes all the bindings and overloads\r\n      this._cleanManipulatorHammers();\r\n    }\r\n\r\n    // remove temporary nodes and edges\r\n    this._cleanupTemporaryNodesAndEdges();\r\n\r\n    // restore overloaded UI functions\r\n    this._unbindTemporaryUIs();\r\n\r\n    // remove the temporaryEventFunctions\r\n    this._unbindTemporaryEvents();\r\n\r\n    // restore the physics if required\r\n    this.body.emitter.emit('restorePhysics');\r\n  }\r\n\r\n\r\n  /**\r\n   * Each dom element has it's own hammer. They are stored in this.manipulationHammers. This cleans them up.\r\n   * @private\r\n   */\r\n  _cleanManipulatorHammers() {\r\n    // _clean hammer bindings\r\n    if (this.manipulationHammers.length != 0) {\r\n      for (let i = 0; i < this.manipulationHammers.length; i++) {\r\n        this.manipulationHammers[i].destroy();\r\n      }\r\n      this.manipulationHammers = [];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove all DOM elements created by this module.\r\n   * @private\r\n   */\r\n  _removeManipulationDOM() {\r\n    // removes all the bindings and overloads\r\n    this._clean();\r\n\r\n    // empty the manipulation divs\r\n    util.recursiveDOMDelete(this.manipulationDiv);\r\n    util.recursiveDOMDelete(this.editModeDiv);\r\n    util.recursiveDOMDelete(this.closeDiv);\r\n\r\n    // remove the manipulation divs\r\n    if (this.manipulationDiv) {this.canvas.frame.removeChild(this.manipulationDiv);}\r\n    if (this.editModeDiv)     {this.canvas.frame.removeChild(this.editModeDiv);}\r\n    if (this.closeDiv)        {this.canvas.frame.removeChild(this.closeDiv);}\r\n\r\n    // set the references to undefined\r\n    this.manipulationDiv = undefined;\r\n    this.editModeDiv = undefined;\r\n    this.closeDiv = undefined;\r\n  }\r\n\r\n\r\n  /**\r\n   * create a seperator line. the index is to differentiate in the manipulation dom\r\n   * @param {number} [index=1]\r\n   * @private\r\n   */\r\n  _createSeperator(index = 1) {\r\n    this.manipulationDOM['seperatorLineDiv' + index] = document.createElement('div');\r\n    this.manipulationDOM['seperatorLineDiv' + index].className = 'vis-separator-line';\r\n    this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv' + index]);\r\n  }\r\n\r\n  // ----------------------    DOM functions for buttons    --------------------------//\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createAddNodeButton(locale) {\r\n    let button = this._createButton('addNode', 'vis-button vis-add', locale['addNode'] || this.options.locales['en']['addNode']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.addNodeMode.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createAddEdgeButton(locale) {\r\n    let button = this._createButton('addEdge', 'vis-button vis-connect',  locale['addEdge'] || this.options.locales['en']['addEdge']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.addEdgeMode.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createEditNodeButton(locale) {\r\n    let button = this._createButton('editNode', 'vis-button vis-edit', locale['editNode'] || this.options.locales['en']['editNode']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.editNode.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createEditEdgeButton(locale) {\r\n    let button = this._createButton('editEdge', 'vis-button vis-edit',  locale['editEdge'] || this.options.locales['en']['editEdge']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.editEdgeMode.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createDeleteButton(locale) {\r\n    var deleteBtnClass;\r\n    if (this.options.rtl) {\r\n      deleteBtnClass = 'vis-button vis-delete-rtl';\r\n    } else {\r\n      deleteBtnClass = 'vis-button vis-delete';\r\n    }\r\n    let button = this._createButton('delete', deleteBtnClass, locale['del'] || this.options.locales['en']['del']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.deleteSelected.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Locale} locale\r\n   * @private\r\n   */\r\n  _createBackButton(locale) {\r\n    let button = this._createButton('back', 'vis-button vis-back', locale['back'] || this.options.locales['en']['back']);\r\n    this.manipulationDiv.appendChild(button);\r\n    this._bindHammerToDiv(button, this.showManipulatorToolbar.bind(this));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number|string} id\r\n   * @param {string} className\r\n   * @param {label} label\r\n   * @param {string} labelClassName\r\n   * @returns {HTMLElement}\r\n   * @private\r\n   */\r\n  _createButton(id, className, label, labelClassName = 'vis-label') {\r\n\r\n    this.manipulationDOM[id+'Div'] = document.createElement('div');\r\n    this.manipulationDOM[id+'Div'].className = className;\r\n    this.manipulationDOM[id+'Label'] = document.createElement('div');\r\n    this.manipulationDOM[id+'Label'].className = labelClassName;\r\n    this.manipulationDOM[id+'Label'].innerHTML = label;\r\n    this.manipulationDOM[id+'Div'].appendChild(this.manipulationDOM[id+'Label']);\r\n    return this.manipulationDOM[id+'Div'];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Label} label\r\n   * @private\r\n   */\r\n  _createDescription(label) {\r\n    this.manipulationDiv.appendChild(\r\n      this._createButton('description', 'vis-button vis-none', label)\r\n    );\r\n  }\r\n\r\n  // -------------------------- End of DOM functions for buttons ------------------------------//\r\n\r\n  /**\r\n   * this binds an event until cleanup by the clean functions.\r\n   * @param {Event}  event   The event\r\n   * @param {function} newFunction\r\n   * @private\r\n   */\r\n  _temporaryBindEvent(event, newFunction) {\r\n    this.temporaryEventFunctions.push({event:event, boundFunction:newFunction});\r\n    this.body.emitter.on(event, newFunction);\r\n  }\r\n\r\n  /**\r\n   * this overrides an UI function until cleanup by the clean function\r\n   * @param {string} UIfunctionName\r\n   * @param {function} newFunction\r\n   * @private\r\n   */\r\n  _temporaryBindUI(UIfunctionName, newFunction) {\r\n    if (this.body.eventListeners[UIfunctionName] !== undefined) {\r\n      this.temporaryUIFunctions[UIfunctionName] = this.body.eventListeners[UIfunctionName];\r\n      this.body.eventListeners[UIfunctionName] = newFunction;\r\n    }\r\n    else {\r\n      throw new Error('This UI function does not exist. Typo? You tried: ' + UIfunctionName + ' possible are: ' + JSON.stringify(Object.keys(this.body.eventListeners)));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restore the overridden UI functions to their original state.\r\n   *\r\n   * @private\r\n   */\r\n  _unbindTemporaryUIs() {\r\n    for (let functionName in this.temporaryUIFunctions) {\r\n      if (this.temporaryUIFunctions.hasOwnProperty(functionName)) {\r\n        this.body.eventListeners[functionName] = this.temporaryUIFunctions[functionName];\r\n        delete this.temporaryUIFunctions[functionName];\r\n      }\r\n    }\r\n    this.temporaryUIFunctions = {};\r\n  }\r\n\r\n  /**\r\n   * Unbind the events created by _temporaryBindEvent\r\n   * @private\r\n   */\r\n  _unbindTemporaryEvents() {\r\n    for (let i = 0; i < this.temporaryEventFunctions.length; i++) {\r\n      let eventName = this.temporaryEventFunctions[i].event;\r\n      let boundFunction = this.temporaryEventFunctions[i].boundFunction;\r\n      this.body.emitter.off(eventName, boundFunction);\r\n    }\r\n    this.temporaryEventFunctions = [];\r\n  }\r\n\r\n  /**\r\n   * Bind an hammer instance to a DOM element.\r\n   *\r\n   * @param {Element} domElement\r\n   * @param {function} boundFunction\r\n   */\r\n  _bindHammerToDiv(domElement, boundFunction) {\r\n    let hammer = new Hammer(domElement, {});\r\n    hammerUtil.onTouch(hammer, boundFunction);\r\n    this.manipulationHammers.push(hammer);\r\n  }\r\n\r\n\r\n  /**\r\n   * Neatly clean up temporary edges and nodes\r\n   * @private\r\n   */\r\n  _cleanupTemporaryNodesAndEdges() {\r\n    // _clean temporary edges\r\n    for (let i = 0; i < this.temporaryIds.edges.length; i++) {\r\n      this.body.edges[this.temporaryIds.edges[i]].disconnect();\r\n      delete this.body.edges[this.temporaryIds.edges[i]];\r\n      let indexTempEdge = this.body.edgeIndices.indexOf(this.temporaryIds.edges[i]);\r\n      if (indexTempEdge !== -1) {this.body.edgeIndices.splice(indexTempEdge,1);}\r\n    }\r\n\r\n    // _clean temporary nodes\r\n    for (let i = 0; i < this.temporaryIds.nodes.length; i++) {\r\n      delete this.body.nodes[this.temporaryIds.nodes[i]];\r\n      let indexTempNode = this.body.nodeIndices.indexOf(this.temporaryIds.nodes[i]);\r\n      if (indexTempNode !== -1) {this.body.nodeIndices.splice(indexTempNode,1);}\r\n    }\r\n\r\n    this.temporaryIds = {nodes: [], edges: []};\r\n  }\r\n\r\n  // ------------------------------------------ EDIT EDGE FUNCTIONS -----------------------------------------//\r\n\r\n  /**\r\n   * the touch is used to get the position of the initial click\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _controlNodeTouch(event) {\r\n    this.selectionHandler.unselectAll();\r\n    this.lastTouch = this.body.functions.getPointer(event.center);\r\n    this.lastTouch.translation = util.extend({},this.body.view.translation); // copy the object\r\n  }\r\n\r\n\r\n  /**\r\n   * the drag start is used to mark one of the control nodes as selected.\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _controlNodeDragStart(event) {  // eslint-disable-line no-unused-vars\r\n    let pointer = this.lastTouch;\r\n    let pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\r\n    let from = this.body.nodes[this.temporaryIds.nodes[0]];\r\n    let to   = this.body.nodes[this.temporaryIds.nodes[1]];\r\n    let edge = this.body.edges[this.edgeBeingEditedId];\r\n    this.selectedControlNode = undefined;\r\n\r\n    let fromSelect = from.isOverlappingWith(pointerObj);\r\n    let toSelect = to.isOverlappingWith(pointerObj);\r\n\r\n    if (fromSelect === true) {\r\n      this.selectedControlNode = from;\r\n      edge.edgeType.from = from;\r\n    }\r\n    else if (toSelect === true) {\r\n      this.selectedControlNode = to;\r\n      edge.edgeType.to = to;\r\n    }\r\n\r\n    // we use the selection to find the node that is being dragged. We explicitly select it here.\r\n    if (this.selectedControlNode !== undefined) {\r\n      this.selectionHandler.selectObject(this.selectedControlNode)\r\n    }\r\n\r\n    this.body.emitter.emit('_redraw');\r\n  }\r\n\r\n  /**\r\n   * dragging the control nodes or the canvas\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _controlNodeDrag(event) {\r\n    this.body.emitter.emit('disablePhysics');\r\n    let pointer = this.body.functions.getPointer(event.center);\r\n    let pos = this.canvas.DOMtoCanvas(pointer);\r\n    if (this.selectedControlNode !== undefined) {\r\n      this.selectedControlNode.x = pos.x;\r\n      this.selectedControlNode.y = pos.y;\r\n    }\r\n    else {\r\n      // if the drag was not started properly because the click started outside the network div, start it now.\r\n      let diffX = pointer.x - this.lastTouch.x;\r\n      let diffY = pointer.y - this.lastTouch.y;\r\n      this.body.view.translation = {x:this.lastTouch.translation.x + diffX, y:this.lastTouch.translation.y + diffY};\r\n    }\r\n    this.body.emitter.emit('_redraw');\r\n  }\r\n\r\n\r\n  /**\r\n   * connecting or restoring the control nodes.\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _controlNodeDragEnd(event) {\r\n    let pointer = this.body.functions.getPointer(event.center);\r\n    let pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\r\n    let edge = this.body.edges[this.edgeBeingEditedId];\r\n    // if the node that was dragged is not a control node, return\r\n    if (this.selectedControlNode === undefined) {\r\n      return;\r\n    }\r\n\r\n    // we use the selection to find the node that is being dragged. We explicitly DEselect the control node here.\r\n    this.selectionHandler.unselectAll();\r\n    let overlappingNodeIds = this.selectionHandler._getAllNodesOverlappingWith(pointerObj);\r\n    let node = undefined;\r\n    for (let i = overlappingNodeIds.length-1; i >= 0; i--) {\r\n      if (overlappingNodeIds[i] !== this.selectedControlNode.id) {\r\n        node = this.body.nodes[overlappingNodeIds[i]];\r\n        break;\r\n      }\r\n    }\r\n    // perform the connection\r\n    if (node !== undefined && this.selectedControlNode !== undefined) {\r\n      if (node.isCluster === true) {\r\n        alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError'])\r\n      }\r\n      else {\r\n        let from = this.body.nodes[this.temporaryIds.nodes[0]];\r\n        if (this.selectedControlNode.id === from.id) {\r\n          this._performEditEdge(node.id, edge.to.id);\r\n        }\r\n        else {\r\n          this._performEditEdge(edge.from.id, node.id);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      edge.updateEdgeType();\r\n      this.body.emitter.emit('restorePhysics');\r\n    }\r\n\r\n    this.body.emitter.emit('_redraw');\r\n  }\r\n\r\n  // ------------------------------------ END OF EDIT EDGE FUNCTIONS -----------------------------------------//\r\n\r\n\r\n\r\n  // ------------------------------------------- ADD EDGE FUNCTIONS -----------------------------------------//\r\n  /**\r\n   * the function bound to the selection event. It checks if you want to connect a cluster and changes the description\r\n   * to walk the user through the process.\r\n   *\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  _handleConnect(event) {\r\n    // check to avoid double fireing of this function.\r\n    if (new Date().valueOf() - this.touchTime > 100) {\r\n      this.lastTouch = this.body.functions.getPointer(event.center);\r\n      this.lastTouch.translation = util.extend({},this.body.view.translation); // copy the object\r\n\r\n      let pointer = this.lastTouch;\r\n      let node = this.selectionHandler.getNodeAt(pointer);\r\n\r\n      if (node !== undefined) {\r\n        if (node.isCluster === true) {\r\n          alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError'])\r\n        }\r\n        else {\r\n          // create a node the temporary line can look at\r\n          let targetNode = this._getNewTargetNode(node.x,node.y);\r\n          this.body.nodes[targetNode.id] = targetNode;\r\n          this.body.nodeIndices.push(targetNode.id);\r\n\r\n          // create a temporary edge\r\n          let connectionEdge = this.body.functions.createEdge({\r\n            id: 'connectionEdge' + util.randomUUID(),\r\n            from: node.id,\r\n            to: targetNode.id,\r\n            physics: false,\r\n            smooth: {\r\n              enabled: true,\r\n              type: 'continuous',\r\n              roundness: 0.5\r\n            }\r\n          });\r\n          this.body.edges[connectionEdge.id] = connectionEdge;\r\n          this.body.edgeIndices.push(connectionEdge.id);\r\n\r\n          this.temporaryIds.nodes.push(targetNode.id);\r\n          this.temporaryIds.edges.push(connectionEdge.id);\r\n        }\r\n      }\r\n      this.touchTime = new Date().valueOf();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  _dragControlNode(event) {\r\n    let pointer = this.body.functions.getPointer(event.center);\r\n    if (this.temporaryIds.nodes[0] !== undefined) {\r\n      let targetNode = this.body.nodes[this.temporaryIds.nodes[0]]; // there is only one temp node in the add edge mode.\r\n      targetNode.x = this.canvas._XconvertDOMtoCanvas(pointer.x);\r\n      targetNode.y = this.canvas._YconvertDOMtoCanvas(pointer.y);\r\n      this.body.emitter.emit('_redraw');\r\n    }\r\n    else {\r\n      let diffX = pointer.x - this.lastTouch.x;\r\n      let diffY = pointer.y - this.lastTouch.y;\r\n      this.body.view.translation = {x:this.lastTouch.translation.x + diffX, y:this.lastTouch.translation.y + diffY};\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Connect the new edge to the target if one exists, otherwise remove temp line\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _finishConnect(event) {\r\n    let pointer = this.body.functions.getPointer(event.center);\r\n    let pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\r\n\r\n    // remember the edge id\r\n    let connectFromId = undefined;\r\n    if (this.temporaryIds.edges[0] !== undefined) {\r\n      connectFromId = this.body.edges[this.temporaryIds.edges[0]].fromId;\r\n    }\r\n\r\n    // get the overlapping node but NOT the temporary node;\r\n    let overlappingNodeIds = this.selectionHandler._getAllNodesOverlappingWith(pointerObj);\r\n    let node = undefined;\r\n    for (let i = overlappingNodeIds.length-1; i >= 0; i--) {\r\n      // if the node id is NOT a temporary node, accept the node.\r\n      if (this.temporaryIds.nodes.indexOf(overlappingNodeIds[i]) === -1) {\r\n        node = this.body.nodes[overlappingNodeIds[i]];\r\n        break;\r\n      }\r\n    }\r\n\r\n    // clean temporary nodes and edges.\r\n    this._cleanupTemporaryNodesAndEdges();\r\n\r\n    // perform the connection\r\n    if (node !== undefined) {\r\n      if (node.isCluster === true) {\r\n        alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError']);\r\n      }\r\n      else {\r\n        if (this.body.nodes[connectFromId] !== undefined && this.body.nodes[node.id] !== undefined) {\r\n          this._performAddEdge(connectFromId, node.id);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // No need to do _generateclickevent('dragEnd') here, the regular dragEnd event fires.\r\n    this.body.emitter.emit('_redraw');\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   * @private\r\n   */\r\n  _dragStartEdge(event) {\r\n    let pointer = this.lastTouch;\r\n    this.selectionHandler._generateClickEvent('dragStart', event, pointer, undefined, true);\r\n  }\r\n\r\n  // --------------------------------------- END OF ADD EDGE FUNCTIONS -------------------------------------//\r\n\r\n\r\n  // ------------------------------ Performing all the actual data manipulation ------------------------//\r\n\r\n  /**\r\n   * Adds a node on the specified location\r\n   *\r\n   * @param {Object} clickData\r\n   * @private\r\n   */\r\n  _performAddNode(clickData) {\r\n    let defaultData = {\r\n      id: util.randomUUID(),\r\n      x: clickData.pointer.canvas.x,\r\n      y: clickData.pointer.canvas.y,\r\n      label: 'new'\r\n    };\r\n\r\n    if (typeof this.options.addNode === 'function') {\r\n      if (this.options.addNode.length === 2) {\r\n        this.options.addNode(defaultData, (finalizedData) => {\r\n          if (finalizedData !== null && finalizedData !== undefined && this.inMode === 'addNode') { // if for whatever reason the mode has changes (due to dataset change) disregard the callback\r\n            this.body.data.nodes.getDataSet().add(finalizedData);\r\n            this.showManipulatorToolbar();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.showManipulatorToolbar();\r\n        throw new Error('The function for add does not support two arguments (data,callback)');\r\n      }\r\n    }\r\n    else {\r\n      this.body.data.nodes.getDataSet().add(defaultData);\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * connect two nodes with a new edge.\r\n   *\r\n   * @param {Node.id} sourceNodeId\r\n   * @param {Node.id} targetNodeId\r\n   * @private\r\n   */\r\n  _performAddEdge(sourceNodeId, targetNodeId) {\r\n    let defaultData = {from: sourceNodeId, to: targetNodeId};\r\n    if (typeof this.options.addEdge === 'function') {\r\n      if (this.options.addEdge.length === 2) {\r\n        this.options.addEdge(defaultData, (finalizedData) => {\r\n          if (finalizedData !== null && finalizedData !== undefined && this.inMode === 'addEdge') { // if for whatever reason the mode has changes (due to dataset change) disregard the callback\r\n            this.body.data.edges.getDataSet().add(finalizedData);\r\n            this.selectionHandler.unselectAll();\r\n            this.showManipulatorToolbar();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        throw new Error('The function for connect does not support two arguments (data,callback)');\r\n      }\r\n    }\r\n    else {\r\n      this.body.data.edges.getDataSet().add(defaultData);\r\n      this.selectionHandler.unselectAll();\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * connect two nodes with a new edge.\r\n   *\r\n   * @param {Node.id} sourceNodeId\r\n   * @param {Node.id} targetNodeId\r\n   * @private\r\n   */\r\n  _performEditEdge(sourceNodeId, targetNodeId) {\r\n    let defaultData = {id: this.edgeBeingEditedId, from: sourceNodeId, to: targetNodeId, label: this.body.data.edges._data[this.edgeBeingEditedId].label };\r\n    let eeFunct = this.options.editEdge;\r\n    if (typeof eeFunct === 'object') {\r\n      eeFunct = eeFunct.editWithoutDrag;\r\n    }\r\n    if (typeof eeFunct === 'function') {\r\n      if (eeFunct.length === 2) {\r\n        eeFunct(defaultData, (finalizedData) => {\r\n          if (finalizedData === null || finalizedData === undefined || this.inMode !== 'editEdge') { // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\r\n            this.body.edges[defaultData.id].updateEdgeType();\r\n            this.body.emitter.emit('_redraw');\r\n            this.showManipulatorToolbar();\r\n          }\r\n          else {\r\n            this.body.data.edges.getDataSet().update(finalizedData);\r\n            this.selectionHandler.unselectAll();\r\n            this.showManipulatorToolbar();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        throw new Error('The function for edit does not support two arguments (data, callback)');\r\n      }\r\n    }\r\n    else {\r\n      this.body.data.edges.getDataSet().update(defaultData);\r\n      this.selectionHandler.unselectAll();\r\n      this.showManipulatorToolbar();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default ManipulationSystem;\r\n","var util = require('../util');\r\n\r\nvar ColorPicker = require('./ColorPicker').default;\r\n\r\n/**\r\n * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\r\n * Boolean options are recognised as Boolean\r\n * Number options should be written as array: [default value, min value, max value, stepsize]\r\n * Colors should be written as array: ['color', '#ffffff']\r\n * Strings with should be written as array: [option1, option2, option3, ..]\r\n *\r\n * The options are matched with their counterparts in each of the modules and the values used in the configuration are\r\n */\r\nclass Configurator {\r\n  /**\r\n   * @param {Object} parentModule        | the location where parentModule.setOptions() can be called\r\n   * @param {Object} defaultContainer    | the default container of the module\r\n   * @param {Object} configureOptions    | the fully configured and predefined options set found in allOptions.js\r\n   * @param {number} pixelRatio          | canvas pixel ratio\r\n   */\r\n  constructor(parentModule, defaultContainer, configureOptions, pixelRatio = 1) {\r\n    this.parent = parentModule;\r\n    this.changedOptions = [];\r\n    this.container = defaultContainer;\r\n    this.allowCreation = false;\r\n\r\n    this.options = {};\r\n    this.initialized = false;\r\n    this.popupCounter = 0;\r\n    this.defaultOptions = {\r\n      enabled: false,\r\n      filter: true,\r\n      container: undefined,\r\n      showButton: true\r\n    };\r\n    util.extend(this.options, this.defaultOptions);\r\n\r\n    this.configureOptions = configureOptions;\r\n    this.moduleOptions = {};\r\n    this.domElements = [];\r\n    this.popupDiv = {};\r\n    this.popupLimit = 5;\r\n    this.popupHistory = {};\r\n    this.colorPicker = new ColorPicker(pixelRatio);\r\n    this.wrapper = undefined;\r\n  }\r\n\r\n\r\n  /**\r\n   * refresh all options.\r\n   * Because all modules parse their options by themselves, we just use their options. We copy them here.\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options !== undefined) {\r\n      // reset the popup history because the indices may have been changed.\r\n      this.popupHistory = {};\r\n      this._removePopup();\r\n\r\n      let enabled = true;\r\n      if (typeof options === 'string') {\r\n        this.options.filter = options;\r\n      }\r\n      else if (options instanceof Array) {\r\n        this.options.filter = options.join();\r\n      }\r\n      else if (typeof options === 'object') {\r\n        if (options.container !== undefined) {\r\n          this.options.container = options.container;\r\n        }\r\n        if (options.filter !== undefined) {\r\n          this.options.filter = options.filter;\r\n        }\r\n        if (options.showButton !== undefined) {\r\n          this.options.showButton = options.showButton;\r\n        }\r\n        if (options.enabled !== undefined) {\r\n          enabled = options.enabled;\r\n        }\r\n      }\r\n      else if (typeof options === 'boolean') {\r\n        this.options.filter = true;\r\n        enabled = options;\r\n      }\r\n      else if (typeof options === 'function') {\r\n        this.options.filter = options;\r\n        enabled = true;\r\n      }\r\n      if (this.options.filter === false) {\r\n        enabled = false;\r\n      }\r\n\r\n      this.options.enabled = enabled;\r\n    }\r\n    this._clean();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} moduleOptions\r\n   */\r\n  setModuleOptions(moduleOptions) {\r\n    this.moduleOptions = moduleOptions;\r\n    if (this.options.enabled === true) {\r\n      this._clean();\r\n      if (this.options.container !== undefined) {\r\n        this.container = this.options.container;\r\n      }\r\n      this._create();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create all DOM elements\r\n   * @private\r\n   */\r\n  _create() {\r\n    this._clean();\r\n    this.changedOptions = [];\r\n\r\n    let filter = this.options.filter;\r\n    let counter = 0;\r\n    let show = false;\r\n    for (let option in this.configureOptions) {\r\n      if (this.configureOptions.hasOwnProperty(option)) {\r\n        this.allowCreation = false;\r\n        show = false;\r\n        if (typeof filter === 'function') {\r\n          show = filter(option,[]);\r\n          show = show || this._handleObject(this.configureOptions[option], [option], true);\r\n        }\r\n        else if (filter === true || filter.indexOf(option) !== -1) {\r\n          show = true;\r\n        }\r\n\r\n        if (show !== false) {\r\n          this.allowCreation = true;\r\n\r\n          // linebreak between categories\r\n          if (counter > 0) {\r\n            this._makeItem([]);\r\n          }\r\n          // a header for the category\r\n          this._makeHeader(option);\r\n\r\n          // get the sub options\r\n          this._handleObject(this.configureOptions[option], [option]);\r\n        }\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    if (this.options.showButton === true) {\r\n      let generateButton = document.createElement('div');\r\n      generateButton.className = 'vis-configuration vis-config-button';\r\n      generateButton.innerHTML = 'generate options';\r\n      generateButton.onclick =     () => {this._printOptions();};\r\n      generateButton.onmouseover = () => {generateButton.className = 'vis-configuration vis-config-button hover';};\r\n      generateButton.onmouseout =  () => {generateButton.className = 'vis-configuration vis-config-button';};\r\n\r\n      this.optionsContainer = document.createElement('div');\r\n      this.optionsContainer.className = 'vis-configuration vis-config-option-container';\r\n\r\n      this.domElements.push(this.optionsContainer);\r\n      this.domElements.push(generateButton);\r\n    }\r\n\r\n    this._push();\r\n    //~ this.colorPicker.insertTo(this.container);\r\n  }\r\n\r\n\r\n  /**\r\n   * draw all DOM elements on the screen\r\n   * @private\r\n   */\r\n  _push() {\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.className = 'vis-configuration-wrapper';\r\n    this.container.appendChild(this.wrapper);\r\n    for (var i = 0; i < this.domElements.length; i++) {\r\n      this.wrapper.appendChild(this.domElements[i]);\r\n    }\r\n\r\n    this._showPopupIfNeeded()\r\n  }\r\n\r\n\r\n  /**\r\n   * delete all DOM elements\r\n   * @private\r\n   */\r\n  _clean() {\r\n    for (var i = 0; i < this.domElements.length; i++) {\r\n      this.wrapper.removeChild(this.domElements[i]);\r\n    }\r\n\r\n    if (this.wrapper !== undefined) {\r\n      this.container.removeChild(this.wrapper);\r\n      this.wrapper = undefined;\r\n    }\r\n    this.domElements = [];\r\n\r\n    this._removePopup();\r\n  }\r\n\r\n\r\n  /**\r\n   * get the value from the actualOptions if it exists\r\n   * @param {array} path    | where to look for the actual option\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _getValue(path) {\r\n    let base = this.moduleOptions;\r\n    for (let i = 0; i < path.length; i++) {\r\n      if (base[path[i]] !== undefined) {\r\n        base = base[path[i]];\r\n      }\r\n      else {\r\n        base = undefined;\r\n        break;\r\n      }\r\n    }\r\n    return base;\r\n  }\r\n\r\n\r\n  /**\r\n   * all option elements are wrapped in an item\r\n   * @param {Array} path    | where to look for the actual option\r\n   * @param {Array.<Element>} domElements\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _makeItem(path, ...domElements) {\r\n    if (this.allowCreation === true) {\r\n      let item = document.createElement('div');\r\n      item.className = 'vis-configuration vis-config-item vis-config-s' + path.length;\r\n      domElements.forEach((element) => {\r\n        item.appendChild(element);\r\n      });\r\n      this.domElements.push(item);\r\n      return this.domElements.length;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * header for major subjects\r\n   * @param {string} name\r\n   * @private\r\n   */\r\n  _makeHeader(name) {\r\n    let div = document.createElement('div');\r\n    div.className = 'vis-configuration vis-config-header';\r\n    div.innerHTML = name;\r\n    this._makeItem([],div);\r\n  }\r\n\r\n\r\n  /**\r\n   * make a label, if it is an object label, it gets different styling.\r\n   * @param {string} name\r\n   * @param {array} path    | where to look for the actual option\r\n   * @param {string} objectLabel\r\n   * @returns {HTMLElement}\r\n   * @private\r\n   */\r\n  _makeLabel(name, path, objectLabel = false) {\r\n    let div = document.createElement('div');\r\n    div.className = 'vis-configuration vis-config-label vis-config-s' + path.length;\r\n    if (objectLabel === true) {\r\n      div.innerHTML = '<i><b>' + name + ':</b></i>';\r\n    }\r\n    else {\r\n      div.innerHTML = name + ':';\r\n    }\r\n    return div;\r\n  }\r\n\r\n\r\n  /**\r\n   * make a dropdown list for multiple possible string optoins\r\n   * @param {Array.<number>} arr\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _makeDropdown(arr, value, path) {\r\n    let select = document.createElement('select');\r\n    select.className = 'vis-configuration vis-config-select';\r\n    let selectedValue = 0;\r\n    if (value !== undefined) {\r\n      if (arr.indexOf(value) !== -1) {\r\n        selectedValue = arr.indexOf(value);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let option = document.createElement('option');\r\n      option.value = arr[i];\r\n      if (i === selectedValue) {\r\n        option.selected = 'selected';\r\n      }\r\n      option.innerHTML = arr[i];\r\n      select.appendChild(option);\r\n    }\r\n\r\n    let me = this;\r\n    select.onchange = function () {me._update(this.value, path);};\r\n\r\n    let label = this._makeLabel(path[path.length-1], path);\r\n    this._makeItem(path, label, select);\r\n  }\r\n\r\n\r\n  /**\r\n   * make a range object for numeric options\r\n   * @param {Array.<number>} arr\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _makeRange(arr, value, path) {\r\n    let defaultValue = arr[0];\r\n    let min = arr[1];\r\n    let max = arr[2];\r\n    let step = arr[3];\r\n    let range = document.createElement('input');\r\n    range.className = 'vis-configuration vis-config-range';\r\n    try {\r\n      range.type = 'range'; // not supported on IE9\r\n      range.min = min;\r\n      range.max = max;\r\n    }\r\n    // TODO: Add some error handling and remove this lint exception\r\n    catch (err) {}  // eslint-disable-line no-empty\r\n    range.step = step;\r\n\r\n    // set up the popup settings in case they are needed.\r\n    let popupString = '';\r\n    let popupValue = 0;\r\n\r\n    if (value !== undefined) {\r\n      let factor = 1.20;\r\n      if (value < 0 && value * factor < min) {\r\n        range.min = Math.ceil(value * factor);\r\n        popupValue = range.min;\r\n        popupString = 'range increased';\r\n      }\r\n      else if (value / factor < min) {\r\n        range.min = Math.ceil(value / factor);\r\n        popupValue = range.min;\r\n        popupString = 'range increased';\r\n      }\r\n      if (value * factor > max && max !== 1) {\r\n        range.max = Math.ceil(value * factor);\r\n        popupValue = range.max;\r\n        popupString = 'range increased';\r\n      }\r\n      range.value = value;\r\n    }\r\n    else {\r\n      range.value = defaultValue;\r\n    }\r\n\r\n    let input = document.createElement('input');\r\n    input.className = 'vis-configuration vis-config-rangeinput';\r\n    input.value = range.value;\r\n\r\n    var me = this;\r\n    range.onchange = function () {input.value = this.value; me._update(Number(this.value), path);};\r\n    range.oninput  = function () {input.value = this.value; };\r\n\r\n    let label = this._makeLabel(path[path.length-1], path);\r\n    let itemIndex = this._makeItem(path, label, range, input);\r\n\r\n    // if a popup is needed AND it has not been shown for this value, show it.\r\n    if (popupString !== '' && this.popupHistory[itemIndex] !== popupValue) {\r\n      this.popupHistory[itemIndex] = popupValue;\r\n      this._setupPopup(popupString, itemIndex);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * prepare the popup\r\n   * @param {string} string\r\n   * @param {number} index\r\n   * @private\r\n   */\r\n  _setupPopup(string, index) {\r\n    if (this.initialized === true && this.allowCreation === true && this.popupCounter < this.popupLimit) {\r\n      let div = document.createElement(\"div\");\r\n      div.id = \"vis-configuration-popup\";\r\n      div.className = \"vis-configuration-popup\";\r\n      div.innerHTML = string;\r\n      div.onclick = () => {this._removePopup()};\r\n      this.popupCounter += 1;\r\n      this.popupDiv = {html:div, index:index};\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * remove the popup from the dom\r\n   * @private\r\n   */\r\n  _removePopup() {\r\n    if (this.popupDiv.html !== undefined) {\r\n      this.popupDiv.html.parentNode.removeChild(this.popupDiv.html);\r\n      clearTimeout(this.popupDiv.hideTimeout);\r\n      clearTimeout(this.popupDiv.deleteTimeout);\r\n      this.popupDiv = {};\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Show the popup if it is needed.\r\n   * @private\r\n   */\r\n  _showPopupIfNeeded() {\r\n    if (this.popupDiv.html !== undefined) {\r\n      let correspondingElement = this.domElements[this.popupDiv.index];\r\n      let rect = correspondingElement.getBoundingClientRect();\r\n      this.popupDiv.html.style.left = rect.left + \"px\";\r\n      this.popupDiv.html.style.top = rect.top - 30 + \"px\"; // 30 is the height;\r\n      document.body.appendChild(this.popupDiv.html)\r\n      this.popupDiv.hideTimeout = setTimeout(() => {\r\n        this.popupDiv.html.style.opacity = 0;\r\n      },1500);\r\n      this.popupDiv.deleteTimeout = setTimeout(() => {\r\n        this._removePopup();\r\n      },1800)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * make a checkbox for boolean options.\r\n   * @param {number} defaultValue\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _makeCheckbox(defaultValue, value, path) {\r\n    var checkbox = document.createElement('input');\r\n    checkbox.type = 'checkbox';\r\n    checkbox.className = 'vis-configuration vis-config-checkbox';\r\n    checkbox.checked = defaultValue;\r\n    if (value !== undefined) {\r\n      checkbox.checked = value;\r\n      if (value !== defaultValue) {\r\n        if (typeof defaultValue === 'object') {\r\n          if (value !== defaultValue.enabled) {\r\n            this.changedOptions.push({path:path, value:value});\r\n          }\r\n        }\r\n        else {\r\n          this.changedOptions.push({path:path, value:value});\r\n        }\r\n      }\r\n    }\r\n\r\n    let me = this;\r\n    checkbox.onchange = function() {me._update(this.checked, path)};\r\n\r\n    let label = this._makeLabel(path[path.length-1], path);\r\n    this._makeItem(path, label, checkbox);\r\n  }\r\n\r\n  /**\r\n   * make a text input field for string options.\r\n   * @param {number} defaultValue\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _makeTextInput(defaultValue, value, path) {\r\n    var checkbox = document.createElement('input');\r\n    checkbox.type = 'text';\r\n    checkbox.className = 'vis-configuration vis-config-text';\r\n    checkbox.value = value;\r\n    if (value !== defaultValue) {\r\n      this.changedOptions.push({path:path, value:value});\r\n    }\r\n\r\n    let me = this;\r\n    checkbox.onchange = function() {me._update(this.value, path)};\r\n\r\n    let label = this._makeLabel(path[path.length-1], path);\r\n    this._makeItem(path, label, checkbox);\r\n  }\r\n\r\n\r\n  /**\r\n   * make a color field with a color picker for color fields\r\n   * @param {Array.<number>} arr\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _makeColorField(arr, value, path) {\r\n    let defaultColor = arr[1];\r\n    let div = document.createElement('div');\r\n    value = value === undefined ? defaultColor : value;\r\n\r\n    if (value !== 'none') {\r\n      div.className = 'vis-configuration vis-config-colorBlock';\r\n      div.style.backgroundColor = value;\r\n    }\r\n    else {\r\n      div.className = 'vis-configuration vis-config-colorBlock none';\r\n    }\r\n\r\n    value = value === undefined ? defaultColor : value;\r\n    div.onclick = () => {\r\n      this._showColorPicker(value,div,path);\r\n    };\r\n\r\n    let label = this._makeLabel(path[path.length-1], path);\r\n    this._makeItem(path,label, div);\r\n  }\r\n\r\n\r\n  /**\r\n   * used by the color buttons to call the color picker.\r\n   * @param {number} value\r\n   * @param {HTMLElement} div\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _showColorPicker(value, div, path) {\r\n    // clear the callback from this div\r\n    div.onclick = function() {};\r\n\r\n    this.colorPicker.insertTo(div);\r\n    this.colorPicker.show();\r\n\r\n    this.colorPicker.setColor(value);\r\n    this.colorPicker.setUpdateCallback((color) => {\r\n      let colorString = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n      div.style.backgroundColor = colorString;\r\n      this._update(colorString,path);\r\n    });\r\n\r\n    // on close of the colorpicker, restore the callback.\r\n    this.colorPicker.setCloseCallback(() => {\r\n      div.onclick = () => {\r\n        this._showColorPicker(value,div,path);\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * parse an object and draw the correct items\r\n   * @param {Object} obj\r\n   * @param {array} [path=[]]    | where to look for the actual option\r\n   * @param {boolean} [checkOnly=false]\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _handleObject(obj, path = [], checkOnly = false) {\r\n    let show = false;\r\n    let filter = this.options.filter;\r\n    let visibleInSet = false;\r\n    for (let subObj in obj) {\r\n      if (obj.hasOwnProperty(subObj)) {\r\n        show = true;\r\n        let item = obj[subObj];\r\n        let newPath = util.copyAndExtendArray(path, subObj);\r\n        if (typeof filter === 'function') {\r\n          show = filter(subObj,path);\r\n\r\n          // if needed we must go deeper into the object.\r\n          if (show === false) {\r\n            if (!(item instanceof Array) && typeof item !== 'string' && typeof item !== 'boolean' && item instanceof Object) {\r\n              this.allowCreation = false;\r\n              show = this._handleObject(item, newPath, true);\r\n              this.allowCreation = checkOnly === false;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (show !== false) {\r\n          visibleInSet = true;\r\n          let value = this._getValue(newPath);\r\n\r\n          if (item instanceof Array) {\r\n            this._handleArray(item, value, newPath);\r\n          }\r\n          else if (typeof item === 'string') {\r\n            this._makeTextInput(item, value, newPath);\r\n          }\r\n          else if (typeof item === 'boolean') {\r\n            this._makeCheckbox(item, value, newPath);\r\n          }\r\n          else if (item instanceof Object) {\r\n            // collapse the physics options that are not enabled\r\n            let draw = true;\r\n            if (path.indexOf('physics') !== -1) {\r\n              if (this.moduleOptions.physics.solver !== subObj) {\r\n                draw = false;\r\n              }\r\n            }\r\n\r\n            if (draw === true) {\r\n              // initially collapse options with an disabled enabled option.\r\n              if (item.enabled !== undefined) {\r\n                let enabledPath = util.copyAndExtendArray(newPath, 'enabled');\r\n                let enabledValue = this._getValue(enabledPath);\r\n                if (enabledValue === true) {\r\n                  let label = this._makeLabel(subObj, newPath, true);\r\n                  this._makeItem(newPath, label);\r\n                  visibleInSet = this._handleObject(item, newPath) || visibleInSet;\r\n                }\r\n                else {\r\n                  this._makeCheckbox(item, enabledValue, newPath);\r\n                }\r\n              }\r\n              else {\r\n                let label = this._makeLabel(subObj, newPath, true);\r\n                this._makeItem(newPath, label);\r\n                visibleInSet = this._handleObject(item, newPath) || visibleInSet;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            console.error('dont know how to handle', item, subObj, newPath);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return visibleInSet;\r\n  }\r\n\r\n\r\n  /**\r\n   * handle the array type of option\r\n   * @param {Array.<number>} arr\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _handleArray(arr, value, path) {\r\n    if (typeof arr[0] === 'string' && arr[0] === 'color') {\r\n      this._makeColorField(arr, value, path);\r\n      if (arr[1] !== value) {this.changedOptions.push({path:path, value:value});}\r\n    }\r\n    else if (typeof arr[0] === 'string') {\r\n      this._makeDropdown(arr, value, path);\r\n      if (arr[0] !== value) {this.changedOptions.push({path:path, value:value});}\r\n    }\r\n    else if (typeof arr[0] === 'number') {\r\n      this._makeRange(arr, value, path);\r\n      if (arr[0] !== value) {this.changedOptions.push({path:path, value:Number(value)});}\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * called to update the network with the new settings.\r\n   * @param {number} value\r\n   * @param {array} path    | where to look for the actual option\r\n   * @private\r\n   */\r\n  _update(value, path) {\r\n    let options = this._constructOptions(value,path);\r\n\r\n    if (this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit) {\r\n      this.parent.body.emitter.emit(\"configChange\", options);\r\n    }\r\n    this.initialized = true;\r\n    this.parent.setOptions(options);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {string|Boolean} value\r\n   * @param {Array.<string>} path\r\n   * @param {{}} optionsObj\r\n   * @returns {{}}\r\n   * @private\r\n   */\r\n  _constructOptions(value, path, optionsObj = {}) {\r\n    let pointer = optionsObj;\r\n\r\n    // when dropdown boxes can be string or boolean, we typecast it into correct types\r\n    value = value === 'true'  ? true  : value;\r\n    value = value === 'false' ? false : value;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      if (path[i] !== 'global') {\r\n        if (pointer[path[i]] === undefined) {\r\n          pointer[path[i]] = {};\r\n        }\r\n        if (i !== path.length - 1) {\r\n          pointer = pointer[path[i]];\r\n        }\r\n        else {\r\n          pointer[path[i]] = value;\r\n        }\r\n      }\r\n    }\r\n    return optionsObj;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _printOptions() {\r\n    let options = this.getOptions();\r\n    this.optionsContainer.innerHTML = '<pre>var options = ' + JSON.stringify(options, null, 2) + '</pre>';\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {{}} options\r\n   */\r\n  getOptions() {\r\n    let options = {};\r\n    for (var i = 0; i < this.changedOptions.length; i++) {\r\n      this._constructOptions(this.changedOptions[i].value, this.changedOptions[i].path, options)\r\n    }\r\n    return options;\r\n  }\r\n}\r\n\r\n\r\nexport default Configurator;","let Hammer = require('../module/hammer');\r\nlet hammerUtil = require('../hammerUtil');\r\nlet util = require('../util');\r\n\r\n/**\r\n * @param {number} [pixelRatio=1]\r\n */\r\nclass ColorPicker {\r\n  /**\r\n   * @param {number} [pixelRatio=1]\r\n   */\r\n  constructor(pixelRatio = 1) {\r\n    this.pixelRatio = pixelRatio;\r\n    this.generated = false;\r\n    this.centerCoordinates = {x:289/2, y:289/2};\r\n    this.r = 289 * 0.49;\r\n    this.color = {r:255,g:255,b:255,a:1.0};\r\n    this.hueCircle = undefined;\r\n    this.initialColor = {r:255,g:255,b:255,a:1.0};\r\n    this.previousColor= undefined;\r\n    this.applied = false;\r\n\r\n    // bound by\r\n    this.updateCallback = () => {};\r\n    this.closeCallback = () => {};\r\n\r\n    // create all DOM elements\r\n    this._create();\r\n  }\r\n\r\n\r\n  /**\r\n   * this inserts the colorPicker into a div from the DOM\r\n   * @param {Element} container\r\n   */\r\n  insertTo(container) {\r\n    if (this.hammer !== undefined) {\r\n      this.hammer.destroy();\r\n      this.hammer = undefined;\r\n    }\r\n    this.container = container;\r\n    this.container.appendChild(this.frame);\r\n    this._bindHammer();\r\n\r\n    this._setSize();\r\n  }\r\n\r\n  /**\r\n   * the callback is executed on apply and save. Bind it to the application\r\n   * @param {function} callback\r\n   */\r\n  setUpdateCallback(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.updateCallback = callback;\r\n    }\r\n    else {\r\n      throw new Error(\"Function attempted to set as colorPicker update callback is not a function.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the callback is executed on apply and save. Bind it to the application\r\n   * @param {function} callback\r\n   */\r\n  setCloseCallback(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.closeCallback = callback;\r\n    }\r\n    else {\r\n      throw new Error(\"Function attempted to set as colorPicker closing callback is not a function.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} color\r\n   * @returns {String}\r\n   * @private\r\n   */\r\n  _isColorString(color) {\r\n    var htmlColors = {black: '#000000',navy: '#000080',darkblue: '#00008B',mediumblue: '#0000CD',blue: '#0000FF',darkgreen: '#006400',green: '#008000',teal: '#008080',darkcyan: '#008B8B',deepskyblue: '#00BFFF',darkturquoise: '#00CED1',mediumspringgreen: '#00FA9A',lime: '#00FF00',springgreen: '#00FF7F',aqua: '#00FFFF',cyan: '#00FFFF',midnightblue: '#191970',dodgerblue: '#1E90FF',lightseagreen: '#20B2AA',forestgreen: '#228B22',seagreen: '#2E8B57',darkslategray: '#2F4F4F',limegreen: '#32CD32',mediumseagreen: '#3CB371',turquoise: '#40E0D0',royalblue: '#4169E1',steelblue: '#4682B4',darkslateblue: '#483D8B',mediumturquoise: '#48D1CC',indigo: '#4B0082',darkolivegreen: '#556B2F',cadetblue: '#5F9EA0',cornflowerblue: '#6495ED',mediumaquamarine: '#66CDAA',dimgray: '#696969',slateblue: '#6A5ACD',olivedrab: '#6B8E23',slategray: '#708090',lightslategray: '#778899',mediumslateblue: '#7B68EE',lawngreen: '#7CFC00',chartreuse: '#7FFF00',aquamarine: '#7FFFD4',maroon: '#800000',purple: '#800080',olive: '#808000',gray: '#808080',skyblue: '#87CEEB',lightskyblue: '#87CEFA',blueviolet: '#8A2BE2',darkred: '#8B0000',darkmagenta: '#8B008B',saddlebrown: '#8B4513',darkseagreen: '#8FBC8F',lightgreen: '#90EE90',mediumpurple: '#9370D8',darkviolet: '#9400D3',palegreen: '#98FB98',darkorchid: '#9932CC',yellowgreen: '#9ACD32',sienna: '#A0522D',brown: '#A52A2A',darkgray: '#A9A9A9',lightblue: '#ADD8E6',greenyellow: '#ADFF2F',paleturquoise: '#AFEEEE',lightsteelblue: '#B0C4DE',powderblue: '#B0E0E6',firebrick: '#B22222',darkgoldenrod: '#B8860B',mediumorchid: '#BA55D3',rosybrown: '#BC8F8F',darkkhaki: '#BDB76B',silver: '#C0C0C0',mediumvioletred: '#C71585',indianred: '#CD5C5C',peru: '#CD853F',chocolate: '#D2691E',tan: '#D2B48C',lightgrey: '#D3D3D3',palevioletred: '#D87093',thistle: '#D8BFD8',orchid: '#DA70D6',goldenrod: '#DAA520',crimson: '#DC143C',gainsboro: '#DCDCDC',plum: '#DDA0DD',burlywood: '#DEB887',lightcyan: '#E0FFFF',lavender: '#E6E6FA',darksalmon: '#E9967A',violet: '#EE82EE',palegoldenrod: '#EEE8AA',lightcoral: '#F08080',khaki: '#F0E68C',aliceblue: '#F0F8FF',honeydew: '#F0FFF0',azure: '#F0FFFF',sandybrown: '#F4A460',wheat: '#F5DEB3',beige: '#F5F5DC',whitesmoke: '#F5F5F5',mintcream: '#F5FFFA',ghostwhite: '#F8F8FF',salmon: '#FA8072',antiquewhite: '#FAEBD7',linen: '#FAF0E6',lightgoldenrodyellow: '#FAFAD2',oldlace: '#FDF5E6',red: '#FF0000',fuchsia: '#FF00FF',magenta: '#FF00FF',deeppink: '#FF1493',orangered: '#FF4500',tomato: '#FF6347',hotpink: '#FF69B4',coral: '#FF7F50',darkorange: '#FF8C00',lightsalmon: '#FFA07A',orange: '#FFA500',lightpink: '#FFB6C1',pink: '#FFC0CB',gold: '#FFD700',peachpuff: '#FFDAB9',navajowhite: '#FFDEAD',moccasin: '#FFE4B5',bisque: '#FFE4C4',mistyrose: '#FFE4E1',blanchedalmond: '#FFEBCD',papayawhip: '#FFEFD5',lavenderblush: '#FFF0F5',seashell: '#FFF5EE',cornsilk: '#FFF8DC',lemonchiffon: '#FFFACD',floralwhite: '#FFFAF0',snow: '#FFFAFA',yellow: '#FFFF00',lightyellow: '#FFFFE0',ivory: '#FFFFF0',white: '#FFFFFF'};\r\n    if (typeof color === 'string') {\r\n      return htmlColors[color];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the color of the colorPicker\r\n   * Supported formats:\r\n   * 'red'                   --> HTML color string\r\n   * '#ffffff'               --> hex string\r\n   * 'rbg(255,255,255)'      --> rgb string\r\n   * 'rgba(255,255,255,1.0)' --> rgba string\r\n   * {r:255,g:255,b:255}     --> rgb object\r\n   * {r:255,g:255,b:255,a:1.0} --> rgba object\r\n   * @param {string|Object} color\r\n   * @param {boolean} [setInitial=true]\r\n   */\r\n  setColor(color, setInitial = true) {\r\n    if (color === 'none') {\r\n      return;\r\n    }\r\n\r\n    let rgba;\r\n\r\n    // if a html color shorthand is used, convert to hex\r\n    var htmlColor = this._isColorString(color);\r\n    if (htmlColor !== undefined) {\r\n      color = htmlColor;\r\n    }\r\n\r\n    // check format\r\n    if (util.isString(color) === true) {\r\n      if (util.isValidRGB(color) === true) {\r\n        let rgbaArray = color.substr(4).substr(0, color.length - 5).split(',');\r\n        rgba = {r:rgbaArray[0], g:rgbaArray[1], b:rgbaArray[2], a:1.0};\r\n      }\r\n      else if (util.isValidRGBA(color) === true) {\r\n        let rgbaArray = color.substr(5).substr(0, color.length - 6).split(',');\r\n        rgba = {r:rgbaArray[0], g:rgbaArray[1], b:rgbaArray[2], a:rgbaArray[3]};\r\n      }\r\n      else if (util.isValidHex(color) === true) {\r\n        let rgbObj = util.hexToRGB(color);\r\n        rgba = {r:rgbObj.r, g:rgbObj.g, b:rgbObj.b, a:1.0};\r\n      }\r\n    }\r\n    else {\r\n      if (color instanceof Object) {\r\n        if (color.r !== undefined && color.g !== undefined && color.b !== undefined) {\r\n          let alpha = color.a !== undefined ? color.a : '1.0';\r\n          rgba = {r:color.r, g:color.g, b:color.b, a:alpha};\r\n        }\r\n      }\r\n    }\r\n\r\n    // set color\r\n    if (rgba === undefined) {\r\n      throw new Error(\"Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: \" + JSON.stringify(color));\r\n    }\r\n    else {\r\n      this._setColor(rgba, setInitial);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * this shows the color picker.\r\n   * The hue circle is constructed once and stored.\r\n   */\r\n  show() {\r\n    if (this.closeCallback !== undefined) {\r\n      this.closeCallback();\r\n      this.closeCallback = undefined;\r\n    }\r\n\r\n    this.applied = false;\r\n    this.frame.style.display = 'block';\r\n    this._generateHueCircle();\r\n  }\r\n\r\n  // ------------------------------------------ PRIVATE ----------------------------- //\r\n\r\n  /**\r\n   * Hide the picker. Is called by the cancel button.\r\n   * Optional boolean to store the previous color for easy access later on.\r\n   * @param {boolean} [storePrevious=true]\r\n   * @private\r\n   */\r\n  _hide(storePrevious = true) {\r\n    // store the previous color for next time;\r\n    if (storePrevious === true) {\r\n      this.previousColor = util.extend({}, this.color);\r\n    }\r\n\r\n    if (this.applied === true) {\r\n      this.updateCallback(this.initialColor);\r\n    }\r\n\r\n    this.frame.style.display = 'none';\r\n\r\n    // call the closing callback, restoring the onclick method.\r\n    // this is in a setTimeout because it will trigger the show again before the click is done.\r\n    setTimeout(() => {\r\n      if (this.closeCallback !== undefined) {\r\n        this.closeCallback();\r\n        this.closeCallback = undefined;\r\n      }\r\n    },0);\r\n  }\r\n\r\n\r\n  /**\r\n   * bound to the save button. Saves and hides.\r\n   * @private\r\n   */\r\n  _save() {\r\n    this.updateCallback(this.color);\r\n    this.applied = false;\r\n    this._hide();\r\n  }\r\n\r\n\r\n  /**\r\n   * Bound to apply button. Saves but does not close. Is undone by the cancel button.\r\n   * @private\r\n   */\r\n  _apply() {\r\n    this.applied = true;\r\n    this.updateCallback(this.color);\r\n    this._updatePicker(this.color);\r\n  }\r\n\r\n\r\n  /**\r\n   * load the color from the previous session.\r\n   * @private\r\n   */\r\n  _loadLast() {\r\n    if (this.previousColor !== undefined) {\r\n      this.setColor(this.previousColor, false);\r\n    }\r\n    else {\r\n      alert(\"There is no last color to load...\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * set the color, place the picker\r\n   * @param {Object} rgba\r\n   * @param {boolean} [setInitial=true]\r\n   * @private\r\n   */\r\n  _setColor(rgba, setInitial = true) {\r\n    // store the initial color\r\n    if (setInitial === true) {\r\n      this.initialColor = util.extend({}, rgba);\r\n    }\r\n\r\n    this.color = rgba;\r\n    let hsv = util.RGBToHSV(rgba.r, rgba.g, rgba.b);\r\n\r\n    let angleConvert = 2 * Math.PI;\r\n    let radius = this.r * hsv.s;\r\n    let x = this.centerCoordinates.x + radius * Math.sin(angleConvert * hsv.h);\r\n    let y = this.centerCoordinates.y + radius * Math.cos(angleConvert * hsv.h);\r\n\r\n    this.colorPickerSelector.style.left = x - 0.5 * this.colorPickerSelector.clientWidth + 'px';\r\n    this.colorPickerSelector.style.top = y - 0.5 * this.colorPickerSelector.clientHeight + 'px';\r\n\r\n    this._updatePicker(rgba);\r\n  }\r\n\r\n\r\n  /**\r\n   * bound to opacity control\r\n   * @param {number} value\r\n   * @private\r\n   */\r\n  _setOpacity(value) {\r\n    this.color.a = value / 100;\r\n    this._updatePicker(this.color);\r\n  }\r\n\r\n\r\n  /**\r\n   * bound to brightness control\r\n   * @param {number} value\r\n   * @private\r\n   */\r\n  _setBrightness(value) {\r\n    let hsv = util.RGBToHSV(this.color.r, this.color.g, this.color.b);\r\n    hsv.v = value / 100;\r\n    let rgba = util.HSVToRGB(hsv.h, hsv.s, hsv.v);\r\n    rgba['a'] = this.color.a;\r\n    this.color = rgba;\r\n    this._updatePicker();\r\n  }\r\n\r\n\r\n  /**\r\n   * update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.\r\n   * @param {Object} rgba\r\n   * @private\r\n   */\r\n  _updatePicker(rgba = this.color) {\r\n    let hsv = util.RGBToHSV(rgba.r, rgba.g, rgba.b);\r\n    let ctx = this.colorPickerCanvas.getContext('2d');\r\n    if (this.pixelRation === undefined) {\r\n      this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio ||\r\n      ctx.mozBackingStorePixelRatio ||\r\n      ctx.msBackingStorePixelRatio ||\r\n      ctx.oBackingStorePixelRatio ||\r\n      ctx.backingStorePixelRatio || 1);\r\n    }\r\n    ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\r\n\r\n    // clear the canvas\r\n    let w = this.colorPickerCanvas.clientWidth;\r\n    let h = this.colorPickerCanvas.clientHeight;\r\n    ctx.clearRect(0, 0, w, h);\r\n\r\n    ctx.putImageData(this.hueCircle, 0,0);\r\n    ctx.fillStyle = 'rgba(0,0,0,' + (1- hsv.v) + ')';\r\n    ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\r\n    ctx.fill();\r\n\r\n    this.brightnessRange.value = 100 * hsv.v;\r\n    this.opacityRange.value    = 100 * rgba.a;\r\n\r\n    this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\r\n    this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\r\n  }\r\n\r\n\r\n  /**\r\n   * used by create to set the size of the canvas.\r\n   * @private\r\n   */\r\n  _setSize() {\r\n    this.colorPickerCanvas.style.width = '100%';\r\n    this.colorPickerCanvas.style.height = '100%';\r\n\r\n    this.colorPickerCanvas.width = 289 * this.pixelRatio;\r\n    this.colorPickerCanvas.height = 289 * this.pixelRatio;\r\n  }\r\n\r\n\r\n  /**\r\n   * create all dom elements\r\n   * TODO: cleanup, lots of similar dom elements\r\n   * @private\r\n   */\r\n  _create() {\r\n    this.frame = document.createElement('div');\r\n    this.frame.className = 'vis-color-picker';\r\n\r\n    this.colorPickerDiv = document.createElement('div');\r\n    this.colorPickerSelector = document.createElement('div');\r\n    this.colorPickerSelector.className = 'vis-selector';\r\n    this.colorPickerDiv.appendChild(this.colorPickerSelector);\r\n\r\n    this.colorPickerCanvas = document.createElement('canvas');\r\n    this.colorPickerDiv.appendChild(this.colorPickerCanvas);\r\n\r\n    if (!this.colorPickerCanvas.getContext) {\r\n      let noCanvas = document.createElement( 'DIV' );\r\n      noCanvas.style.color = 'red';\r\n      noCanvas.style.fontWeight =  'bold' ;\r\n      noCanvas.style.padding =  '10px';\r\n      noCanvas.innerHTML =  'Error: your browser does not support HTML canvas';\r\n      this.colorPickerCanvas.appendChild(noCanvas);\r\n    }\r\n    else {\r\n      let ctx = this.colorPickerCanvas.getContext(\"2d\");\r\n      this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio ||\r\n      ctx.mozBackingStorePixelRatio ||\r\n      ctx.msBackingStorePixelRatio ||\r\n      ctx.oBackingStorePixelRatio ||\r\n      ctx.backingStorePixelRatio || 1);\r\n\r\n      this.colorPickerCanvas.getContext(\"2d\").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\r\n    }\r\n\r\n    this.colorPickerDiv.className = 'vis-color';\r\n\r\n    this.opacityDiv = document.createElement('div');\r\n    this.opacityDiv.className = 'vis-opacity';\r\n\r\n    this.brightnessDiv = document.createElement('div');\r\n    this.brightnessDiv.className = 'vis-brightness';\r\n\r\n    this.arrowDiv = document.createElement('div');\r\n    this.arrowDiv.className = 'vis-arrow';\r\n\r\n    this.opacityRange = document.createElement('input');\r\n    try {\r\n      this.opacityRange.type = 'range'; // Not supported on IE9\r\n      this.opacityRange.min = '0';\r\n      this.opacityRange.max = '100';\r\n    }\r\n    // TODO: Add some error handling and remove this lint exception\r\n    catch (err) {}  // eslint-disable-line no-empty\r\n    this.opacityRange.value = '100';\r\n    this.opacityRange.className = 'vis-range';\r\n\r\n    this.brightnessRange = document.createElement('input');\r\n    try {\r\n      this.brightnessRange.type = 'range'; // Not supported on IE9\r\n      this.brightnessRange.min = '0';\r\n      this.brightnessRange.max = '100';\r\n    }\r\n    // TODO: Add some error handling and remove this lint exception\r\n    catch (err) {}  // eslint-disable-line no-empty\r\n    this.brightnessRange.value = '100';\r\n    this.brightnessRange.className = 'vis-range';\r\n\r\n    this.opacityDiv.appendChild(this.opacityRange);\r\n    this.brightnessDiv.appendChild(this.brightnessRange);\r\n\r\n    var me = this;\r\n    this.opacityRange.onchange = function () {me._setOpacity(this.value);};\r\n    this.opacityRange.oninput  = function () {me._setOpacity(this.value);};\r\n    this.brightnessRange.onchange = function () {me._setBrightness(this.value);};\r\n    this.brightnessRange.oninput  = function () {me._setBrightness(this.value);};\r\n\r\n    this.brightnessLabel = document.createElement(\"div\");\r\n    this.brightnessLabel.className = \"vis-label vis-brightness\";\r\n    this.brightnessLabel.innerHTML = 'brightness:';\r\n\r\n    this.opacityLabel = document.createElement(\"div\");\r\n    this.opacityLabel.className = \"vis-label vis-opacity\";\r\n    this.opacityLabel.innerHTML = 'opacity:';\r\n\r\n    this.newColorDiv = document.createElement(\"div\");\r\n    this.newColorDiv.className = \"vis-new-color\";\r\n    this.newColorDiv.innerHTML = 'new';\r\n\r\n    this.initialColorDiv = document.createElement(\"div\");\r\n    this.initialColorDiv.className = \"vis-initial-color\";\r\n    this.initialColorDiv.innerHTML = 'initial';\r\n\r\n    this.cancelButton = document.createElement(\"div\");\r\n    this.cancelButton.className = \"vis-button vis-cancel\";\r\n    this.cancelButton.innerHTML = 'cancel';\r\n    this.cancelButton.onclick = this._hide.bind(this, false);\r\n\r\n    this.applyButton = document.createElement(\"div\");\r\n    this.applyButton.className = \"vis-button vis-apply\";\r\n    this.applyButton.innerHTML = 'apply';\r\n    this.applyButton.onclick = this._apply.bind(this);\r\n\r\n    this.saveButton = document.createElement(\"div\");\r\n    this.saveButton.className = \"vis-button vis-save\";\r\n    this.saveButton.innerHTML = 'save';\r\n    this.saveButton.onclick = this._save.bind(this);\r\n\r\n    this.loadButton = document.createElement(\"div\");\r\n    this.loadButton.className = \"vis-button vis-load\";\r\n    this.loadButton.innerHTML = 'load last';\r\n    this.loadButton.onclick = this._loadLast.bind(this);\r\n\r\n    this.frame.appendChild(this.colorPickerDiv);\r\n    this.frame.appendChild(this.arrowDiv);\r\n    this.frame.appendChild(this.brightnessLabel);\r\n    this.frame.appendChild(this.brightnessDiv);\r\n    this.frame.appendChild(this.opacityLabel);\r\n    this.frame.appendChild(this.opacityDiv);\r\n    this.frame.appendChild(this.newColorDiv);\r\n    this.frame.appendChild(this.initialColorDiv);\r\n\r\n    this.frame.appendChild(this.cancelButton);\r\n    this.frame.appendChild(this.applyButton);\r\n    this.frame.appendChild(this.saveButton);\r\n    this.frame.appendChild(this.loadButton);\r\n  }\r\n\r\n\r\n  /**\r\n   * bind hammer to the color picker\r\n   * @private\r\n   */\r\n  _bindHammer() {\r\n    this.drag = {};\r\n    this.pinch = {};\r\n    this.hammer = new Hammer(this.colorPickerCanvas);\r\n    this.hammer.get('pinch').set({enable: true});\r\n\r\n    hammerUtil.onTouch(this.hammer, (event) => {this._moveSelector(event)});\r\n    this.hammer.on('tap',       (event) => {this._moveSelector(event)});\r\n    this.hammer.on('panstart',  (event) => {this._moveSelector(event)});\r\n    this.hammer.on('panmove',   (event) => {this._moveSelector(event)});\r\n    this.hammer.on('panend',    (event) => {this._moveSelector(event)});\r\n  }\r\n\r\n\r\n  /**\r\n   * generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.\r\n   * @private\r\n   */\r\n  _generateHueCircle() {\r\n    if (this.generated === false) {\r\n      let ctx = this.colorPickerCanvas.getContext('2d');\r\n      if (this.pixelRation === undefined) {\r\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio ||\r\n        ctx.mozBackingStorePixelRatio ||\r\n        ctx.msBackingStorePixelRatio ||\r\n        ctx.oBackingStorePixelRatio ||\r\n        ctx.backingStorePixelRatio || 1);\r\n      }\r\n      ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\r\n\r\n      // clear the canvas\r\n      let w = this.colorPickerCanvas.clientWidth;\r\n      let h = this.colorPickerCanvas.clientHeight;\r\n      ctx.clearRect(0, 0, w, h);\r\n\r\n\r\n      // draw hue circle\r\n      let x, y, hue, sat;\r\n      this.centerCoordinates = {x: w * 0.5, y: h * 0.5};\r\n      this.r = 0.49 * w;\r\n      let angleConvert = (2 * Math.PI) / 360;\r\n      let hfac = 1 / 360;\r\n      let sfac = 1 / this.r;\r\n      let rgb;\r\n      for (hue = 0; hue < 360; hue++) {\r\n        for (sat = 0; sat < this.r; sat++) {\r\n          x = this.centerCoordinates.x + sat * Math.sin(angleConvert * hue);\r\n          y = this.centerCoordinates.y + sat * Math.cos(angleConvert * hue);\r\n          rgb = util.HSVToRGB(hue * hfac, sat * sfac, 1);\r\n          ctx.fillStyle = 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';\r\n          ctx.fillRect(x - 0.5, y - 0.5, 2, 2);\r\n        }\r\n      }\r\n      ctx.strokeStyle = 'rgba(0,0,0,1)';\r\n      ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\r\n      ctx.stroke();\r\n\r\n      this.hueCircle = ctx.getImageData(0,0,w,h);\r\n    }\r\n    this.generated = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * move the selector. This is called by hammer functions.\r\n   *\r\n   * @param {Event}  event   The event\r\n   * @private\r\n   */\r\n  _moveSelector(event) {\r\n    let rect = this.colorPickerDiv.getBoundingClientRect();\r\n    let left = event.center.x - rect.left;\r\n    let top = event.center.y - rect.top;\r\n\r\n    let centerY = 0.5 * this.colorPickerDiv.clientHeight;\r\n    let centerX = 0.5 * this.colorPickerDiv.clientWidth;\r\n\r\n    let x = left - centerX;\r\n    let y = top - centerY;\r\n\r\n    let angle = Math.atan2(x,y);\r\n    let radius = 0.98 * Math.min(Math.sqrt(x * x + y * y), centerX);\r\n\r\n    let newTop = Math.cos(angle) * radius + centerY;\r\n    let newLeft = Math.sin(angle) * radius + centerX;\r\n\r\n    this.colorPickerSelector.style.top = newTop - 0.5 * this.colorPickerSelector.clientHeight + 'px';\r\n    this.colorPickerSelector.style.left = newLeft - 0.5 * this.colorPickerSelector.clientWidth + 'px';\r\n\r\n    // set color\r\n    let h = angle / (2 * Math.PI);\r\n    h = h < 0 ? h + 1 : h;\r\n    let s = radius / this.r;\r\n    let hsv = util.RGBToHSV(this.color.r, this.color.g, this.color.b);\r\n    hsv.h = h;\r\n    hsv.s = s;\r\n    let rgba = util.HSVToRGB(hsv.h, hsv.s, hsv.v);\r\n    rgba['a'] = this.color.a;\r\n    this.color = rgba;\r\n\r\n    // update previews\r\n    this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\r\n    this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\r\n  }\r\n}\r\n\r\nexport default ColorPicker;","import GraphAlgorithms from '../GraphAlgorithms';\nconst ctx: Worker = self as any;\n\nlet myID: number;\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nctx.addEventListener('message', async (e) => {\n    if(e.data.type === \"id\"){\n        myID = e.data.id;\n        return;\n    }\n    const args: any[] = e.data.args;\n    if(e.data.type === \"test\"){\n        await sleep(e.data.waitTime);\n        ctx.postMessage({id: myID, data: \"DONE\"});\n        return;\n    }\n    if(\"convertToGraphImmut\" in e.data && e.data.convertToGraphImmut){\n        args.push(GraphAlgorithms.graphPlainToGraphImmut(e.data.graph));\n        ctx.postMessage({id: myID, data: (GraphAlgorithms as any)[e.data.type].apply(null, args)});\n    }\n    else {\n        ctx.postMessage({id: myID, data: (GraphAlgorithms as any)[e.data.type].apply(null, args)});\n    }\n});\n","\"use strict\";\r\n\r\nimport * as $ from 'jquery';\r\n\r\ndeclare interface ModalFormRow {\r\n    type: string;\r\n    label?: string;\r\n    initialValue?: any;\r\n    id?: string | number;\r\n    extraAttrs?: any;\r\n    validationFunc?: (value?: any, container?: JQuery) => boolean | string;\r\n    clickDismiss?: boolean;\r\n    onclick?: (...args: any[]) => void;\r\n    optionText?: any[];\r\n    optionValues?: any[];\r\n}\r\n\r\ndeclare interface BasicMapType {\r\n    class: string;\r\n    id: string;\r\n    value: any,\r\n\r\n    [key: number]: any,\r\n\r\n    [key: string]: any\r\n}\r\n\r\nconst defaultCancelCb = ($modal: JQuery) => {\r\n    $modal.modal(\"hide\");\r\n};\r\n\r\nconst self = {\r\n    deepCopy(deep: boolean, clone: any, copy: any) {\r\n        const isPlainObject = (obj: any) => {\r\n            if (!obj || {}.toString.call(obj) !== \"[object Object]\") {\r\n                return false;\r\n            }\r\n\r\n            let proto = Object.getPrototypeOf(obj);\r\n\r\n            if (!proto) {\r\n                return true;\r\n            }\r\n\r\n            // Objects with prototype are plain iff they were constructed by a global Object function\r\n            let Ctor = ({}).hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\r\n            return typeof Ctor === \"function\" && ({}).hasOwnProperty.toString.call(Ctor) === ({}).hasOwnProperty.toString.call(Object);\r\n        };\r\n\r\n\r\n        let options, name, src, copyIsArray,\r\n            target = arguments[0] || {},\r\n            i = 1,\r\n            length = arguments.length;\r\n\r\n        // Handle a deep copy situation\r\n        if (typeof target === \"boolean\") {\r\n            deep = target;\r\n\r\n            // Skip the boolean and the target\r\n            target = arguments[i] || {};\r\n            i++;\r\n        }\r\n\r\n        // Handle case when target is a string or something (possible in deep copy)\r\n        if (typeof target !== \"object\" && typeof target !== \"function\") {\r\n            target = {};\r\n        }\r\n\r\n        if (i === length) {\r\n            target = this;\r\n            i--;\r\n        }\r\n\r\n        for (; i < length; i++) {\r\n\r\n            // Only deal with non-null/undefined values\r\n            if ((options = arguments[i]) != null) {\r\n\r\n                // Extend the base object\r\n                for (name in options) {\r\n                    src = target[name];\r\n                    copy = options[name];\r\n\r\n                    // Prevent never-ending loop\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Recurse if we're merging plain objects or arrays\r\n                    if (deep && copy && (isPlainObject(copy) ||\r\n                        (copyIsArray = Array.isArray(copy)))) {\r\n\r\n                        if (copyIsArray) {\r\n                            copyIsArray = false;\r\n                            clone = src && Array.isArray(src) ? src : [];\r\n\r\n                        } else {\r\n                            clone = src && isPlainObject(src) ? src : {};\r\n                        }\r\n\r\n                        // Never move original objects, clone them\r\n                        target[name] = self.deepCopy(deep, clone, copy);\r\n\r\n                        // Don't bring in undefined values\r\n                    } else if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the modified object\r\n        return target;\r\n    },\r\n\r\n    deepFreeze: <T>(o: T): Readonly<T> => {\r\n        Object.freeze(o);\r\n\r\n        Object.getOwnPropertyNames(o).forEach((prop: string | number) => {\r\n            if (o.hasOwnProperty(prop) && (o as any)[prop] !== null\r\n                && (typeof (o as any)[prop] === \"object\" || typeof (o as any)[prop] === \"function\")\r\n                && !Object.isFrozen((o as any)[prop])) {\r\n                self.deepFreeze((o as any)[prop]);\r\n            }\r\n        });\r\n\r\n        return o;\r\n    },\r\n\r\n    sort: <T>(arr: T[], compareFunction: (a: any, b: any) => number): T[] => {\r\n        return [...arr].sort(compareFunction);\r\n    },\r\n\r\n    datasetToArray: (ds: any, key: string): Readonly<any[]> => {\r\n        const r: any[] = [];\r\n        ds.forEach((v: { [index: string]: any }) => {\r\n            r.push(v[key]);\r\n        });\r\n        return self.deepFreeze(r);\r\n    },\r\n\r\n    keepOnlyKeys: <T>(arr: T[], keys: string[]): Readonly<T[]> => {\r\n        arr = arr.slice();\r\n        arr.forEach((v: any) => {\r\n            const k = Object.keys(v);\r\n            k.forEach((key) => {\r\n                if (keys.indexOf(key) < 0) {\r\n                    delete v[key];\r\n                }\r\n            });\r\n        });\r\n        return self.deepFreeze(arr);\r\n    },\r\n\r\n    getFileExtension: (filename: string): string => {\r\n        return filename.split(\".\").splice(-1)[0];\r\n    },\r\n\r\n    htmlEncode: (string: string): string => {\r\n        const t = document.createElement(\"textarea\");\r\n        t.textContent = string;\r\n        string = t.innerHTML.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n        return string;\r\n    },\r\n\r\n    printout: (text: string, escape?: string): void => {\r\n        if (escape) {\r\n            text = this.htmlEncode(escape);\r\n        }\r\n        document.getElementById(\"printout\").innerHTML = text;\r\n    },\r\n\r\n    flatten: <T>(map: { [key: string]: T }): Readonly<T[]> => {\r\n        const r: T[] = [];\r\n        Object.keys(map).forEach((i) => {\r\n            r.push(map[i]);\r\n        });\r\n        return self.deepFreeze(r);\r\n    },\r\n\r\n    rotate: (map: {[key: string]: any}): Readonly<any> => {\r\n        const r: any = {};\r\n        Object.keys(map).forEach((i) => {\r\n            if (map[i] in r) {\r\n                r[map[i]].push(i);\r\n            }\r\n            else {\r\n                r[map[i]] = [i];\r\n            }\r\n        });\r\n        return self.deepFreeze(r);\r\n    },\r\n\r\n    max: (iterable: any[]): number => {\r\n        return iterable.reduce((a, b) => {\r\n            return Math.max(a, b);\r\n        });\r\n    },\r\n\r\n    toTitleCase: (str: string): string => {\r\n        return str.replace(/(?:^|\\s)\\w/g, (match) => {\r\n            return match.toUpperCase();\r\n        });\r\n    },\r\n\r\n    showSimpleModal: (title: string, body: string): void => {\r\n        self.showFormModal(null, title, null, [{type: \"html\", initialValue: body}], null, false);\r\n    },\r\n\r\n    makeFormModal: (title: string, successText: string, form: ModalFormRow[], footer = true): JQuery => {\r\n        const f = $(\"<div>\", {class: \"modal-body form-group\"});\r\n        form.forEach((formRow, i) => {\r\n            if (!(\"initialValue\" in formRow)) {\r\n                formRow.initialValue = \"\";\r\n            }\r\n\r\n            let id = \"form-modal-\" + i;\r\n            if (\"id\" in formRow && formRow.id !== \"\" && formRow.id !== null && typeof formRow.id === \"string\") {\r\n                id = formRow.id;\r\n            }\r\n\r\n            const basicMap: BasicMapType = {class: \"form-control\", id, value: formRow.initialValue};\r\n\r\n            if (\"extraAttrs\" in formRow) {\r\n                Object.keys(formRow.extraAttrs).forEach((attrname) => {\r\n                    if (typeof formRow.extraAttrs[attrname] !== \"function\") {\r\n                        basicMap[attrname] = formRow.extraAttrs[attrname];\r\n                    }\r\n                });\r\n            }\r\n\r\n            let validFunc = (value?: any, container?: JQuery): string | boolean => true;\r\n            if (\"validationFunc\" in formRow) {\r\n                validFunc = formRow.validationFunc;\r\n            }\r\n\r\n            const generalValidator = (event: any, valueMutator: (v: any) => any = null) => {\r\n                const $v = $(event.target);\r\n                let val = $v.val();\r\n                if (valueMutator !== null && typeof valueMutator === \"function\") {\r\n                    val = valueMutator(val);\r\n                }\r\n                const valid = validFunc(val, $v);\r\n\r\n                if (valid === true) {\r\n                    $v.removeClass(\"is-invalid\").next(\"#feedback-\" + i).remove();\r\n                }\r\n                else {\r\n                    $v.addClass(\"is-invalid\");\r\n                    if ($v.next(\"#feedback-\" + i).length === 0) {\r\n                        $v.after($(\"<div>\", {class: \"invalid-feedback\", id: \"feedback-\" + i}).text(valid));\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (formRow.type === \"html\") {\r\n                f.append($(formRow.initialValue));\r\n            }\r\n            else if (formRow.type === \"checkbox\") {\r\n                basicMap.type = \"checkbox\";\r\n                basicMap.class = \"form-check-input\";\r\n                delete basicMap.value;\r\n                if (formRow.initialValue) {\r\n                    basicMap.checked = \"\";\r\n                }\r\n\r\n                f.append($(\"<div>\", {class: \"form-check\"})\r\n                    .append($(\"<label>\", {for: id, class: \"form-check-label\"})\r\n                        .text(formRow.label).prepend($(\"<input>\", basicMap))\r\n                    )\r\n                );\r\n            }\r\n            else {\r\n                f.append($(\"<label>\", {for: id, class: \"col-form-label\"}).text(formRow.label));\r\n\r\n                if (formRow.type === \"button\") {\r\n                    if (\"clickDismiss\" in formRow && formRow.clickDismiss === true) {\r\n                        basicMap.class += \" btn-dismiss\";\r\n                    }\r\n                    const $b = $(\"<button>\", basicMap).text(formRow.initialValue);\r\n                    if (\"onclick\" in formRow && typeof formRow.onclick === \"function\") {\r\n                        $b.on(\"click\", formRow.onclick);\r\n                    }\r\n                    f.append($b);\r\n                }\r\n                else if (formRow.type === \"numeric\") {\r\n                    basicMap.type = \"number\";\r\n                    f.append($(\"<input>\", basicMap).on(\"blur validate\", (e) => {\r\n                        generalValidator(e, parseFloat);\r\n                    }));\r\n                }\r\n                else if (formRow.type === \"text\") {\r\n                    basicMap.type = \"text\";\r\n                    f.append($(\"<input>\", basicMap).on(\"blur validate\", generalValidator));\r\n                }\r\n                else if (formRow.type === \"file\") {\r\n                    basicMap.type = \"file\";\r\n                    basicMap.class = \"form-control-file form-control\";\r\n                    f.append($(\"<input>\", basicMap).on(\"blur validate\", generalValidator));\r\n                }\r\n                else if (formRow.type === \"textarea\") {\r\n                    const $b = $(\"<textarea>\", basicMap).on(\"blur validate\", generalValidator);\r\n                    if (\"onclick\" in formRow) {\r\n                        $b.on(\"click\", formRow.onclick);\r\n                    }\r\n                    f.append($b);\r\n                }\r\n                else if (formRow.type === \"select\") {\r\n                    const $options = $(\"<select>\", basicMap);\r\n                    formRow.optionText.forEach((oText, oIndex) => {\r\n                        if (oIndex < formRow.optionValues.length) {\r\n                            $options.append($(\"<option>\", {value: formRow.optionValues[oIndex]}).text(oText));\r\n                        }\r\n                        else {\r\n                            $options.append($(\"<option>\").text(oText));\r\n                        }\r\n                    });\r\n                    f.append($options.on(\"blur validate\", generalValidator));\r\n                }\r\n            }\r\n        });\r\n\r\n        let $footer = $(\"<div>\", {class: \"modal-footer\"})\r\n            .append($(\"<button>\", {class: \"btn btn-success\", type: \"button\"}).text(successText))\r\n            .append($(\"<button>\", {class: \"btn btn-danger btn-cancel\", type: \"button\"}).text(\"Cancel\"));\r\n\r\n        if (footer === false) {\r\n            $footer = null;\r\n        }\r\n\r\n        const $modal = ($(\"<div>\", {class: \"modal fade\", tabindex: \"-1\", role: \"dialog\", \"aria-hidden\": \"true\"}));\r\n        $modal\r\n            .append($(\"<div>\", {class: \"modal-dialog\"})\r\n                .append($(\"<div>\", {class: \"modal-content\"})\r\n                    .append($(\"<div>\", {class: \"modal-header\"})\r\n                        .append($(\"<h5>\", {class: \"modal-title\"}).text(title))\r\n                        .append($(\"<button>\", {class: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"close\"})\r\n                            .append($(\"<span>\", {\"aria-hidden\": \"true\"}).html(\"&times;\"))\r\n                        )\r\n                    )\r\n                    .append(f)\r\n                    .append($footer)\r\n                )\r\n            );\r\n        $modal.find(\"input, textarea\").off(\"keyup\").on(\"keyup\", (e) => {\r\n            if (e.key === \"Enter\") {\r\n                $(\".btn-success\").last().trigger(\"click\");\r\n            }\r\n        });\r\n        $modal.on(\"shown.bs.modal\", () => {\r\n            $modal.find(\"input[type='text'], input[type='number'], textarea\").first().trigger(\"focus\");\r\n        });\r\n\r\n        return $modal;\r\n    },\r\n\r\n    showFormModal: (successCb: ($modal: JQuery, vals: any[]) => void,\r\n                    title: string, successText: string, form: ModalFormRow[],\r\n                    cancelCb: ($modal: JQuery) => void = defaultCancelCb, footer = true) => {\r\n        const $modal = self.makeFormModal(title, successText, form, footer);\r\n\r\n        $modal.on(\"click\", \".btn-cancel\", () => {\r\n            if (typeof cancelCb === \"function\") {\r\n                cancelCb($modal);\r\n            }\r\n            else {\r\n                $modal.modal(\"hide\");\r\n            }\r\n        }).on(\"click\", \".btn-dismiss\", () => {\r\n            $modal.modal(\"hide\");\r\n        }).on(\"click\", \".btn-success\", () => {\r\n            const vals: any[] = [];\r\n            let hasErrors = false;\r\n\r\n            $modal.find(\"input, textarea, select\").each((i, v) => {\r\n                const $v = $(v);\r\n\r\n                if (($v as any).tagName === \"SELECT\") {\r\n                    vals.push($v.find(\":selected\").val());\r\n                }\r\n                else if ($v.attr(\"type\") === \"checkbox\") {\r\n                    vals.push($v.prop(\"checked\"));\r\n                }\r\n                else if ($v.attr(\"type\") === \"file\") {\r\n                    vals.push(($v.get(0) as any).files);\r\n                }\r\n                else if ($v.attr(\"type\") === \"number\") {\r\n                    vals.push(parseFloat($v.val() as string));\r\n                }\r\n                else {\r\n                    vals.push($v.val());\r\n                }\r\n\r\n                if ($v.trigger(\"validate\").hasClass(\"is-invalid\")) {\r\n                    hasErrors = true;\r\n                }\r\n\r\n            });\r\n\r\n            if (!hasErrors && typeof successCb === \"function\") {\r\n                successCb($modal, vals);\r\n            }\r\n        }).on(\"hidden.bs.modal\", () => {\r\n            $modal.remove();\r\n        }).modal(\"show\");\r\n    }\r\n};\r\n\r\nexport default self;\r\n","\"use strict\";\r\n\r\nimport {EdgeImmutPlain} from \"../classes/GraphImmut/EdgeImmut\";\r\nimport {NodeImmutPlain} from \"../classes/GraphImmut/NodeImmut\";\r\n\r\ninterface Degree {\r\n    in: number;\r\n    out: number;\r\n}\r\n\r\nexport default {\r\n    findVertexDegreesDirectional: (adjacencyMatrix: Array<Array<number>>): Degree[] => {\r\n        // Adjacency stores IDs of edges TO\r\n        const degrees: Degree[] = [];\r\n        adjacencyMatrix.forEach((v, i) => {\r\n            if (i in degrees) {\r\n                degrees[i].out += v.length;\r\n            }\r\n            else {\r\n                degrees[i] = {out: v.length, in: 0};\r\n            }\r\n            v.forEach((outV) => {\r\n                if (outV in degrees) {\r\n                    degrees[outV].in += 1;\r\n                }\r\n                else {\r\n                    degrees[outV] = {in: 1, out: 0};\r\n                }\r\n            });\r\n        });\r\n\r\n        return degrees;\r\n    },\r\n\r\n    interpolateNodesFromEdges: (edges: EdgeImmutPlain[]): NodeImmutPlain[] => {\r\n        const nodes: NodeImmutPlain[] = [];\r\n        edges.forEach((v) => {\r\n            nodes[v.from] = {id: v.from, label: v.from.toString()};\r\n            nodes[v.to] = {id: v.to, label: v.to.toString()};\r\n        });\r\n\r\n        return nodes;\r\n    },\r\n};\r\n","\"use strict\";\r\n\r\nexport default class SpanningTree {\r\n    private readonly id: number[];\r\n\r\n    constructor(V: number) {\r\n        this.id = [];\r\n        for (let v = 0; v < V; v++) {\r\n            this.id.push(v);\r\n        }\r\n    }\r\n\r\n    union(v: number, w: number) {\r\n        const q = this.root(v);\r\n        const p = this.root(w);\r\n\r\n        if (p !== q) {\r\n            this.id[p] = q;\r\n        }\r\n    }\r\n\r\n    root(q: number) {\r\n        while (this.id[q] !== q) {\r\n            q = this.id[q];\r\n        }\r\n        return q;\r\n    }\r\n\r\n    connected(v: number, w: number) {\r\n        return this.root(v) === this.root(w);\r\n    }\r\n}\r\n","\"use strict\";\n\nexport interface NodeImmutPlain {\n    id: Readonly<number>;\n    label: string;\n\n    [key: string]: any;\n\n    [key: number]: any\n}\n\nexport default class NodeImmut {\n    private readonly id: Readonly<number>;\n    private readonly label: Readonly<string>;\n    private readonly attributes: any;\n\n    constructor(id: any, label: null | string = null, extraAttrs: null | any = null) {\n        if (label === null) {\n            this.label = id.toString();\n        }\n        else {\n            this.label = label;\n        }\n\n        this.attributes = {};\n        if (extraAttrs !== null && typeof extraAttrs === \"object\") {\n            Object.keys(extraAttrs).forEach((key) => {\n                this.attributes[key] = Object.freeze(extraAttrs[key]);\n            });\n        }\n\n        this.attributes = Object.freeze(this.attributes);\n        this.label = Object.freeze(this.label);\n        this.id = Object.freeze(id);\n\n        if (new.target === NodeImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    toPlain(): NodeImmutPlain {\n        const toReturn: NodeImmutPlain = {id: this.id, label: this.label};\n        Object.keys(this.attributes).forEach((key) => {\n            if (!(key in toReturn)) {\n                toReturn[key] = this.attributes[key];\n            }\n        });\n\n        return toReturn;\n    }\n\n    getID(): Readonly<number> {\n        return this.id;\n    }\n\n    getLabel(): Readonly<string> {\n        return this.label;\n    }\n\n    getAttribute(attribute: string | number): any {\n        if (attribute in this.attributes) {\n            return this.attributes[attribute];\n        }\n\n        return null;\n    }\n\n    getAllAttributes(): { [key: string]: any; [key: number]: any } {\n        return this.attributes;\n    }\n\n    editNode(label: any = null, extraAttrs: any = null): NodeImmut {\n        if (label === null) {\n            label = this.getLabel();\n        }\n\n        // Merge existing and new attributes favoring the new\n        const attributes = Object.assign({}, this.attributes);\n        if(extraAttrs !== null) {\n            Object.keys(extraAttrs).forEach((key) => {\n                attributes[key] = extraAttrs[key];\n            });\n        }\n\n        return new NodeImmut(this.getID(), label, attributes);\n    }\n}\n","\"use strict\";\n\nexport interface EdgeImmutPlain {\n    label?: string;\n    from: number;\n    to: number;\n    weight: number\n\n    [key: string]: any;\n\n    [key: number]: any\n}\n\nexport default class EdgeImmut {\n    private readonly from: Readonly<number>;\n    private readonly to: Readonly<number>;\n    private readonly weight: Readonly<number>;\n    private readonly attributes: any;\n\n    constructor(from: number | EdgeImmutPlain, to?: number, weight: any = 1, extraAttrs: any = null) {\n        if (typeof from === \"object\") {\n            extraAttrs = Object.keys(from)\n                .filter((key) => !['from', 'to', 'weight'].includes(key))\n                .reduce((obj: any, key: string) => {\n                    obj[key] = (<EdgeImmutPlain> from)[key];\n                    return obj;\n                }, {});\n\n            to = from.to;\n            weight = from.weight;\n            from = from.from;\n        }\n\n        this.attributes = {};\n        if (extraAttrs !== null && typeof extraAttrs === \"object\") {\n            Object.keys(extraAttrs).forEach((key) => {\n                this.attributes[key] = Object.freeze(extraAttrs[key]);\n            });\n        }\n\n        this.attributes = Object.freeze(this.attributes);\n        this.from = Object.freeze(from);\n        this.to = Object.freeze(to);\n        this.weight = Object.freeze(parseFloat(weight));\n\n        if (new.target === EdgeImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    getFrom(): Readonly<number> {\n        return this.from;\n    }\n\n    getTo(): Readonly<number> {\n        return this.to;\n    }\n\n    getWeight(): Readonly<number> {\n        return this.weight;\n    }\n\n    getAttribute(attribute: string | number): any {\n        if (attribute in this.attributes) {\n            return this.attributes[attribute];\n        }\n\n        return null;\n    }\n\n    getAllAttributes(): { [key: string]: any; [key: number]: any } {\n        return this.attributes;\n    }\n\n    toPlain(): EdgeImmutPlain {\n        const toReturn: EdgeImmutPlain = {from: this.from, to: this.to, weight: this.weight};\n        Object.keys(this.attributes).forEach((key) => {\n            if (!(key in toReturn)) {\n                toReturn[key] = this.attributes[key];\n            }\n        });\n\n        return toReturn;\n    }\n\n    editEdge(newWeight: number, extraAttrs: any = {}): EdgeImmut {\n        // Merge existing and new attributes favoring the new\n        const attributes = Object.assign({}, this.attributes);\n        Object.keys(extraAttrs).forEach((key) => {\n            attributes[key] = extraAttrs[key];\n        });\n\n        return new EdgeImmut(this.getFrom(), this.getTo(),\n            newWeight === null ? this.getWeight() : newWeight, attributes);\n    }\n}\n","\"use strict\";\n\nimport {List} from 'immutable';\nimport {default as NodeImmut, NodeImmutPlain} from './NodeImmut';\nimport {default as EdgeImmut, EdgeImmutPlain} from './EdgeImmut';\n\ninterface NodeMapping {\n    [key: number]: number\n}\n\nconst filterExtraAttr = (data: any, labels: any) => {\n    return Object.keys(data)\n        .filter((key) => !(labels).includes(key))\n        .reduce((obj: any, key) => {\n            obj[key] = data[key];\n            return obj;\n        }, {});\n};\n\nconst filterNodeExtraAttr = (data: any) => {\n    return filterExtraAttr(data, [\"label\", \"id\"]);\n};\n\nconst filterEdgeExtraAttr = (data: any) => {\n    return filterExtraAttr(data, [\"from\", \"to\", \"weight\"]);\n};\n\nconst genericEdgesToImmutEdges = (edges: any, nodeMap: NodeMapping = {}): boolean | List<EdgeImmut> => {\n    if (edges === null) {\n        return false;\n    }\n\n    let newEdges: List<EdgeImmut> = List();\n\n    if (typeof edges === 'object') {\n        edges.forEach((edge: any) => {\n            let weight = 0;\n            let from = 0;\n            let to = 0;\n            let extraAttrs = {};\n\n            if (\"weight\" in edge) {\n                weight = parseFloat(edge.weight);\n            }\n            if (\"from\" in edge) {\n                from = nodeMap[edge.from];\n            }\n            if (\"to\" in edge) {\n                to = nodeMap[edge.to];\n            }\n            if (\"attributes\" in edge) {\n                extraAttrs = filterEdgeExtraAttr(edge.attributes);\n            }\n            else {\n                extraAttrs = filterEdgeExtraAttr(edge);\n            }\n\n            newEdges = newEdges.push(new EdgeImmut(from, to, weight, extraAttrs));\n        });\n    }\n    else {\n        return false;\n    }\n\n    return newEdges;\n};\n\nconst genericNodesToImmutNodes = (nodes: any): boolean | { nodes: Readonly<List<NodeImmut>>; map: { [key: number]: number } } => {\n    if (nodes === null) {\n        return false;\n    }\n\n    let newNodes: List<NodeImmut> = List();\n    const nodeMap: NodeMapping = {};\n\n    if (typeof nodes === \"number\") {\n        // Create the nodes\n        for (let i = 0; i < Math.floor(nodes); i++) {\n            newNodes = newNodes.set(i, new NodeImmut(i));\n            nodeMap[i] = i;\n        }\n    }\n    else if (typeof nodes === 'object') {\n        let nodeNum = 0;\n        nodes.forEach((n: any) => {\n            const id = nodeNum++;\n            let label = null;\n            let extraAttrs = null;\n\n            if (\"label\" in n) {\n                label = n.label;\n            }\n            if (\"id\" in n) {\n                nodeMap[n.id] = id;\n                if (\"label\" in n && n.label === n.id.toString()) {\n                    label = id.toString();\n                }\n            }\n            else {\n                nodeMap[id] = id;\n            }\n            if (\"attributes\" in n) {\n                extraAttrs = filterNodeExtraAttr(n.attributes);\n            }\n            else {\n                extraAttrs = filterNodeExtraAttr(n);\n            }\n\n            newNodes = newNodes.set(id, new NodeImmut(id, label, extraAttrs));\n        });\n    }\n    else {\n        return false;\n    }\n\n    return {nodes: Object.freeze(newNodes), map: nodeMap};\n};\n\nexport default class GraphImmut {\n    private readonly directed: Readonly<boolean>;\n    private readonly weighted: Readonly<boolean>;\n    private readonly nodes: Readonly<List<NodeImmut>>;\n    private readonly numNodes: Readonly<number>;\n    private readonly edges: Readonly<List<EdgeImmut>>;\n    private readonly numEdges: Readonly<number>;\n\n    constructor(nodes: number | List<NodeImmut> | NodeImmutPlain[],\n                edges: null | List<EdgeImmut> | EdgeImmutPlain[] = null,\n                directed = false, weighted = false) {\n        this.directed = Object.freeze(directed);\n        this.weighted = Object.freeze(weighted);\n        let nodeMap = {};\n\n        // Make Nodes\n        if (typeof nodes === \"number\" || (typeof nodes === \"object\" && !(nodes instanceof List))) {\n            const n = genericNodesToImmutNodes(nodes);\n            if (typeof n !== \"object\") {\n                throw new Error(\"Unable to parse node input!\");\n            }\n            this.nodes = n.nodes;\n            nodeMap = n.map;\n        }\n        else if (nodes instanceof List) {\n            this.nodes = nodes as List<NodeImmut>;\n        }\n        else {\n            throw new Error(\"Illegal type of 'node' input to GraphImmut constructor\");\n        }\n        this.nodes = Object.freeze(this.nodes);\n        this.numNodes = Object.freeze(this.nodes.size);\n\n        // If we are given edges, add them to the graph\n        if (edges !== null && typeof edges === \"object\" && !(edges instanceof List)) {\n            const e = genericEdgesToImmutEdges(edges, nodeMap);\n            if (typeof e !== \"object\") {\n                throw new Error(\"Unable to parse Edge input\");\n            }\n            this.edges = e;\n        }\n        else if (edges instanceof List) {\n            this.edges = edges as List<EdgeImmut>;\n        }\n        else {\n            this.edges = List();\n        }\n        this.edges = Object.freeze(this.edges);\n        this.numEdges = Object.freeze(this.edges.size);\n\n        if (new.target === GraphImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    getNode(id: number, rich = false): NodeImmut | NodeImmutPlain | boolean {\n        if (id >= this.numNodes) {\n            return false;\n        }\n        if (rich) {\n            return this.nodes.get(id);\n        }\n        return this.nodes.get(id).toPlain();\n    }\n\n    addNode(data: any = null): GraphImmut {\n        if (data === null) {\n            data = {};\n        }\n\n        const id = this.numNodes;\n        if (!(\"label\" in data)) {\n            data.label = id.toString();\n        }\n\n        const extraAttrs = filterNodeExtraAttr(data);\n\n        return new GraphImmut(this.nodes.set(id, new NodeImmut(id, data.label, extraAttrs)),\n            this.edges, this.directed, this.weighted);\n    }\n\n    editNode(id: number, data: any): any {\n        if (!this.nodes.has(id)) {\n            return false;\n        }\n\n        const extraAttrs = filterNodeExtraAttr(data);\n        if (!(\"label\" in data)) {\n            data.label = (this.getNode(id, true) as NodeImmut).getLabel();\n        }\n        return new GraphImmut(this.nodes.set(id, (this.getNode(id, true) as NodeImmut).editNode(data.label, extraAttrs)),\n            this.edges, this.directed, this.weighted);\n    }\n\n    deleteNode(id: number): GraphImmut | boolean {\n        // Make sure the ID exists\n        if (!(id >= 0 && id < this.numNodes)) {\n            return false;\n        }\n\n        const nodeMap: NodeMapping = {}; // Map for old IDs to new ones since we're deleting an entry\n\n        // Remove it from the node list\n        let nodeCount = 0;\n        const newNodes: List<NodeImmut> = this.nodes\n            .filter((n) => {\n                if (n.getID() === id) {\n                    nodeMap[n.getID()] = -1;\n                }\n                else {\n                    nodeMap[n.getID()] = nodeCount++;\n                }\n\n                return n.getID() !== id;\n            })\n            .map((node) => {\n                let label = node.getLabel();\n                if (node.getID().toString() === label) {\n                    label = nodeMap[node.getID()].toString();\n                }\n\n                return new NodeImmut(nodeMap[node.getID()], label, node.getAllAttributes());\n            }) as List<NodeImmut>;\n\n        // Remap edges\n        const newEdges: List<EdgeImmut> = this.edges\n            .filter((edge) => {\n                return !(edge.getFrom() === id || edge.getTo() === id);\n            })\n            .map((edge) => {\n                return new EdgeImmut(nodeMap[edge.getFrom()], nodeMap[edge.getTo()], edge.getWeight(), edge.getAllAttributes());\n            }) as List<EdgeImmut>;\n\n        return new GraphImmut(newNodes, newEdges, this.directed, this.weighted);\n    }\n\n    addEdge(from: number, to: number, weight: any = 1): GraphImmut {\n        if (!this.weighted) {\n            weight = 1; // Ensure that edge weights are 1 if this is an unweighted graph\n        }\n\n        const newEdges = this.edges.push(new EdgeImmut(from, to, parseFloat(weight)));\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    deleteEdge(from: number, to: number, weight: any = null, deleteAll = true): GraphImmut {\n        if (weight !== null) {\n            weight = parseFloat(weight);\n        }\n\n        let foundOneEdge = false;\n        const newEdges: List<EdgeImmut> = this.edges.filter((edge) => {\n            // If we're not deleting everything and we have found one edge, then do not filter anymore\n            if (foundOneEdge && !deleteAll) {\n                return true;\n            }\n\n            // If we have an exact match\n            if (edge.getFrom() === from && edge.getTo() === to && (weight === null || edge.getWeight() === weight)) {\n                foundOneEdge = true;\n                return false; // Remove this edge\n            }\n\n            // If we are undirected, check for opposing matches\n            if (!this.directed) {\n                if (edge.getFrom() === to && edge.getTo() === from && (weight === null || edge.getWeight() === weight)) {\n                    foundOneEdge = true;\n                    return false; // Remove this edge\n                }\n            }\n\n            return true;\n        }) as List<EdgeImmut>;\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    editEdge(from: number, to: number, newWeight: any, oldWeight: any = null, color: string | null = null): GraphImmut | boolean {\n        let foundFirst = false;\n\n        if (oldWeight !== null) {\n            oldWeight = parseFloat(oldWeight);\n        }\n\n        let newEdges = this.edges;\n        this.edges.forEach((edge, index) => {\n            if (foundFirst) {\n                return;\n            }\n\n            if (((edge.getFrom() === from && edge.getTo() === to)\n                || (!this.isDirected() && edge.getFrom() === to && edge.getTo() === from))\n                && (oldWeight === null || edge.getWeight() === oldWeight)) {\n\n                if (color !== null) {\n                    newEdges = newEdges.set(index,\n                        edge.editEdge(newWeight === null ? null : parseFloat(newWeight),\n                            {color: color}));\n                }\n                else {\n                    newEdges = newEdges.set(index, edge.editEdge(newWeight === null ? null : parseFloat(newWeight)));\n                }\n                foundFirst = true;\n            }\n        });\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    getAllNodes(rich = false): NodeImmut[] | NodeImmutPlain[] {\n        if (rich) {\n            return this.nodes.toArray();\n        }\n        return this.nodes.map((node) => {\n            return node.toPlain();\n        }).toArray();\n    }\n\n    getAllNodesAsImmutableList(): List<NodeImmut> {\n        return this.nodes;\n    }\n\n    getAllEdgesAsImmutableList(): List<EdgeImmut> {\n        return this.edges;\n    }\n\n    getAllEdges(rich = false): EdgeImmut[] | EdgeImmutPlain[] {\n        if (rich) {\n            return this.edges.toArray();\n        }\n        return this.edges.map((edge) => {\n            return edge.toPlain();\n        }).toArray();\n    }\n\n    getNumberOfNodes(): number {\n        return this.numNodes;\n    }\n\n    getNumberOfEdges(): number {\n        return this.numEdges;\n    }\n\n    getAllOutDegrees(): number[] {\n        const degrees: number[] = [];\n        this.nodes.forEach((_, i) => {\n            degrees[i] = 0;\n        });\n        this.edges.forEach((edge) => {\n            if (edge.getFrom() in degrees) {\n                degrees[edge.getFrom()]++;\n            }\n            else {\n                degrees[edge.getFrom()] = 1;\n            }\n        });\n\n        return degrees;\n    }\n\n    asWeighted(): GraphImmut {\n        return new GraphImmut(this.nodes, this.edges.map((edge) => {\n            return edge.editEdge(1);\n        }) as List<EdgeImmut>, this.directed, true);\n    }\n\n    asUnweighted(): GraphImmut {\n        return new GraphImmut(this.nodes, this.edges.map((edge) => {\n            return edge.editEdge(1);\n        }) as List<EdgeImmut>, this.directed, false);\n    }\n\n    asDirected(doubleEdges = false): GraphImmut {\n        if (!doubleEdges) {\n            return new GraphImmut(this.nodes, this.edges, true, this.weighted);\n        }\n\n        let newEdges = this.edges;\n        this.edges.forEach((edge) => {\n            newEdges = newEdges.push(new EdgeImmut(edge.getTo(), edge.getFrom(), edge.getWeight(), edge.getAllAttributes()));\n        });\n\n        return new GraphImmut(this.nodes, newEdges, true, this.weighted);\n    }\n\n    asUndirected(): GraphImmut {\n        let newEdges: List<EdgeImmut> = List();\n        const addedEdges: { [key: string]: null } = {};\n\n        this.edges.forEach((edge) => {\n            let from = edge.getFrom();\n            let to = edge.getTo();\n            if (to < from) {\n                from = to;\n                to = edge.getFrom();\n            }\n            if (!(`${from}_${to}` in addedEdges)) {\n                addedEdges[`${from}_${to}`] = null;\n                newEdges = newEdges.push(new EdgeImmut(from, to, edge.getWeight(), edge.getAllAttributes()));\n            }\n        });\n\n        return new GraphImmut(this.nodes, newEdges, false, this.weighted);\n    }\n\n    asChangedDirectedWeighted(directed: boolean, weighted: boolean): GraphImmut {\n        let G: GraphImmut = this;\n        if (directed && !this.directed) {\n            G = G.asDirected();\n        }\n        else if (!directed && this.directed) {\n            G = G.asUndirected();\n        }\n\n        if (weighted && !this.weighted) {\n            G = G.asWeighted();\n        }\n        else if (!weighted && this.weighted) {\n            G = G.asUnweighted();\n        }\n\n        return G;\n    }\n\n    getNodeAdjacency(id: number): number[] {\n        const adj: number[] = [];\n        this.edges.forEach((edge) => {\n            if (edge.getFrom() === id) {\n                adj.push(edge.getTo());\n            }\n            else if (!this.directed && edge.getTo() === id) {\n                adj.push(edge.getFrom());\n            }\n        });\n\n        return adj;\n    }\n\n    getFullAdjacency(): number[][] {\n        const adj: number[][] = [];\n        this.nodes.forEach((n) => {\n            adj[n.getID()] = this.getNodeAdjacency(n.getID());\n        });\n\n        return adj;\n    }\n\n    areAdjacent(id1: number, id2: number): boolean {\n        return this.getNodeAdjacency(id1).includes(id2);\n    }\n\n    getEdgesBetween(id1: number, id2: number): EdgeImmut[] {\n        const edgeList: EdgeImmut[] = [];\n        if (id1 >= this.numNodes || id2 >= this.numNodes) {\n            return edgeList;\n        }\n\n        this.edges.forEach((edge) => {\n            if (!this.directed && edge.getFrom() === id2 && edge.getTo() === id1) {\n                edgeList.push(edge);\n            }\n\n            if (edge.getFrom() === id1 && edge.getTo() === id2) {\n                edgeList.push(edge);\n            }\n        });\n\n        return edgeList;\n    }\n\n    getMinWeightEdgeBetween(id1: number, id2: number): number {\n        let minWeight = Infinity;\n        this.getEdgesBetween(id1, id2).forEach((edge) => {\n            if (edge.getWeight() < minWeight) {\n                minWeight = edge.getWeight();\n            }\n        });\n\n        return minWeight;\n    }\n\n    // Take a multigraph and reduce all multiple edges to a single edge, weighted using the reducer\n    reduceMultiGraph(reducer: (a: number, b: number) => number = Math.min, initialValue: any = Infinity): GraphImmut {\n        const multiEdges: EdgeImmutPlain[] = [];\n        this.nodes.forEach((node) => {\n            // If we have duplicates\n            const adj = this.getNodeAdjacency(node.getID());\n            const uniques = new Set(adj);\n            if (uniques.size < adj.length) {\n                uniques.forEach((to) => {\n                    const newWeight = this.getEdgesBetween(node.getID(), to).reduce((acc, edge) => {\n                        return reducer(acc, edge.getWeight());\n                    }, initialValue);\n\n                    multiEdges.push({from: node.getID(), to, weight: parseFloat(newWeight)});\n                });\n            }\n        });\n\n        // Remove all multigraph edges and replace them with single new edges\n        let newEdges = this.edges.filter((edge) => {\n            let keep = true;\n            multiEdges.forEach((duplicateEdge) => {\n                if (edge.getFrom() === duplicateEdge.from && edge.getTo() === duplicateEdge.to) {\n                    keep = false;\n                }\n            });\n\n            return keep;\n        }) as List<EdgeImmut>;\n        multiEdges.forEach((edge) => {\n            newEdges = newEdges.push(new EdgeImmut(edge.from, edge.to, edge.weight));\n        });\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    isWeighted() {\n        return this.weighted;\n    }\n\n    isDirected() {\n        return this.directed;\n    }\n}\n","\"use strict\";\r\n\r\nimport {DataSet, Edge} from 'vis/index-network';\r\nimport help from './util/genericHelpers';\r\nimport GraphImmut from './classes/GraphImmut/GraphImmut';\r\nimport {EdgeImmutPlain} from \"./classes/GraphImmut/EdgeImmut\";\r\nimport NodeImmut, {NodeImmutPlain} from \"./classes/GraphImmut/NodeImmut\";\r\nimport {GraphPlain} from \"./util/predefinedGraphs\";\r\n\r\ninterface UpToDateProperties {\r\n    name: string;\r\n    upToDate: boolean;\r\n    type: string;\r\n    always?: boolean;\r\n    applyFunc?: (ignoreDuplicate?: boolean) => any;\r\n    [index: string]: string|boolean|((ignoreDuplicate?: boolean) => any)\r\n}\r\n\r\ninterface GraphProperties {\r\n    vertices: number;\r\n    edges: number;\r\n    eulerian: boolean;\r\n    \"Chromatic Number\": number | null;\r\n    \"Connected Components\": number | null;\r\n    \"Strongly Connected Components\": number | null;\r\n    cyclic: boolean;\r\n\r\n    [index: string]: boolean | number | null;\r\n}\r\n\r\ninterface GraphStateData {\r\n    stronglyConnectedComponents: null | { [key: number]: number };\r\n    connectedComponents: null | { [key: number]: number };\r\n    graphColoring: null | number[];\r\n\r\n    [index: string]: null | number[] | { [key: number]: number };\r\n}\r\n\r\nexport interface AddNodeI {\r\n    id?: number\r\n    label: string;\r\n    x: number;\r\n    y: number;\r\n    color?:string;\r\n}\r\n\r\nexport interface GraphStateHistory {\r\n    upToDate: UpToDateProperties[];\r\n    state: GraphStateData;\r\n    graph: GraphImmut;\r\n    graphProperties: GraphProperties;\r\n    [index: string]: UpToDateProperties[]|GraphStateData|GraphImmut|GraphProperties;\r\n}\r\n\r\nconst getInt = (v: string|number): number => {\r\n    if(typeof v === 'number'){\r\n        return v;\r\n    }\r\n    return parseInt(v);\r\n};\r\n\r\nexport default class GraphState {\r\n    public static workerPool: Worker[] = [];\r\n    public static backHistory: GraphStateHistory[] = [];\r\n    public static forwardHistory: GraphStateHistory[] = [];\r\n    public static maxHistory = 10;\r\n    public static upToDate: UpToDateProperties[] = [\r\n        {\r\n            name: \"Chromatic Number\", upToDate: false, type: \"property\",\r\n            applyFunc: () => {\r\n                return window.ui.makeAndPrintGraphColoring();\r\n            }\r\n        },\r\n        {\r\n            name: \"graphColoring\", upToDate: false, type: \"state\",\r\n            applyFunc: () => {\r\n                return window.ui.makeAndPrintGraphColoring();\r\n            }\r\n        },\r\n        {name: \"vertices\", upToDate: true, always: true, type: \"property\"},\r\n        {name: \"edges\", upToDate: true, always: true, type: \"property\"},\r\n        {\r\n            name: \"eulerian\", upToDate: false, type: \"property\",\r\n            applyFunc: (i) => {\r\n                return window.ui.makeAndPrintEulerian(i);\r\n            }\r\n        },\r\n        {\r\n            name: \"Connected Components\", upToDate: false, type: \"property\",\r\n            applyFunc: () => {\r\n                window.ui.getAlgorithms().find((v) => v.name === 'Connected Components').applyFunc();\r\n            }\r\n        },\r\n        {\r\n            name: \"connectedComponents\", upToDate: false, type: \"state\",\r\n            applyFunc: () => {\r\n                window.ui.getAlgorithms().find((v) => v.name === 'Connected Components').applyFunc();\r\n            }\r\n        },\r\n        {\r\n            name: \"Strongly Connected Components\", upToDate: false, type: \"property\",\r\n            applyFunc: () => {\r\n                window.ui.getAlgorithms().find((v) => v.name === 'Strongly Connected Components').applyFunc();\r\n            }\r\n        },\r\n        {\r\n            name: \"stronglyConnectedComponents\", upToDate: false, type: \"state\",\r\n            applyFunc: () => {\r\n                window.ui.getAlgorithms().find((v) => v.name === 'Strongly Connected Components').applyFunc();\r\n            }\r\n        },\r\n        {\r\n            name: \"cyclic\", upToDate: false, type: \"property\",\r\n            applyFunc: () => {\r\n                return window.ui.makeAndPrintIsCyclic();\r\n            }\r\n        },\r\n    ];\r\n    public static state: GraphStateData = {\r\n        stronglyConnectedComponents: null,\r\n        connectedComponents: null,\r\n        graphColoring: null,\r\n    };\r\n    public static graph: GraphImmut = null;\r\n    public static graphProperties: GraphProperties = {\r\n        vertices: 0,\r\n        edges: 0,\r\n        eulerian: false,\r\n        \"Chromatic Number\": null,\r\n        \"Connected Components\": null,\r\n        \"Strongly Connected Components\": null,\r\n        cyclic: false,\r\n    };\r\n\r\n    static setUpToDate(value = false, listOptions?: string[]) {\r\n        const all = listOptions === null || typeof listOptions === \"undefined\";\r\n        let property = false;\r\n        GraphState.upToDate.forEach((v) => {\r\n            if ((!(\"always\" in v) || !v.always) && (all || listOptions.indexOf(v.name) > -1)) {\r\n                v.upToDate = value;\r\n                if (v.type === \"property\") {\r\n                    property = true;\r\n                }\r\n            }\r\n        });\r\n        if (property) {\r\n            GraphState.makeAndPrintProperties();\r\n        }\r\n    }\r\n\r\n    static async getProperty(property: string, updateIfNotUpdated = false, ignoreDuplicate = false): Promise<any> {\r\n        const a = GraphState.upToDate.find((v) => {\r\n            return (\"name\" in v && v.name === property);\r\n        });\r\n        if (!a.upToDate) {\r\n            if (\"applyFunc\" in a && updateIfNotUpdated) {\r\n                await a.applyFunc(ignoreDuplicate);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        if (a.type === \"state\") {\r\n            return Promise.resolve(GraphState.state[property]);\r\n        }\r\n        return Promise.resolve(GraphState.graphProperties[property]);\r\n    }\r\n\r\n    static async makeAndPrintProperties(recalcLong = false) {\r\n        const directional = window.settings.getOption(\"direction\");\r\n\r\n        GraphState.graphProperties.vertices = GraphState.graph.getNumberOfNodes();\r\n        GraphState.graphProperties.edges = GraphState.graph.getNumberOfEdges();\r\n\r\n        if (!directional) {\r\n            await GraphState.getProperty(\"eulerian\", true, true);\r\n        }\r\n\r\n        const p = Object.keys(GraphState.graphProperties);\r\n        if (recalcLong) {\r\n            p.forEach(async (v) => {\r\n                await GraphState.getProperty(v, true);\r\n            });\r\n        }\r\n\r\n        const printableProperties: any = {};\r\n        await Promise.all(p.map(async (v) => {\r\n            printableProperties[v] = await GraphState.getProperty(v);\r\n        }));\r\n\r\n        GraphState.printGraphProperties(printableProperties);\r\n    }\r\n\r\n    static printGraphProperties(properties: any) {\r\n        let p = \"\";\r\n        Object.keys(properties).forEach((k) => {\r\n            if (properties[k] !== null) {\r\n                p += `${help.toTitleCase(k)}: ${properties[k]}\\n`;\r\n            }\r\n        });\r\n        p = p.trim();\r\n        p = help.htmlEncode(p);\r\n        document.getElementById(\"graphProps\").innerHTML = `<p class='nav-link'>${p}</p>`;\r\n    }\r\n\r\n    static addEdge(from: number|string, to: number|string, weight = 0, graph = GraphState.graph) {\r\n        const edgeFrom = getInt(from);\r\n        const edgeTo = getInt(to);\r\n        graph = graph.addEdge(edgeFrom, edgeTo, weight);\r\n        window.main.setData({\r\n            nodes: GraphState.clearColorFromNodes(graph.getAllNodes() as NodeImmutPlain[]),\r\n            edges: GraphState.clearColorFromEdges(graph.getAllEdges() as EdgeImmutPlain[])\r\n        });\r\n    }\r\n\r\n    static addNode(data: AddNodeI, graph = GraphState.graph) {\r\n        graph = graph.addNode({label: data.label, x: data.x, y: data.y});\r\n        window.main.setData({\r\n            nodes: GraphState.clearColorFromNodes(graph.getAllNodes() as NodeImmutPlain[]),\r\n            edges: GraphState.clearColorFromEdges(graph.getAllEdges() as EdgeImmutPlain[])\r\n        });\r\n    }\r\n\r\n    static editNode(id: number|string, label: string, graph = GraphState.graph) {\r\n        const iId = getInt(id);\r\n        graph = graph.editNode(iId, {label});\r\n        window.main.setData(GraphState.getGraphData(graph), false, false);\r\n    }\r\n\r\n    static editEdge(from: number | string, to: number | string,\r\n                    newWeight: number, oldWeight: number, graph = GraphState.graph) {\r\n        const edgeFrom = getInt(from);\r\n        const edgeTo = getInt(to);\r\n        const newGraph = graph.editEdge(edgeFrom, edgeTo, newWeight, oldWeight);\r\n        if (newGraph instanceof GraphImmut) {\r\n            window.main.setData(GraphState.getGraphData(newGraph), false, false);\r\n        }\r\n    }\r\n\r\n    static deleteEdge(from: number|string, to: number|string, weight: number = null, graph = GraphState.graph) {\r\n        const edgeFrom = getInt(from);\r\n        const edgeTo = getInt(to);\r\n        graph = graph.deleteEdge(edgeFrom, edgeTo, weight, false);\r\n        window.main.setData({\r\n            nodes: GraphState.clearColorFromNodes(graph.getAllNodes() as NodeImmutPlain[]),\r\n            edges: GraphState.clearColorFromEdges(graph.getAllEdges() as EdgeImmutPlain[])\r\n        });\r\n    }\r\n\r\n    static deleteNode(id: number|string, graph = GraphState.graph) {\r\n        const iId = getInt(id);\r\n        const newGraph = graph.deleteNode(iId);\r\n        if (newGraph instanceof GraphImmut) {\r\n            window.main.setData({\r\n                nodes: GraphState.clearColorFromNodes(newGraph.getAllNodes() as NodeImmutPlain[]),\r\n                edges: GraphState.clearColorFromEdges(graph.getAllEdges() as EdgeImmutPlain[])\r\n            });\r\n        }\r\n    }\r\n\r\n    static clearColorFromNodes(nodes: NodeImmutPlain[]): NodeImmutPlain[] {\r\n        nodes.forEach((v) => {\r\n            v.color = null;\r\n        });\r\n        return nodes;\r\n    }\r\n\r\n    static clearColorFromEdges(edges: EdgeImmutPlain[]): EdgeImmutPlain[] {\r\n        edges.forEach((v) => {\r\n            delete v.color;\r\n        });\r\n        return edges;\r\n    }\r\n\r\n    static nodeIDToLabel(id: number, graph = GraphState.graph): string {\r\n        const n = graph.getNode(id, true);\r\n        if (n !== false && n !== null && n instanceof NodeImmut && n.getLabel().trim().length > 0) {\r\n            return n.getLabel().trim();\r\n        }\r\n\r\n        return id.toString();\r\n    }\r\n\r\n    // Preferentially search by ID, label, and case-insensitive label\r\n    static nodeLabelToID(label: string, graph = GraphState.graph) {\r\n        let n = graph.getAllNodes(true) as NodeImmut[];\r\n        n = n.filter((node) => {\r\n            return node.getLabel().toLowerCase() === label.toLowerCase() || node.getID().toString() === label;\r\n        });\r\n\r\n        if (n.length === 0) {\r\n            return -1;\r\n        }\r\n        else if (n.length === 1) {\r\n            return n[0].getID();\r\n        }\r\n\r\n        let rID = -1;\r\n        let found = false;\r\n\r\n        n.forEach((node) => {\r\n            if (!found && node.getID().toString() === label) {\r\n                rID = node.getID();\r\n                found = true;\r\n            }\r\n        });\r\n\r\n        if (found) {\r\n            return rID;\r\n        }\r\n\r\n        n.forEach((node) => {\r\n            if (!found && node.getLabel() === label) {\r\n                rID = node.getID();\r\n                found = true;\r\n            }\r\n        });\r\n\r\n        if (found) {\r\n            return rID;\r\n        }\r\n\r\n        n.forEach((node) => {\r\n            if (!found && node.getLabel().toLowerCase() === label.toLowerCase()) {\r\n                rID = node.getID();\r\n                found = true;\r\n            }\r\n        });\r\n\r\n        return rID;\r\n    }\r\n\r\n    // Return graph as a Vis compatible dataset\r\n    static getGraphAsDataSet(graph: GraphImmut): { nodes: DataSet<vis.Node>; edges: DataSet<vis.Edge> } {\r\n        const d = GraphState.getGraphData(graph);\r\n        if (graph.isWeighted()) {\r\n            d.edges.forEach((e) => {\r\n                e.label = e.weight.toString();\r\n            });\r\n        }\r\n        d.edges.forEach((e) => {\r\n            if('color' in e) {\r\n                e.color = {color: e.color};\r\n            }\r\n        });\r\n\r\n        return {nodes: new DataSet(d.nodes as vis.Node[]), edges: new DataSet(d.edges as vis.Edge[])};\r\n    }\r\n\r\n    static setLocations(locations: {[key: string]: {x: number; y: number}}, graph = GraphState.graph): GraphImmut {\r\n        let newNodes = graph.getAllNodesAsImmutableList();\r\n        Object.keys(locations).forEach((i) => {\r\n            const v = locations[i];\r\n            const node = newNodes.get(parseInt(i));\r\n            // Only change when there is actually a new position\r\n            if (node.getAttribute(\"x\") !== v.x || node.getAttribute(\"y\") !== v.y) {\r\n                // Batch up all changes that we'll be making\r\n                newNodes = newNodes.set(parseInt(i), node.editNode(node.getLabel(), {x: v.x, y: v.y}));\r\n            }\r\n        });\r\n\r\n        return new GraphImmut(newNodes, graph.getAllEdgesAsImmutableList(), graph.isDirected(), graph.isWeighted());\r\n    }\r\n\r\n    static getGraphData(graph = GraphState.graph, clearNodeColors = false, clearEdgeColors = false): GraphPlain {\r\n        const nodes = graph.getAllNodes() as NodeImmutPlain[];\r\n        const edges = graph.getAllEdges() as EdgeImmutPlain[];\r\n        return {\r\n            nodes: clearNodeColors ? GraphState.clearColorFromNodes(nodes) : nodes,\r\n            edges: clearEdgeColors ? GraphState.clearColorFromEdges(edges) : edges,\r\n            directed: graph.isDirected(),\r\n            weighted: graph.isWeighted()\r\n        };\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nimport genericH from './util/genericHelpers';\r\nimport graphH from './util/graphHelpers';\r\nimport SpanningTree from './classes/SpanningTree';\r\nimport EdgeImmut from \"./classes/GraphImmut/EdgeImmut\";\r\nimport NodeImmut from \"./classes/GraphImmut/NodeImmut\";\r\nimport GraphImmut from \"./classes/GraphImmut/GraphImmut\";\r\nimport GraphState from \"./graphState\";\r\nimport {GraphPlain} from \"./util/predefinedGraphs\";\r\n\r\ntype EdgeFlowProp = { from: number; to: number; capacity: number; flow: number };\r\nexport type MSTResult = { mst: EdgeImmut[]; totalWeight: number };\r\nexport type FlowResult = { maxFlow: number; flowPath: EdgeFlowProp[] };\r\nexport type ShortestPathResult = { pathExists: boolean; path: number[]; distance: number; cost?: number; weight?: number };\r\nexport type ConnectedComponentResult = { components: { [key: number]: number }; count: number };\r\n\r\nexport default class GraphAlgorithms {\r\n    public static graphPlainToGraphImmut = (gp: GraphPlain): GraphImmut => {\r\n        return new GraphImmut(gp.nodes, gp.edges, gp.directed, gp.weighted);\r\n    };\r\n\r\n    // Welsh-Powell Algorithm\r\n    public static colorNetwork = (G: GraphImmut = GraphState.graph): { colors: {}; chromaticNumber: number } => {\r\n        // Get node ID's only\r\n        const nodeArr: number[] = genericH.datasetToArray(G.getAllNodes(), \"id\") as number[];\r\n\r\n        // Put vertices in array in decreasing order of degree\r\n        const degrees = G.getAllOutDegrees();\r\n        const vertexOrder = genericH.sort(nodeArr, (a, b) => {\r\n            return degrees[a] < degrees[b] ? 1 : degrees[a] === degrees[b] ? 0 : -1;\r\n        });\r\n\r\n        const colorIndex: { [key: number]: number } = {};\r\n        let currentColor = 0;\r\n        while (vertexOrder.length > 0) {\r\n            const root = vertexOrder.shift();\r\n            colorIndex[root] = currentColor;\r\n\r\n            const myGroup = [];\r\n            myGroup.push(root);\r\n\r\n            for (let i = 0; i < vertexOrder.length;) {\r\n                const p = vertexOrder[i];\r\n                let conflict = false;\r\n\r\n                for (let j = 0; j < myGroup.length; j++) {\r\n                    if (G.areAdjacent(p, myGroup[j])) {\r\n                        i++;\r\n                        conflict = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (conflict) {\r\n                    continue;\r\n                }\r\n\r\n                colorIndex[p] = currentColor;\r\n                myGroup.push(p);\r\n                vertexOrder.splice(i, 1);\r\n            }\r\n\r\n            currentColor++;\r\n        }\r\n\r\n        const chromaticNumber = genericH.max(genericH.flatten(colorIndex) as any[]) + 1;\r\n        return {colors: colorIndex, chromaticNumber};\r\n    };\r\n\r\n    public static connectedComponents = (G: GraphImmut = GraphState.graph): ConnectedComponentResult => {\r\n        const components: { [key: number]: number } = {};\r\n        let componentCount = 0;\r\n        const setComponentNum = (v: number) => {\r\n            components[v] = componentCount;\r\n        };\r\n        for (let i = 0; i < G.getNumberOfNodes(); i++) {\r\n            if (!(i in components)) {\r\n                const visited = GraphAlgorithms.depthFirstSearch(i, G);\r\n                visited.forEach(setComponentNum);\r\n                componentCount++;\r\n            }\r\n        }\r\n\r\n        return {components, count: componentCount};\r\n    };\r\n\r\n    public static depthFirstSearch = (start: number, G = GraphState.graph): number[] => {\r\n        const visisted: number[] = [];\r\n        const Stack: number[] = [];\r\n        Stack.push(start);\r\n        while (Stack.length > 0) {\r\n            const v = Stack.pop();\r\n            if (!visisted.includes(v)) {\r\n                visisted.push(v);\r\n                G.getNodeAdjacency(v).forEach((nodeID) => {\r\n                    Stack.push(nodeID);\r\n                });\r\n            }\r\n        }\r\n\r\n        return visisted;\r\n    };\r\n\r\n    // Tarjan's algorithm\r\n    public static stronglyConnectedComponents = (G: GraphImmut = GraphState.graph): ConnectedComponentResult => {\r\n        let index = 0;\r\n        const indices: { [key: number]: number } = {};\r\n        const lowlink: { [key: number]: number } = {};\r\n        const S: number[] = [];\r\n        const components: { [key: number]: number } = {};\r\n        let componentCount = 0;\r\n\r\n        const strongConnect = (v: number) => {\r\n            indices[v] = index;\r\n            lowlink[v] = index++;\r\n            S.push(v);\r\n\r\n            G.getNodeAdjacency(v).forEach((w) => {\r\n                if (!(w in indices)) {\r\n                    strongConnect(w);\r\n                    lowlink[v] = Math.min(lowlink[v], lowlink[w]);\r\n                }\r\n                else if (S.includes(w)) {\r\n                    lowlink[v] = Math.min(lowlink[v], indices[w]);\r\n                }\r\n            });\r\n\r\n            if (lowlink[v] === indices[v]) {\r\n                let w = -1;\r\n                if (S.length > 0) {\r\n                    do {\r\n                        w = S.pop();\r\n                        components[w] = componentCount;\r\n                    }\r\n                    while (w !== v);\r\n                    componentCount++;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let i = 0; i < G.getNumberOfNodes(); i++) {\r\n            if (!(i in indices)) {\r\n                strongConnect(i);\r\n            }\r\n        }\r\n\r\n        return {components, count: componentCount};\r\n    };\r\n\r\n    public static breadthFirstSearch = (startNodeID: number, targetNodeID: number,\r\n                                        G: GraphImmut = GraphState.graph): ShortestPathResult => {\r\n        // Perform the BFS\r\n        const visisted: number[] = [];\r\n        const Q: number[] = []; // Use Push and Shift for Queue operations\r\n        const edgeTo: { [key: number]: number } = {};\r\n\r\n        Q.push(startNodeID);\r\n        while (Q.length > 0) {\r\n            const x = Q.shift();\r\n            if (!visisted.includes(x)) {\r\n                visisted.push(x);\r\n                G.getNodeAdjacency(x).forEach((y) => {\r\n                    if (!visisted.includes(y)) {\r\n                        edgeTo[y] = x;\r\n                        Q.push(y);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (visisted.includes(targetNodeID)) {\r\n            // Build the path\r\n            const path = [];\r\n            for (let x = targetNodeID; x !== startNodeID; x = edgeTo[x]) {\r\n                path.push(x);\r\n            }\r\n            path.push(startNodeID);\r\n            path.reverse();\r\n\r\n            // Get the path weight\r\n            let weight = 0;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                weight += G.getMinWeightEdgeBetween(path[i], path[i + 1]);\r\n            }\r\n\r\n            return {pathExists: true, path, distance: path.length, weight};\r\n        }\r\n\r\n        return {pathExists: false, path: [], distance: -1, weight: -1};\r\n    };\r\n\r\n    public static dijkstraSearch = (startNodeID: number, targetNodeID: number, G: GraphImmut = GraphState.graph): (ShortestPathResult | boolean) => {\r\n        if (!G.isDirected()) {\r\n            G = G.asDirected(true);\r\n        }\r\n        if (!G.isWeighted()) {\r\n            G = G.asWeighted();\r\n        }\r\n\r\n        const nonNegative = (G.getAllEdges(true) as EdgeImmut[]).find((edge) => {\r\n            return edge.getWeight() < 0;\r\n        });\r\n        if (typeof nonNegative !== \"undefined\") {\r\n            return false;\r\n        }\r\n\r\n        // Priority Queue implementation for Dijkstra\r\n        class PriorityQueue {\r\n            private readonly _nodes: { key: number | string; priority: number }[] = [];\r\n\r\n            enqueue(priority: number, key: number): void {\r\n                this._nodes.push({key, priority});\r\n                this.sort();\r\n            }\r\n\r\n            dequeue(): number | string {\r\n                return this._nodes.shift().key;\r\n            }\r\n\r\n            sort(): void {\r\n                this._nodes.sort((a: { priority: number }, b: { priority: number }) => {\r\n                    return a.priority - b.priority;\r\n                });\r\n            }\r\n\r\n            isEmpty(): boolean {\r\n                return !this._nodes.length;\r\n            }\r\n        }\r\n\r\n        const queue = new PriorityQueue();\r\n        const distances: { [key: number]: number } = {};\r\n        const previous: { [key: number]: number } = {};\r\n        let path = [];\r\n\r\n        // Initialize Queue and distances\r\n        (G.getAllNodes(true) as NodeImmut[]).forEach((node) => {\r\n            let dist = Infinity;\r\n            if (node.getID() === startNodeID) {\r\n                dist = 0;\r\n            }\r\n\r\n            distances[node.getID()] = dist;\r\n            queue.enqueue(dist, node.getID());\r\n            previous[node.getID()] = null;\r\n        });\r\n\r\n        while (!queue.isEmpty()) {\r\n            let smallest = queue.dequeue() as number;\r\n\r\n            if (smallest === targetNodeID) {\r\n                path = [];\r\n                while (previous[smallest] !== null) {\r\n                    path.push(smallest);\r\n                    smallest = previous[smallest];\r\n                }\r\n                break;\r\n            }\r\n\r\n            if (distances[smallest] === Infinity) {\r\n                continue;\r\n            }\r\n\r\n            G.getNodeAdjacency(smallest).forEach((neighbor) => {\r\n                const alt = distances[smallest] + G.getMinWeightEdgeBetween(smallest, neighbor);\r\n\r\n                if (alt < distances[neighbor]) {\r\n                    distances[neighbor] = alt;\r\n                    previous[neighbor] = smallest;\r\n\r\n                    queue.enqueue(alt, neighbor);\r\n                }\r\n            });\r\n        }\r\n\r\n        path.push(startNodeID);\r\n        path.reverse();\r\n\r\n        if (distances[targetNodeID] !== Infinity) {\r\n            return {pathExists: true, path, distance: path.length, cost: distances[targetNodeID]};\r\n        }\r\n\r\n\r\n        return {pathExists: false, path: [], distance: -1, cost: 0};\r\n    };\r\n\r\n    public static bellmanFord = (startNodeID: number, targetNodeID: number, G: GraphImmut = GraphState.graph): (ShortestPathResult | boolean) => {\r\n        const distances: number[] = [];\r\n        const parents: number[] = [];\r\n\r\n        // Initialize\r\n        (G.getAllNodes(true) as NodeImmut[]).forEach((node) => {\r\n            distances[node.getID()] = Infinity;\r\n            parents[node.getID()] = null;\r\n        });\r\n\r\n        // Relax Edges\r\n        distances[startNodeID] = 0;\r\n        for (let i = 0; i < G.getNumberOfNodes() - 1; i++) {\r\n            (G.getAllEdges(true) as EdgeImmut[]).forEach((edge) => {\r\n                if (distances[edge.getFrom()] + edge.getWeight() < distances[edge.getTo()]) {\r\n                    distances[edge.getTo()] = distances[edge.getFrom()] + edge.getWeight();\r\n                    parents[edge.getTo()] = edge.getFrom();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Check for negative weight cycles\r\n        let negativeCylce = false;\r\n        (G.getAllEdges(true) as EdgeImmut[]).forEach((edge) => {\r\n            if (distances[edge.getFrom()] + edge.getWeight() < distances[edge.getTo()]) {\r\n                negativeCylce = true;\r\n            }\r\n        });\r\n\r\n        if (distances[targetNodeID] !== Infinity) {\r\n            const path: number[] = [targetNodeID];\r\n            while (!path.includes(startNodeID)) {\r\n                path.push(parents[path.slice().pop()]);\r\n            }\r\n            path.reverse();\r\n\r\n            return {pathExists: true, path, distance: path.length, cost: distances[targetNodeID]};\r\n        }\r\n\r\n        if (negativeCylce) {\r\n            return false;\r\n        }\r\n\r\n        return {pathExists: false, path: [], distance: -1, cost: 0};\r\n    };\r\n\r\n    public static fordFulkerson = (startNodeID: number, targetNodeID: number, G: GraphImmut = GraphState.graph): (boolean | FlowResult) => {\r\n        // Must be a directed graph\r\n        if (!G.isDirected()) {\r\n            return false;\r\n        }\r\n\r\n        // Source == sink\r\n        if (startNodeID === targetNodeID) {\r\n            return false;\r\n        }\r\n\r\n        const bfs = GraphAlgorithms.breadthFirstSearch(startNodeID, targetNodeID, G);\r\n        // No path from source to sink\r\n        if (!bfs.pathExists) {\r\n            return false;\r\n        }\r\n\r\n        // If we have a multigraph, then reduce the graph to have single edges with the sum of the capacities\r\n        G = G.reduceMultiGraph((a, b) => {\r\n            return a + b;\r\n        }, 0);\r\n\r\n        const V = G.getNumberOfNodes();\r\n        let value = 0;\r\n        let marked: boolean[] = [];\r\n        let edgeTo: string[] = [];\r\n\r\n        const edgeProperties: { [key: string]: EdgeFlowProp } = {};\r\n        (G.getAllEdges(true) as EdgeImmut[]).forEach((edge) => {\r\n            edgeProperties[`${edge.getFrom()}_${edge.getTo()}`] = {\r\n                from: edge.getFrom(),\r\n                to: edge.getTo(),\r\n                capacity: edge.getWeight(),\r\n                flow: 0\r\n            };\r\n        });\r\n\r\n        const other = (e: string, x: number) => {\r\n            const edge = e.split(\"_\");\r\n            const a = parseInt(edge[0]);\r\n            const b = parseInt(edge[1]);\r\n            return x === a ? b : a;\r\n        };\r\n\r\n        const residualCapacity = (e: string, x: number) => {\r\n            const edge = e.split(\"_\");\r\n            const a = parseInt(edge[0]);\r\n            if (x === a) {\r\n                return edgeProperties[e].flow;\r\n            }\r\n            return edgeProperties[e].capacity - edgeProperties[e].flow;\r\n        };\r\n\r\n        const addResidualFlow = (e: string, x: number, deltaFlow: number) => {\r\n            const edge = e.split(\"_\");\r\n            const v = parseInt(edge[0]);\r\n            if (x === v) {\r\n                edgeProperties[e].flow -= deltaFlow;\r\n            }\r\n            else {\r\n                edgeProperties[e].flow += deltaFlow;\r\n            }\r\n        };\r\n\r\n        const hasAugmentedPath = () => {\r\n            marked = [];\r\n            edgeTo = [];\r\n            for (let v = 0; v < V; ++v) {\r\n                marked.push(false);\r\n                edgeTo.push(null);\r\n            }\r\n\r\n            const queue = [];\r\n            queue.push(startNodeID);\r\n\r\n            marked[startNodeID] = true;\r\n            while (queue.length > 0) {\r\n                const v = queue.shift();\r\n                const vertexAdjacency = G.getNodeAdjacency(v);\r\n                for (const i of vertexAdjacency) {\r\n                    const e = `${v}_${i}`;\r\n                    const w = other(e, v);\r\n                    if (!marked[w] && residualCapacity(e, w) > 0) {\r\n                        edgeTo[w] = e;\r\n                        marked[w] = true;\r\n                        if (w === targetNodeID) {\r\n                            return true;\r\n                        }\r\n\r\n                        queue.push(w);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        while (hasAugmentedPath()) {\r\n            let bottleneckValue = Infinity;\r\n            for (let x = targetNodeID; x !== startNodeID; x = other(edgeTo[x], x)) {\r\n                bottleneckValue = Math.min(bottleneckValue, residualCapacity(edgeTo[x], x));\r\n            }\r\n            for (let x = targetNodeID; x !== startNodeID; x = other(edgeTo[x], x)) {\r\n                addResidualFlow(edgeTo[x], x, bottleneckValue);\r\n            }\r\n            value += bottleneckValue;\r\n        }\r\n\r\n        const getFlows = (): EdgeFlowProp[] => {\r\n            const f: EdgeFlowProp[] = [];\r\n            for (let v = 0; v < V; v++) {\r\n                const vertexAdjacency = G.getNodeAdjacency(v);\r\n                for (const i of vertexAdjacency) {\r\n                    const e = `${v}_${i}`;\r\n                    if (edgeProperties[e].flow > 0) {\r\n                        f.push(edgeProperties[e]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return f;\r\n        };\r\n\r\n        return {maxFlow: value, flowPath: getFlows()};\r\n    };\r\n\r\n    public static kruskal = (G: GraphImmut = GraphState.graph): MSTResult => {\r\n        // If we have a multigraph, reduce it by using the minimum edge weights\r\n        G.reduceMultiGraph();\r\n\r\n        const Q: EdgeImmut[] = G.getAllEdges(true) as EdgeImmut[];\r\n\r\n        // Sort edges by weight so that they are added to the tree in the order of lowest possible weight\r\n        Q.sort((a, b) => {\r\n            return a.getWeight() - b.getWeight();\r\n        });\r\n\r\n        const kruskal: EdgeImmut[] = [];\r\n        const set = new SpanningTree(G.getNumberOfNodes());\r\n        while (Q.length > 0 && kruskal.length < G.getNumberOfNodes() - 1) {\r\n            const e = Q.shift();\r\n            if (!set.connected(e.getFrom(), e.getTo())) {\r\n                set.union(e.getFrom(), e.getTo());\r\n                kruskal.push(e);\r\n            }\r\n        }\r\n\r\n        // Get the total cost of the MST\r\n        const weight = kruskal.reduce((acc, e) => {\r\n            return acc + e.getWeight();\r\n        }, 0);\r\n\r\n        return {mst: kruskal, totalWeight: weight};\r\n    };\r\n\r\n    public static topologicalSort = (G: GraphImmut = GraphState.graph): boolean | NodeImmut[] => {\r\n        const adjacency = G.getFullAdjacency();\r\n        const degrees = graphH.findVertexDegreesDirectional(adjacency);\r\n\r\n        const L: NodeImmut[] = [];\r\n        const S: NodeImmut[] = (G.getAllNodes(true) as NodeImmut[]).filter((n) => {\r\n            return degrees[n.getID()].in === 0;\r\n        });\r\n        let edges = G.getAllEdges(true) as EdgeImmut[];\r\n\r\n        while (S.length !== 0) {\r\n            const nodeN = S.pop();\r\n            L.push(nodeN);\r\n\r\n            const nodeNConnectedTo = adjacency[nodeN.getID()];\r\n\r\n            // Remove n to m edges for all nodes m\r\n            edges = edges.filter((edge) => {\r\n                if (edge.getFrom() === nodeN.getID() && nodeNConnectedTo.includes(edge.getTo())) {\r\n                    degrees[edge.getTo()].in--;\r\n                    adjacency[nodeN.getID()] = adjacency[nodeN.getID()].filter((v) => {\r\n                        return v !== edge.getTo();\r\n                    });\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            // If m has no more incoming edges, add it to S\r\n            nodeNConnectedTo.forEach((mID) => {\r\n                if (degrees[mID].in === 0) {\r\n                    S.push(G.getNode(mID, true) as NodeImmut);\r\n                }\r\n            });\r\n        }\r\n\r\n        return edges.length > 0 || L;\r\n    };\r\n\r\n    public static isGraphCyclic = (G: GraphImmut = GraphState.graph): boolean => {\r\n        // If the topological sorting returns true, then it failed, so the graph has a cycle\r\n        return GraphAlgorithms.topologicalSort(G) === true;\r\n    };\r\n\r\n    public static directionalEulerian = (directionalDegrees: { in: number; out: number }[], scc: number[]): boolean => {\r\n        let eulerian = true;\r\n        let component = -1;\r\n        directionalDegrees.forEach((deg, id) => {\r\n            if (deg.in !== deg.out) {\r\n                eulerian = false;\r\n            }\r\n            if (deg.in > 0) {\r\n                if (component === -1) {\r\n                    component = scc[id];\r\n                }\r\n                if (component !== scc[id]) {\r\n                    eulerian = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return eulerian;\r\n    };\r\n\r\n    public static hasEulerianCircuit = (degrees: number[], cc: number[]): boolean => {\r\n        const oddDegree = degrees.filter((v) => {\r\n            return v % 2 !== 0;\r\n        });\r\n\r\n        // If any nodes have odd degree, we can short-circuit the algorithm because it cannot be Eulerian\r\n        if (oddDegree.length !== 0) {\r\n            return false;\r\n        }\r\n\r\n        let eulerian = true;\r\n        let component = -1;\r\n        degrees.forEach((v, i) => {\r\n            if (v !== 0) {\r\n                if (component === -1) {\r\n                    component = cc[i];\r\n                }\r\n                if (component !== cc[i]) {\r\n                    eulerian = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return eulerian;\r\n    };\r\n}\r\n","/**\r\n *  The Floyd–Warshall algorithm is an algorithm for finding shortest paths in\r\n *  a weighted graph with positive or negative edge weights (but with no negative\r\n *  cycles). - https://en.wikipedia.org/wiki/Floyd–Warshall_algorithm\r\n */\r\nclass FloydWarshall {\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} body\r\n   * @param {Array.<Node>} nodesArray\r\n   * @param {Array.<Edge>} edgesArray\r\n   * @returns {{}}\r\n   */\r\n  getDistances(body, nodesArray, edgesArray) {\r\n    let D_matrix = {};\r\n    let edges = body.edges;\r\n\r\n    // prepare matrix with large numbers\r\n    for (let i = 0; i < nodesArray.length; i++) {\r\n      let node = nodesArray[i];\r\n      let cell = {};\r\n      D_matrix[node] = cell;\r\n      for (let j = 0; j < nodesArray.length; j++) {\r\n        cell[nodesArray[j]] = (i == j ? 0 : 1e9);\r\n      }\r\n    }\r\n\r\n    // put the weights for the edges in. This assumes unidirectionality.\r\n    for (let i = 0; i < edgesArray.length; i++) {\r\n      let edge = edges[edgesArray[i]];\r\n      // edge has to be connected if it counts to the distances. If it is connected to inner clusters it will crash so we also check if it is in the D_matrix\r\n      if (edge.connected === true && D_matrix[edge.fromId] !== undefined && D_matrix[edge.toId] !== undefined) {\r\n        D_matrix[edge.fromId][edge.toId] = 1;\r\n        D_matrix[edge.toId][edge.fromId] = 1;\r\n      }\r\n    }\r\n\r\n    let nodeCount = nodesArray.length;\r\n\r\n    // Adapted FloydWarshall based on unidirectionality to greatly reduce complexity.\r\n    for (let k = 0; k < nodeCount; k++) {\r\n      let knode = nodesArray[k];\r\n      let kcolm = D_matrix[knode];\r\n      for (let i = 0; i < nodeCount - 1; i++) {\r\n        let inode = nodesArray[i];\r\n        let icolm = D_matrix[inode];\r\n        for (let j = i + 1; j < nodeCount; j++) {\r\n          let jnode = nodesArray[j];\r\n          let jcolm = D_matrix[jnode];\r\n\r\n          let val = Math.min(icolm[jnode], icolm[knode] + kcolm[jnode]);\r\n          icolm[jnode] = val;\r\n          jcolm[inode] = val;\r\n        }\r\n      }\r\n    }\r\n\r\n    return D_matrix;\r\n  }\r\n}\r\n\r\nexport default FloydWarshall;","// distance finding algorithm\r\nimport FloydWarshall from \"./components/algorithms/FloydWarshall.js\"\r\n\r\n\r\n/**\r\n * KamadaKawai positions the nodes initially based on\r\n *\r\n * \"AN ALGORITHM FOR DRAWING GENERAL UNDIRECTED GRAPHS\"\r\n * -- Tomihisa KAMADA and Satoru KAWAI in 1989\r\n *\r\n * Possible optimizations in the distance calculation can be implemented.\r\n */\r\nclass KamadaKawai {\r\n  /**\r\n   * @param {Object} body\r\n   * @param {number} edgeLength\r\n   * @param {number} edgeStrength\r\n   */\r\n  constructor(body, edgeLength, edgeStrength) {\r\n    this.body = body;\r\n    this.springLength = edgeLength;\r\n    this.springConstant = edgeStrength;\r\n    this.distanceSolver = new FloydWarshall();\r\n  }\r\n\r\n  /**\r\n   * Not sure if needed but can be used to update the spring length and spring constant\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (options) {\r\n      if (options.springLength) {\r\n        this.springLength = options.springLength;\r\n      }\r\n      if (options.springConstant) {\r\n        this.springConstant = options.springConstant;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Position the system\r\n   * @param {Array.<Node>} nodesArray\r\n   * @param {Array.<vis.Edge>} edgesArray\r\n   * @param {boolean} [ignoreClusters=false]\r\n   */\r\n  solve(nodesArray, edgesArray, ignoreClusters = false) {\r\n    // get distance matrix\r\n    let D_matrix = this.distanceSolver.getDistances(this.body, nodesArray, edgesArray); // distance matrix\r\n\r\n    // get the L Matrix\r\n    this._createL_matrix(D_matrix);\r\n\r\n    // get the K Matrix\r\n    this._createK_matrix(D_matrix);\r\n\r\n    // initial E Matrix\r\n    this._createE_matrix();\r\n\r\n    // calculate positions\r\n    let threshold = 0.01;\r\n    let innerThreshold = 1;\r\n    let iterations = 0;\r\n    let maxIterations = Math.max(1000, Math.min(10 * this.body.nodeIndices.length, 6000));\r\n    let maxInnerIterations = 5;\r\n\r\n    let maxEnergy = 1e9;\r\n    let highE_nodeId = 0, dE_dx = 0, dE_dy = 0, delta_m = 0, subIterations = 0;\r\n\r\n    while (maxEnergy > threshold && iterations < maxIterations) {\r\n      iterations += 1;\r\n      [highE_nodeId, maxEnergy, dE_dx, dE_dy] = this._getHighestEnergyNode(ignoreClusters);\r\n      delta_m = maxEnergy;\r\n      subIterations = 0;\r\n      while (delta_m > innerThreshold && subIterations < maxInnerIterations) {\r\n        subIterations += 1;\r\n        this._moveNode(highE_nodeId, dE_dx, dE_dy);\r\n        [delta_m, dE_dx, dE_dy] = this._getEnergy(highE_nodeId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the node with the highest energy\r\n   * @param {boolean} ignoreClusters\r\n   * @returns {number[]}\r\n   * @private\r\n   */\r\n  _getHighestEnergyNode(ignoreClusters) {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let nodes = this.body.nodes;\r\n    let maxEnergy = 0;\r\n    let maxEnergyNodeId = nodesArray[0];\r\n    let dE_dx_max = 0, dE_dy_max = 0;\r\n\r\n    for (let nodeIdx = 0; nodeIdx < nodesArray.length; nodeIdx++) {\r\n      let m = nodesArray[nodeIdx];\r\n      // by not evaluating nodes with predefined positions we should only move nodes that have no positions.\r\n      if ((nodes[m].predefinedPosition === false || nodes[m].isCluster === true && ignoreClusters === true) || nodes[m].options.fixed.x === true || nodes[m].options.fixed.y === true) {\r\n        let [delta_m,dE_dx,dE_dy] = this._getEnergy(m);\r\n        if (maxEnergy < delta_m) {\r\n          maxEnergy = delta_m;\r\n          maxEnergyNodeId = m;\r\n          dE_dx_max = dE_dx;\r\n          dE_dy_max = dE_dy;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [maxEnergyNodeId, maxEnergy, dE_dx_max, dE_dy_max];\r\n  }\r\n\r\n  /**\r\n   * calculate the energy of a single node\r\n   * @param {Node.id} m\r\n   * @returns {number[]}\r\n   * @private\r\n   */\r\n  _getEnergy(m) {\r\n    let [dE_dx,dE_dy] = this.E_sums[m];\r\n    let delta_m = Math.sqrt(Math.pow(dE_dx, 2) + Math.pow(dE_dy, 2));\r\n    return [delta_m, dE_dx, dE_dy];\r\n  }\r\n\r\n  /**\r\n   * move the node based on it's energy\r\n   * the dx and dy are calculated from the linear system proposed by Kamada and Kawai\r\n   * @param {number} m\r\n   * @param {number} dE_dx\r\n   * @param {number} dE_dy\r\n   * @private\r\n   */\r\n  _moveNode(m, dE_dx, dE_dy) {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let nodes = this.body.nodes;\r\n    let d2E_dx2 = 0;\r\n    let d2E_dxdy = 0;\r\n    let d2E_dy2 = 0;\r\n\r\n    let x_m = nodes[m].x;\r\n    let y_m = nodes[m].y;\r\n    let km = this.K_matrix[m];\r\n    let lm = this.L_matrix[m];\r\n\r\n    for (let iIdx = 0; iIdx < nodesArray.length; iIdx++) {\r\n      let i = nodesArray[iIdx];\r\n      if (i !== m) {\r\n        let x_i = nodes[i].x;\r\n        let y_i = nodes[i].y;\r\n        let kmat = km[i];\r\n        let lmat = lm[i];\r\n        let denominator = 1.0 / Math.pow(Math.pow(x_m - x_i, 2) + Math.pow(y_m - y_i, 2), 1.5);\r\n        d2E_dx2 += kmat * (1 - lmat * Math.pow(y_m - y_i, 2) * denominator);\r\n        d2E_dxdy += kmat * (lmat * (x_m - x_i) * (y_m - y_i) * denominator);\r\n        d2E_dy2 += kmat * (1 - lmat * Math.pow(x_m - x_i, 2) * denominator);\r\n      }\r\n    }\r\n    // make the variable names easier to make the solving of the linear system easier to read\r\n    let A = d2E_dx2, B = d2E_dxdy, C = dE_dx, D = d2E_dy2, E = dE_dy;\r\n\r\n    // solve the linear system for dx and dy\r\n    let dy = (C / A + E / B) / (B / A - D / B);\r\n    let dx = -(B * dy + C) / A;\r\n\r\n    // move the node\r\n    nodes[m].x += dx;\r\n    nodes[m].y += dy;\r\n\r\n    // Recalculate E_matrix (should be incremental)\r\n    this._updateE_matrix(m);\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the L matrix: edge length times shortest path\r\n   * @param {Object} D_matrix\r\n   * @private\r\n   */\r\n  _createL_matrix(D_matrix) {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let edgeLength = this.springLength;\r\n\r\n    this.L_matrix = [];\r\n    for (let i = 0; i < nodesArray.length; i++) {\r\n      this.L_matrix[nodesArray[i]] = {};\r\n      for (let j = 0; j < nodesArray.length; j++) {\r\n        this.L_matrix[nodesArray[i]][nodesArray[j]] = edgeLength * D_matrix[nodesArray[i]][nodesArray[j]];\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Create the K matrix: spring constants times shortest path\r\n   * @param {Object} D_matrix\r\n   * @private\r\n   */\r\n  _createK_matrix(D_matrix) {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let edgeStrength = this.springConstant;\r\n\r\n    this.K_matrix = [];\r\n    for (let i = 0; i < nodesArray.length; i++) {\r\n      this.K_matrix[nodesArray[i]] = {};\r\n      for (let j = 0; j < nodesArray.length; j++) {\r\n        this.K_matrix[nodesArray[i]][nodesArray[j]] = edgeStrength * Math.pow(D_matrix[nodesArray[i]][nodesArray[j]], -2);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Create matrix with all energies between nodes\r\n   *  @private\r\n   */\r\n  _createE_matrix() {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let nodes = this.body.nodes;\r\n    this.E_matrix = {};\r\n    this.E_sums = {};\r\n    for (let mIdx = 0; mIdx < nodesArray.length; mIdx++) {\r\n      this.E_matrix[nodesArray[mIdx]] = [];\r\n    }\r\n    for (let mIdx = 0; mIdx < nodesArray.length; mIdx++) {\r\n      let m = nodesArray[mIdx];\r\n      let x_m = nodes[m].x;\r\n      let y_m = nodes[m].y;\r\n      let dE_dx = 0;\r\n      let dE_dy = 0;\r\n      for (let iIdx = mIdx; iIdx < nodesArray.length; iIdx++) {\r\n        let i = nodesArray[iIdx];\r\n        if (i !== m) {\r\n          let x_i = nodes[i].x;\r\n          let y_i = nodes[i].y;\r\n          let denominator = 1.0 / Math.sqrt(Math.pow(x_m - x_i, 2) + Math.pow(y_m - y_i, 2));\r\n          this.E_matrix[m][iIdx] = [\r\n            this.K_matrix[m][i] * ((x_m - x_i) - this.L_matrix[m][i] * (x_m - x_i) * denominator),\r\n            this.K_matrix[m][i] * ((y_m - y_i) - this.L_matrix[m][i] * (y_m - y_i) * denominator)\r\n          ];\r\n          this.E_matrix[i][mIdx] = this.E_matrix[m][iIdx];\r\n          dE_dx += this.E_matrix[m][iIdx][0];\r\n          dE_dy += this.E_matrix[m][iIdx][1];\r\n        }\r\n      }\r\n      //Store sum\r\n      this.E_sums[m] = [dE_dx, dE_dy];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update method, just doing single column (rows are auto-updated) (update all sums)\r\n   *\r\n   * @param {number} m\r\n   * @private\r\n   */\r\n  _updateE_matrix(m) {\r\n    let nodesArray = this.body.nodeIndices;\r\n    let nodes = this.body.nodes;\r\n    let colm = this.E_matrix[m];\r\n    let kcolm = this.K_matrix[m];\r\n    let lcolm = this.L_matrix[m];\r\n    let x_m = nodes[m].x;\r\n    let y_m = nodes[m].y;\r\n    let dE_dx = 0;\r\n    let dE_dy = 0;\r\n    for (let iIdx = 0; iIdx < nodesArray.length; iIdx++) {\r\n      let i = nodesArray[iIdx];\r\n      if (i !== m) {\r\n        //Keep old energy value for sum modification below\r\n        let cell = colm[iIdx];\r\n        let oldDx = cell[0];\r\n        let oldDy = cell[1];\r\n\r\n        //Calc new energy:\r\n        let x_i = nodes[i].x;\r\n        let y_i = nodes[i].y;\r\n        let denominator = 1.0 / Math.sqrt(Math.pow(x_m - x_i, 2) + Math.pow(y_m - y_i, 2));\r\n        let dx = kcolm[i] * ((x_m - x_i) - lcolm[i] * (x_m - x_i) * denominator);\r\n        let dy = kcolm[i] * ((y_m - y_i) - lcolm[i] * (y_m - y_i) * denominator);\r\n        colm[iIdx] = [dx, dy];\r\n        dE_dx += dx;\r\n        dE_dy += dy;\r\n\r\n        //add new energy to sum of each column\r\n        let sum = this.E_sums[i];\r\n        sum[0] += (dx-oldDx);\r\n        sum[1] += (dy-oldDy);\r\n      }\r\n    }\r\n    //Store sum at -1 index\r\n    this.E_sums[m] = [dE_dx, dE_dy];\r\n  }\r\n}\r\n\r\nexport default KamadaKawai;","import BezierEdgeBase from './BezierEdgeBase'\r\n\r\n/**\r\n * A Base Class for all Cubic Bezier Edges. Bezier curves are used to model\r\n * smooth gradual curves in paths between nodes.\r\n *\r\n * @extends BezierEdgeBase\r\n */\r\nclass CubicBezierEdgeBase extends BezierEdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   * Calculate the distance between a point (x3,y3) and a line segment from\r\n   * (x1,y1) to (x2,y2).\r\n   * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\r\n   * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n   * @param {number} x1 from x\r\n   * @param {number} y1 from y\r\n   * @param {number} x2 to x\r\n   * @param {number} y2 to y\r\n   * @param {number} x3 point to check x\r\n   * @param {number} y3 point to check y\r\n   * @param {Node} via1\r\n   * @param {Node} via2\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via1, via2) { // x3,y3 is the point\r\n    let minDistance = 1e9;\r\n    let distance;\r\n    let i, t, x, y;\r\n    let lastX = x1;\r\n    let lastY = y1;\r\n    let vec = [0,0,0,0]\r\n    for (i = 1; i < 10; i++) {\r\n      t = 0.1 * i;\r\n      vec[0] = Math.pow(1 - t, 3);\r\n      vec[1] = 3 * t * Math.pow(1 - t, 2);\r\n      vec[2] = 3 * Math.pow(t,2) * (1 - t);\r\n      vec[3] = Math.pow(t, 3);\r\n      x = vec[0] * x1 + vec[1] * via1.x + vec[2] * via2.x + vec[3] * x2;\r\n      y = vec[0] * y1 + vec[1] * via1.y + vec[2] * via2.y + vec[3] * y2;\r\n      if (i > 0) {\r\n        distance = this._getDistanceToLine(lastX, lastY, x, y, x3, y3);\r\n        minDistance = distance < minDistance ? distance : minDistance;\r\n      }\r\n      lastX = x;\r\n      lastY = y;\r\n    }\r\n\r\n    return minDistance;\r\n  }\r\n}\r\n\r\nexport default CubicBezierEdgeBase;","import CubicBezierEdgeBase from './util/CubicBezierEdgeBase'\r\n\r\n/**\r\n * A Cubic Bezier Edge. Bezier curves are used to model smooth gradual\r\n * curves in paths between nodes.\r\n *\r\n * @extends CubicBezierEdgeBase\r\n */\r\nclass CubicBezierEdge extends CubicBezierEdgeBase {\r\n  /**\r\n   * @param {Object} options\r\n   * @param {Object} body\r\n   * @param {Label} labelModule\r\n   */\r\n  constructor(options, body, labelModule) {\r\n    super(options, body, labelModule);\r\n  }\r\n\r\n  /**\r\n   * Draw a line between two nodes\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {{toArrow: boolean, toArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), toArrowType: *, middleArrow: boolean, middleArrowScale: (number|allOptions.edges.arrows.middle.scaleFactor|{number}|Array), middleArrowType: (allOptions.edges.arrows.middle.type|{string}|string|*), fromArrow: boolean, fromArrowScale: (allOptions.edges.arrows.to.scaleFactor|{number}|allOptions.edges.arrows.middle.scaleFactor|allOptions.edges.arrows.from.scaleFactor|Array|number), fromArrowType: *, arrowStrikethrough: (*|boolean|allOptions.edges.arrowStrikethrough|{boolean}), color: undefined, inheritsColor: (string|string|string|allOptions.edges.color.inherit|{string, boolean}|Array|*), opacity: *, hidden: *, length: *, shadow: *, shadowColor: *, shadowSize: *, shadowX: *, shadowY: *, dashes: (*|boolean|Array|allOptions.edges.dashes|{boolean, array}), width: *}} values\r\n   * @param {Array.<Node>} viaNodes\r\n   * @private\r\n   */\r\n  _line(ctx, values, viaNodes) {\r\n    // get the coordinates of the support points.\r\n    let via1 = viaNodes[0];\r\n    let via2 = viaNodes[1];\r\n    this._bezierCurve(ctx, values, via1, via2);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Array.<{x: number, y: number}>}\r\n   * @private\r\n   */\r\n  _getViaCoordinates() {\r\n    let dx = this.from.x - this.to.x;\r\n    let dy = this.from.y - this.to.y;\r\n\r\n    let x1, y1, x2, y2;\r\n    let roundness =  this.options.smooth.roundness;\r\n\r\n    // horizontal if x > y or if direction is forced or if direction is horizontal\r\n    if ((Math.abs(dx) > Math.abs(dy) || this.options.smooth.forceDirection === true || this.options.smooth.forceDirection === 'horizontal') && this.options.smooth.forceDirection !== 'vertical') {\r\n      y1 = this.from.y;\r\n      y2 = this.to.y;\r\n      x1 = this.from.x - roundness * dx;\r\n      x2 = this.to.x + roundness * dx;\r\n    }\r\n    else {\r\n      y1 = this.from.y - roundness * dy;\r\n      y2 = this.to.y + roundness * dy;\r\n      x1 = this.from.x;\r\n      x2 = this.to.x;\r\n    }\r\n\r\n    return [{x: x1, y: y1},{x: x2, y: y2}];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Array.<{x: number, y: number}>}\r\n   */\r\n  getViaNode() {\r\n    return this._getViaCoordinates();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Node} nearNode\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @returns {{x: number, y: number, t: number}}\r\n   * @private\r\n   */\r\n  _findBorderPosition(nearNode, ctx) {\r\n    return this._findBorderPositionBezier(nearNode, ctx);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @param {Node} via1\r\n   * @param {Node} via2\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getDistanceToEdge(x1, y1, x2, y2, x3, y3, [via1, via2] = this._getViaCoordinates()) { // x3,y3 is the point\r\n    return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via1, via2);\r\n  }\r\n\r\n  /**\r\n   * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\r\n   * @param {number} percentage\r\n   * @param {{x: number, y: number}} [via1=this._getViaCoordinates()[0]]\r\n   * @param {{x: number, y: number}} [via2=this._getViaCoordinates()[1]]\r\n   * @returns {{x: number, y: number}}\r\n   * @private\r\n   */\r\n  getPoint(percentage, [via1, via2] = this._getViaCoordinates()) {\r\n    let t = percentage;\r\n    let vec = [];\r\n    vec[0] = Math.pow(1 - t, 3);\r\n    vec[1] = 3 * t * Math.pow(1 - t, 2);\r\n    vec[2] = 3 * Math.pow(t,2) * (1 - t);\r\n    vec[3] = Math.pow(t, 3);\r\n    let x = vec[0] * this.fromPoint.x + vec[1] * via1.x + vec[2] * via2.x + vec[3] * this.toPoint.x;\r\n    let y = vec[0] * this.fromPoint.y + vec[1] * via1.y + vec[2] * via2.y + vec[3] * this.toPoint.y;\r\n\r\n    return {x: x, y: y};\r\n  }\r\n}\r\n\r\n\r\nexport default CubicBezierEdge;\r\n"],"sourceRoot":""}