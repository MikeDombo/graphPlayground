(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{108:function(e,t,o){"use strict";o.r(t);var a=o(1),n=o(8),r=o(0),i={importByString:function(e,t){if("json"===t.toLowerCase())try{var o=JSON.parse(e);"nodes"in o&&"edges"in o?(window.network.setData({}),window.main.setData(o,!1,!0,!1)):a.a.showSimpleModal("Data Import Error","<p>The provided input does not conform the the import specifications.</p>")}catch(e){a.a.showSimpleModal("JSON Parse Error","<p>There was an error parsing your input as JSON.</p><pre>"+e+"</pre>")}else if("dimacs"===t.toLowerCase()){var i=null,l=!1;if(e.split(/\r?\n/).forEach(function(e){var t=e.split(/\s+/);if("p"===t[0].toLowerCase()){if("edge"!==t[1].toLowerCase())return a.a.showSimpleModal("DIMACS Parse Error","<p>Sorry, but I only know how to parse &quot;edge&quot; formatted DIMACS files.</p>"),void(l=!0);i=new n.a(parseInt(t[2]))}else"e"===t[0].toLowerCase()&&null!==i&&(i=i.addEdge(parseInt(t[1])-1,parseInt(t[2])-1))}),null!==i||l||(a.a.showSimpleModal("DIMACS Parse Error","<p>No program line found!</p>"),l=!0),!l){var s=r.a.getGraphData(i);s.nodes.forEach(function(e){e.label=e.id.toString()}),window.main.setData(s,!1,!0,!0)}}else a.a.showSimpleModal("Unrecognized Input Format","<p>The format of your input is incorrect.</p>")},makeImportTextModal:function(){a.a.showFormModal(function(e,t){e.modal("hide"),i.importByString(t[0],t[1])},"Import Graph From Text","Import",[{type:"textarea",label:"Input Text",extraAttrs:{style:"height: 20vh; min-height:400px;"}},{type:"select",label:"Format",optionValues:["json","dimacs"],optionText:["JSON","DIMACS"]}])},makeImportFileModal:function(){a.a.showFormModal(function(e,t){e.modal("hide");var o=t[0];if(1===o.length){var n=o[0],r=new FileReader;r.onload=function(e){i.importByString(e.target.result,a.a.getFileExtension(n.name))},r.readAsText(n)}},"Import Graph From File","Import",[{type:"file",label:"Upload File",validationFunc:function(e,t){return t.get(0).files.length>=1||"You must choose a file first"}}])},makeExportFileModal:function(){a.a.showFormModal(null,"Export Graph To File",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){i.exportToFile("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!0},{type:"button",initialValue:"Export to DIMACS",onclick:function(){i.exportToFile("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!0}],null,!1)},makeExportTextModal:function(){a.a.showFormModal(null,"Export Graph To Text",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){i.exportToText("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!1},{type:"button",initialValue:"Export to DIMACS",onclick:function(){i.exportToText("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!1},{type:"textarea",label:"",initialValue:"",extraAttrs:{style:"height: 20vh; min-height:400px; white-space:nowrap; margin-top: 1rem;"},onclick:function(){document.getElementById("exportedText").select(),document.execCommand("copy")},id:"exportedText"}],function(e){e.modal("hide")},!1)},exportToFile:function(e){"json"===e.toLowerCase()?i.downloadFile("graph.json",i.getDataAsJSON()):"dimacs"===e.toLowerCase()&&i.downloadFile("graph.dimacs",i.getDataAsDIMACS())},exportToText:function(e){"json"===e.toLowerCase()?document.getElementById("exportedText").innerHTML=JSON.stringify(JSON.parse(i.getDataAsJSON()),null,2):"dimacs"===e.toLowerCase()&&(document.getElementById("exportedText").innerHTML=i.getDataAsDIMACS())},getDataAsJSON:function(){var e=r.a.getGraphData(r.a.graph);return e.nodes=a.a.keepOnlyKeys(e.nodes,["id","label","color","x","y"]),e.edges=a.a.keepOnlyKeys(e.edges,["from","to","weight","color"]),JSON.stringify(e)},getDataAsDIMACS:function(){var e=r.a.getGraphData(),t="c This Graph was generated and exported from Michael Dombrowski's Graph Playground -- https://md100play.github.io/graphPlayground -- https://mikedombrowski.com\n",o=r.a.graph.getFullAdjacency(),a=[];(o=o.filter(function(e){return 0!==e.length})).forEach(function(e,t){-1===a.indexOf(t+1)&&a.push(t+1),e.forEach(function(e){-1===a.indexOf(e+1)&&a.push(e+1)})});var n=0,i="";return e.edges.forEach(function(e){i+="e "+(e.from+1)+" "+(e.to+1)+"\n",n++}),i=i.trim(),(t+="p edge "+a.length+" "+n+"\n")+i},downloadFile:function(e,t){var o=new Blob([t],{type:"text/plain"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(o,e);else{var a=window.document.createElement("a");a.href=window.URL.createObjectURL(o),a.download=e,document.body.appendChild(a),a.click(),document.body.removeChild(a),window.URL.revokeObjectURL(o)}}};t.default=i}}]);
//# sourceMappingURL=1-91e1b9b349745971e2e9.min.js.map