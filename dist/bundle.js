!function(e){function t(t){for(var o,r,l=t[0],d=t[1],u=t[2],c=0,f=[];c<l.length;c++)r=l[c],a[r]&&f.push(a[r][0]),a[r]=0;for(o in d)Object.prototype.hasOwnProperty.call(d,o)&&(e[o]=d[o]);for(s&&s(t);f.length;)f.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],o=!0,l=1;l<n.length;l++){var d=n[l];0!==a[d]&&(o=!1)}o&&(i.splice(t--,1),e=r(r.s=n[0]))}return e}var o={},a={2:0},i=[];function r(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=o,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="";var l=window.webpackJsonp=window.webpackJsonp||[],d=l.push.bind(l);l.push=t,l=l.slice();for(var u=0;u<l.length;u++)t(l[u]);var s=d;i.push([112,0]),n()}({112:function(e,t,n){"use strict";n(111);var o=u(n(109)),a=n(35),i=u(n(50)),r=u(n(44)),l=u(n(16)),d=u(n(43));function u(e){return e&&e.__esModule?e:{default:e}}window.main=i.default,window.predefined=r.default,window.network=new a.Network(i.default.container,{},i.default.visOptions),window.settings=l.default,window.ui=d.default,o.default.config("https://355bd6aa42eb41b99a31fffc8cced0ba@sentry.io/487861").install(),window.Raven=o.default,i.default.addNetworkListeners(window.network),l.default.loadSettings();var s=!0;if(l.default.checkForLocalStorage()){var c=localStorage.getItem("graphPlayground.lastState");null!==c&&"nodes"in(c=JSON.parse(c)).graph&&(s=!1,i.default.applyState(!1,c))}s&&i.default.setData(r.default.Petersen(),!1,!0,!0),"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("pwaPacked.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)}).catch(function(e){console.log("ServiceWorker registration failed: ",e)})}),window.ui.registerListeners()},14:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={findVertexDegreesDirectional:function(e){var t=[];return e.forEach(function(e,n){n in t?t[n].out+=e.length:t[n]={out:e.length,in:0},e.forEach(function(e){e in t?t[e].in+=1:t[e]={in:1,out:0}})}),t},interpolateNodesFromEdges:function(e){var t=[];return e.forEach(function(e){t[e.from]={id:e.from,label:""+e.from},t[e.to]={id:e.to,label:""+e.to}}),t}}},15:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),a=n(47),i=l(n(46)),r=l(n(45));function l(e){return e&&e.__esModule?e:{default:e}}var d=function(e){return Object.keys(e).filter(function(e){return!["label","id"].includes(e)}).reduce(function(t,n){return t[n]=e[n],t},{})},u=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=this,l=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nodes=new a.List,this.edges=new a.List,this.numEdges=0,this.directed=Object.freeze(l),this.weighted=Object.freeze(u),"number"==typeof t){this.numNodes=Object.freeze(t);for(var s=0;s<this.numNodes;s++)this.nodes=this.nodes.set(s,new i.default(s))}else{var c=0;t.forEach(function(e){var t=c++,n=null,a=null;e instanceof i.default?(n=e.getLabel(),a=e.getAllAttributes()):("label"in e&&(n=e.label),a=d("attributes"in e?e.attributes:e)),o.nodes=o.nodes.set(t,new i.default(t,n,a))}),this.numNodes=Object.freeze(c)}null!==n&&(this.numEdges=n instanceof a.List?n.size:n.length,n.forEach(function(e){if(e instanceof r.default)o.edges=o.edges.push(e);else{var t=0,n=0,a=0;"weight"in e&&o.weighted&&(t=parseFloat(e.weight)),"from"in e&&(n=e.from),"to"in e&&(a=e.to),o.edges=o.edges.push(new r.default(n,a,t))}})),this.numEdges=Object.freeze(this.numEdges),new.target===e&&Object.freeze(this)}return o(e,[{key:"getNode",value:function(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this.nodes.get(e):this.nodes.get(e).toPlain()}},{key:"addNode",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;null===t&&(t={});var n=this.numNodes;"label"in t||(t.label=n.toString());var o=d(t);return new e(this.nodes.set(n,new i.default(n,t.label,o)),this.edges,this.directed,this.weighted)}},{key:"editNode",value:function(t,n){if(!this.nodes.has(t))return!1;var o=d(n);return"label"in n||(n.label=this.getNode(t,!0).getLabel()),new e(this.nodes.set(t,this.getNode(t,!0).editNode(n.label,o)),this.edges,this.directed,this.weighted)}},{key:"deleteNode",value:function(t){if(!(t>=0&&t<this.numNodes))return!1;var n={},o=0;return new e(this.nodes.filter(function(e){return e.getID()===t?n[e.getID()]=-1:n[e.getID()]=o++,e.getID()!==t}).map(function(e){var t=e.getLabel();return e.getID().toString()===t&&(t=n[e.getID()].toString()),new i.default(n[e.getID()],t,e.getAllAttributes())}),this.edges.filter(function(e){return!(e.getFrom()===t||e.getTo()===t)}).map(function(e){return new r.default(n[e.getFrom()],n[e.getTo()],e.getWeight())}),this.directed,this.weighted)}},{key:"addEdge",value:function(t,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.weighted||(o=1);var a=this.edges.push(new r.default(t,n,parseFloat(o)));return new e(this.nodes,a,this.directed,this.weighted)}},{key:"deleteEdge",value:function(t,n){var o=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];null!==a&&(a=parseFloat(a));var r=!1,l=this.edges.filter(function(e){return!(!r||i)||((e.getFrom()!==t||e.getTo()!==n||null!==a&&e.getWeight()!==a)&&!!(o.directed||e.getFrom()!==n||e.getTo()!==t||null!==a&&e.getWeight()!==a)||(r=!0,!1))});return new e(this.nodes,l,this.directed,this.weighted)}},{key:"editEdge",value:function(t,n,o){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(!this.weighted)return!1;var i=!1;null!==a&&(a=parseFloat(a));var r=this.edges;return this.edges.forEach(function(e,l){i||e.getFrom()!==t||e.getTo()!==n||null!==a&&e.getWeight()!==a||(r=r.set(l,e.editEdge(parseFloat(o))),i=!0)}),new e(this.nodes,r,this.directed,this.weighted)}},{key:"getAllNodes",value:function(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.nodes.toArray():this.nodes.map(function(e){return e.toPlain()}).toArray()}},{key:"getAllEdges",value:function(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.edges.toArray():this.edges.map(function(e){return e.toPlain()}).toArray()}},{key:"getNumberOfNodes",value:function(){return this.numNodes}},{key:"getNumberOfEdges",value:function(){return this.numEdges}},{key:"getAllOutDegrees",value:function(){var e=[];return this.edges.forEach(function(t){t.getFrom()in e?e[t.getFrom()]++:e[t.getFrom()]=1}),e}},{key:"convertToWeighted",value:function(){return new e(this.nodes,this.edges.map(function(e){return e.editEdge(1)}),this.directed,!0)}},{key:"convertToUnWeighted",value:function(){return new e(this.nodes,this.edges.map(function(e){return e.editEdge(1)}),this.directed,!1)}},{key:"convertToDirected",value:function(){if(!(arguments.length>0&&void 0!==arguments[0]&&arguments[0]))return new e(this.nodes,this.edges,!0,this.weighted);var t=this.edges;return this.edges.forEach(function(e){t=t.push(new r.default(e.getTo(),e.getFrom(),e.getWeight()))}),new e(this.nodes,t,!0,this.weighted)}},{key:"getGraphAsUndirected",value:function(){var t=[],n={};return this.edges.forEach(function(e){var o=e.getFrom(),a=e.getTo();a>o&&(o=a,a=e.getFrom()),o+"_"+a in n||(n[o+"_"+a]=null,t.push(new r.default(o,a,e.getWeight())))}),new e(this.nodes,t,!1,this.weighted)}},{key:"getNodeAdjacency",value:function(e){var t=this,n=[];return this.edges.forEach(function(o){o.getFrom()===e?n.push(o.getTo()):t.directed||o.getTo()!==e||n.push(o.getFrom())}),n}},{key:"getFullAdjacency",value:function(){var e=this,t=[];return this.nodes.forEach(function(n){t[n.getID()]=e.getNodeAdjacency(n.getID())}),t}},{key:"areAdjacent",value:function(e,t){return this.getNodeAdjacency(e).includes(t)}},{key:"getEdgesBetween",value:function(e,t){var n=this,o=[];return this.edges.forEach(function(a){n.directed||a.getFrom()!==t||a.getTo()!==e||o.push(a),a.getFrom()===e&&a.getTo()===t&&o.push(a)}),o}},{key:"getMinWeightEdgeBetween",value:function(e,t){var n=1/0;return this.getEdgesBetween(e,t).forEach(function(e){e.getWeight()<n&&(n=e.getWeight())}),n}},{key:"reduceMultiGraph",value:function(t,n){var o=this;void 0===n&&(n=0);var a=[];this.nodes.forEach(function(e){var i=o.getNodeAdjacency(e.getID()),r=new Set(i);r.size<i.length&&r.forEach(function(i){var r=o.getEdgesBetween(e.getID(),i).reduce(function(e,n){return t(e,n.getWeight())},n);a.push({from:e.getID(),to:i,weight:parseFloat(r)})})});var i=this.edges.filter(function(e){var t=!0;return a.forEach(function(n){e.getFrom()===n.from&&e.getTo()===n.to&&(t=!1)}),t});return a.forEach(function(e){i=i.push(new r.default(e.from,e.to,e.weight))}),new e(this.nodes,i,this.directed,this.weighted)}},{key:"isWeighted",value:function(){return this.weighted}},{key:"isDirected",value:function(){return this.directed}}]),e}();t.default=u},16:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={defaults:{nodePhysics:!0,direction:!1,weights:!1},current:{},checkForLocalStorage:function(){try{var e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}},saveSettings:function(){o.checkForLocalStorage()&&localStorage.setItem("graphPlayground.settings",JSON.stringify(o.current))},loadSettings:function(){o.checkForLocalStorage()&&(o.current=JSON.parse(localStorage.getItem("graphPlayground.settings"))),null===o.current&&(o.current={}),o.setAll()},setAll:function(){window.network.setOptions({nodes:{physics:o.getOption("nodePhysics")}}),window.network.setOptions({edges:{arrows:{to:o.getOption("direction")}}}),o.getOption("weights")?window.network.setOptions({manipulation:{editEdge:{editWithoutDrag:window.main.visWeightEdgeEdit}}}):window.network.setOptions({manipulation:{editEdge:window.main.visOptions.manipulation.editEdge}})},changeOption:function(e,t){o.current[e]=t,o.saveSettings(),o.setAll()},getOption:function(e){return e in o.current?o.current[e]:o.defaults[e]},resetToDefault:function(){o.current={},o.saveSettings(),o.setAll();var e=window.main.graphState.dataSetToGraph(window.main.graphState.graph.getAllNodes(),window.main.graphState.graph.getAllNodes(),o.defaults.direction,o.defaults.weights);window.main.setData(window.main.graphState.getGraphData(e))}};t.default=o},3:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=n(6),r=(o=i)&&o.__esModule?o:{default:o};var l={deepFreeze:function(e){return Object.freeze(e),Object.getOwnPropertyNames(e).forEach(function(t){!e.hasOwnProperty(t)||null===e[t]||"object"!==a(e[t])&&"function"!=typeof e[t]||Object.isFrozen(e[t])||l.deepFreeze(e[t])}),e},sort:function(e,t){return[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e)).sort(t)},datasetToArray:function(e,t){var n=[];return e.forEach(function(e){n.push(e[t])}),l.deepFreeze(n)},keepOnlyKeys:function(e,t){return(e=e.slice()).forEach(function(e){Object.keys(e).forEach(function(n){t.indexOf(n)<0&&delete e[n]})}),l.deepFreeze(e)},getFileExtension:function(e){return e.split(".").splice(-1)[0]},htmlEncode:function(e){return e=(e=(0,r.default)("<div>").text(e).html()).replace(/(?:\r\n|\r|\n)/g,"<br/>")},printout:function(e,t){t&&(e=(void 0).htmlEncode(t)),(0,r.default)("#printout").html(e)},flatten:function(e){var t=[];for(var n in e)({}).hasOwnProperty.call(e,n)&&t.push(e[n]);return l.deepFreeze(t)},rotate:function(e){var t={};for(var n in e)e[n]in t?t[e[n]].push(n):t[e[n]]=[n];return l.deepFreeze(t)},max:function(e){return e.reduce(function(e,t){return Math.max(e,t)})},toTitleCase:function(e){return e.replace(/(?:^|\s)\w/g,function(e){return e.toUpperCase()})},showSimpleModal:function(e,t){l.showFormModal(null,e,null,[{type:"html",initialValue:t}],null,!1)},makeFormModal:function(e,t,n){var o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=(0,r.default)("<div>",{class:"modal-body form-group"});n.forEach(function(e,t){"initialValue"in e||(e.initialValue="");var n="form-modal-"+t;"id"in e&&""!==e.id&&null!==e.id&&"string"==typeof e.id&&(n=e.id);var o={class:"form-control",id:n,value:e.initialValue};"extraAttrs"in e&&Object.keys(e.extraAttrs).forEach(function(t){"function"!=typeof e.extraAttrs[t]&&(o[t]=e.extraAttrs[t])});var i=function(){return!0};"validationFunc"in e&&(i=e.validationFunc);var l=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=(0,r.default)(e.target),a=o.val();null!==n&&"function"==typeof n&&(a=n(a));var l=i(a,o);!0===l?o.removeClass("is-invalid").next("#feedback-"+t).remove():(o.addClass("is-invalid"),0===o.next("#feedback-"+t).length&&o.after((0,r.default)("<div>",{class:"invalid-feedback",id:"feedback-"+t}).text(l)))};if("html"===e.type)a.append((0,r.default)(e.initialValue));else if("checkbox"===e.type)o.type="checkbox",o.class="form-check-input",delete o.value,e.initialValue&&(o.checked=""),a.append((0,r.default)("<div>",{class:"form-check"}).append((0,r.default)("<label>",{for:n,class:"form-check-label"}).text(e.label).prepend((0,r.default)("<input>",o))));else if(a.append((0,r.default)("<label>",{for:n,class:"col-form-label"}).text(e.label)),"button"===e.type){"clickDismiss"in e&&!0===e.clickDismiss&&(o.class+=" btn-dismiss");var d=(0,r.default)("<button>",o).text(e.initialValue);"onclick"in e&&"function"==typeof e.onclick&&d.on("click",e.onclick),a.append(d)}else if("numeric"===e.type)o.type="number",a.append((0,r.default)("<input>",o).on("blur validate",function(e){l(e,parseFloat)}));else if("text"===e.type)o.type="text",a.append((0,r.default)("<input>",o).on("blur validate",l));else if("file"===e.type)o.type="file",o.class="form-control-file form-control",a.append((0,r.default)("<input>",o).on("blur validate",l));else if("textarea"===e.type){var u=(0,r.default)("<textarea>",o).on("blur validate",l);"onclick"in e&&u.on("click",e.onclick),a.append(u)}else if("select"===e.type){var s=(0,r.default)("<select>",o);e.optionText.forEach(function(t,n){n<e.optionValues.length?s.append((0,r.default)("<option>",{value:e.optionValues[n]}).text(t)):s.append((0,r.default)("<option>").text(t))}),a.append(s.on("blur validate",l))}});var i=(0,r.default)("<div>",{class:"modal-footer"}).append((0,r.default)("<button>",{class:"btn btn-success",type:"button"}).text(t)).append((0,r.default)("<button>",{class:"btn btn-danger btn-cancel",type:"button"}).text("Cancel"));!1===o&&(i=null);var l=(0,r.default)("<div>",{class:"modal fade",tabindex:"-1",role:"dialog","aria-hidden":"true"});return l.append((0,r.default)("<div>",{class:"modal-dialog"}).append((0,r.default)("<div>",{class:"modal-content"}).append((0,r.default)("<div>",{class:"modal-header"}).append((0,r.default)("<h5>",{class:"modal-title"}).text(e)).append((0,r.default)("<button>",{class:"close","data-dismiss":"modal","aria-label":"close"}).append((0,r.default)("<span>",{"aria-hidden":"true"}).html("&times;")))).append(a).append(i))),l.find("input, textarea").off("keyup").on("keyup",function(e){"Enter"===e.key&&(0,r.default)(".btn-success").last().click()}),l.on("shown.bs.modal",function(){l.find("input[type='text'], input[type='number'], textarea").first().focus()}),l},showFormModal:function(e,t,n,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:function(e){e.modal("hide")},i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],d=l.makeFormModal(t,n,o,i);d.on("click",".btn-cancel",function(){"function"==typeof a?a(d):d.modal("hide")}).on("click",".btn-dismiss",function(){d.modal("hide")}).on("click",".btn-success",function(){var t=[],n=!1;d.find("input, textarea, select").each(function(e,o){var a=(0,r.default)(o);"SELECT"===a.tagName?t.push(a.find(":selected").val()):"checkbox"===a.attr("type")?t.push(a.prop("checked")):"file"===a.attr("type")?t.push(a.get(0).files):"number"===a.attr("type")?t.push(parseFloat(a.val())):t.push(a.val()),a.trigger("validate").hasClass("is-invalid")&&(n=!0)}),n||"function"!=typeof e||e(d,t)}).on("hidden.bs.modal",function(){d.remove()}).modal("show")}};t.default=l},40:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(6)),a=r(n(3)),i=r(n(15));function r(e){return e&&e.__esModule?e:{default:e}}var l={importByString:function(e,t){if("json"===t.toLowerCase())try{var n=JSON.parse(e);"nodes"in n&&"edges"in n?(window.network.setData({}),window.main.setData(n,!1,!0,!1)):a.default.showSimpleModal("Data Import Error","<p>The provided input does not conform the the import specifications.</p>")}catch(e){a.default.showSimpleModal("JSON Parse Error","<p>There was an error parsing your input as JSON.</p><pre>"+e+"</pre>")}else if("dimacs"===t.toLowerCase()){var o=null,r=!1;if(e.split(/\r?\n/).forEach(function(e){var t=e.split(/\s+/);if("p"===t[0].toLowerCase()){if("edge"!==t[1].toLowerCase())return a.default.showSimpleModal("DIMACS Parse Error","<p>Sorry, but I only know how to parse &quot;edge&quot; formatted DIMACS files.</p>"),void(r=!0);o=new i.default(parseInt(t[2]))}else"e"===t[0].toLowerCase()&&null!==o&&(o=o.addEdge(parseInt(t[1])-1,parseInt(t[2])-1))}),null!==o||r||(a.default.showSimpleModal("DIMACS Parse Error","<p>No program line found!</p>"),r=!0),!r){var l=window.main.graphState.getGraphData(o);l.nodes.forEach(function(e){e.label=e.id.toString()}),window.main.setData(l,!1,!0,!0)}}else a.default.showSimpleModal("Unrecognized Input Format","<p>The format of your input is incorrect.</p>")},makeImportTextModal:function(){a.default.showFormModal(function(e,t){e.modal("hide"),l.importByString(t[0],t[1])},"Import Graph From Text","Import",[{type:"textarea",label:"Input Text",extraAttrs:{style:"height: 20vh; min-height:400px;"}},{type:"select",label:"Format",optionValues:["json","dimacs"],optionText:["JSON","DIMACS"]}])},makeImportFileModal:function(){a.default.showFormModal(function(e,t){e.modal("hide");var n=t[0];if(1===n.length){var o=n[0],i=new FileReader;i.onload=function(e){l.importByString(e.target.result,a.default.getFileExtension(o.name))},i.readAsText(o)}},"Import Graph From File","Import",[{type:"file",label:"Upload File",validationFunc:function(e,t){return t.get(0).files.length>=1||"You must choose a file first"}}])},makeExportFileModal:function(){a.default.showFormModal(null,"Export Graph To File",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){l.exportToFile("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!0},{type:"button",initialValue:"Export to DIMACS",onclick:function(){l.exportToFile("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!0}],null,!1)},makeExportTextModal:function(){a.default.showFormModal(null,"Export Graph To Text",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){l.exportToText("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!1},{type:"button",initialValue:"Export to DIMACS",onclick:function(){l.exportToText("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!1},{type:"textarea",label:"",initialValue:"",extraAttrs:{style:"height: 20vh; min-height:400px; white-space:nowrap; margin-top: 1rem;"},onclick:function(){(0,o.default)("#exportedText").select(),document.execCommand("copy")},id:"exportedText"}],function(e){e.modal("hide")},!1)},exportToFile:function(e){"json"===e.toLowerCase()?l.downloadFile("graph.json",l.getDataAsJSON()):"dimacs"===e.toLowerCase()&&l.downloadFile("graph.dimacs",l.getDataAsDIMACS())},exportToText:function(e){"json"===e.toLowerCase()?(0,o.default)("#exportedText").text(JSON.stringify(JSON.parse(l.getDataAsJSON()),null,2)):"dimacs"===e.toLowerCase()&&(0,o.default)("#exportedText").text(l.getDataAsDIMACS())},getDataAsJSON:function(){var e=window.main.graphState.getGraphData();return(e=window.main.graphState.getGraphData(window.main.graphState.dataSetToGraph(e.nodes,e.edges,e.directed,e.weighted))).nodes=a.default.keepOnlyKeys(e.nodes,["id","label","color","x","y"]),e.edges=a.default.keepOnlyKeys(e.edges,["from","to","weight"]),JSON.stringify(e)},getDataAsDIMACS:function(){var e=window.main.graphState.getGraphData(),t="c This Graph was generated and exported from Michael Dombrowski's Graph Playground -- https://md100play.github.io/graphPlayground -- https://mikedombrowski.com\n",n=window.main.graphState.graph.getFullAdjacency(),o=[];(n=n.filter(function(e){return 0!==e.length})).forEach(function(e,t){-1===o.indexOf(t+1)&&o.push(t+1),e.forEach(function(e){-1===o.indexOf(e+1)&&o.push(e+1)})});var a=0,i="";return e.edges.forEach(function(e){i+="e "+(e.from+1)+" "+(e.to+1)+"\n",a++}),i=i.trim(),(t+="p edge "+o.length+" "+a+"\n")+i},downloadFile:function(e,t){var n=new Blob([t],{type:"text/plain"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(n,e);else{var o=window.document.createElement("a");o.href=window.URL.createObjectURL(n),o.download=e,document.body.appendChild(o),o.click(),document.body.removeChild(o),window.URL.revokeObjectURL(n)}}};t.default=l},41:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,a=n(3),i=(o=a)&&o.__esModule?o:{default:o};var r=function(e){this.id=[];for(var t=0;t<e;t++)this.id.push(t)};r.prototype={constructor:r,union:function(e,t){var n=this.root(e),o=this.root(t);o!==n&&(this.id[o]=n)},root:function(e){for(;this.id[e]!==e;)e=this.id[e];return e},connected:function(e,t){return this.root(e)===this.root(t)}},t.default=i.default.deepFreeze(r)},42:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(3)),a=r(n(14)),i=r(n(41));function r(e){return e&&e.__esModule?e:{default:e}}var l={colorNetwork:function(){for(var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState).graph,t=o.default.datasetToArray(e.getAllNodes(),"id"),n=e.getAllOutDegrees(),a=o.default.sort(t,function(e,t){return n[e]<n[t]?1:n[e]===n[t]?0:-1}),i={},r=0;a.length>0;){var l=a.shift();i[l]=r;var d=[];d.push(l);for(var u=0;u<a.length;){for(var s=a[u],c=!1,f=0;f<d.length;f++)if(e.areAdjacent(s,d[f])){u++,c=!0;break}c||(i[s]=r,d.push(s),a.splice(u,1))}r++}return{colors:i,chromaticNumber:o.default.max(o.default.flatten(i))+1}},connectedComponents:function(){for(var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState).graph,t={},n=0,o=function(e){t[e]=n},a=0;a<e.getNumberOfNodes();a++){if(!(a in t))l.depthFirstSearch(e,a).forEach(o),n++}return{components:t,count:n}},depthFirstSearch:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState.graph,t=arguments[1],n=[],o=[];for(o.push(t);o.length>0;){var a=o.pop();n.includes(a)||(n.push(a),e.getNodeAdjacency(a).forEach(function(e){o.push(e)}))}return n},stronglyConnectedComponents:function(){for(var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState).graph,t=0,n={},o={},a=[],i={},r=0,l=function l(d){if(n[d]=t,o[d]=t++,a.push(d),e.getNodeAdjacency(d).forEach(function(e){e in n?a.includes(e)&&(o[d]=Math.min(o[d],n[e])):(l(e),o[d]=Math.min(o[d],o[e]))}),o[d]===n[d]){var u=-1;if(a.length>0){do{u=a.pop(),i[u]=r}while(u!==d);r++}}},d=0;d<e.getNumberOfNodes();d++)d in n||l(d);return{components:i,count:r}},breadthFirstSearch:function(e,t){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.main.graphState).graph,o=[],a=[],i={};a.push(e);for(var r=function(){var e=a.shift();o.includes(e)||(o.push(e),n.getNodeAdjacency(e).forEach(function(t){o.includes(t)||(i[t]=e,a.push(t))}))};a.length>0;)r();if(o.includes(t)){for(var l=[],d=t;d!==e;d=i[d])l.push(d);l.push(e),l.reverse();for(var u=0,s=0;s<l.length-1;s++)u+=n.getMinWeightEdgeBetween(l[s],l[s+1]);return{pathExists:!0,path:l,distance:l.length,weight:u}}return{pathExists:!1,path:[],distance:-1,weight:-1}},dijkstraSearch:function(e,t){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.main.graphState).graph;if(n.isDirected()||(n=n.convertToDirected(!0)),n.isWeighted()||(n=n.convertToWeighted()),void 0!==n.getAllEdges(!0).find(function(e){return e.getWeight()<0}))return o.default.showSimpleModal("Dijkstra Error","<p>The Dijkstra algorithm only works on graphs with totally non-negative edge weights. Please fix the graph so that there are no negative edge weights.</p><p>Alternatively, try the Bellman-Ford algorithm which solves exactly this problem.</p>"),!1;var a=new function(){this._nodes=[],this.enqueue=function(e,t){this._nodes.push({key:t,priority:e}),this.sort()},this.dequeue=function(){return this._nodes.shift().key},this.sort=function(){this._nodes.sort(function(e,t){return e.priority-t.priority})},this.isEmpty=function(){return!this._nodes.length}},i={},r={},l=[];n.getAllNodes(!0).forEach(function(t){var n=1/0;t.getID()===e&&(n=0),i[t.getID()]=n,a.enqueue(n,t.getID()),r[t.getID()]=null});var d=function(){var e=a.dequeue();if(e===t){for(l=[];null!==r[e];)l.push(e),e=r[e];return"break"}if(i[e]===1/0)return"continue";n.getNodeAdjacency(e).forEach(function(t){var o=i[e]+n.getMinWeightEdgeBetween(e,t);o<i[t]&&(i[t]=o,r[t]=e,a.enqueue(o,t))})};e:for(;!a.isEmpty();){switch(d()){case"break":break e;case"continue":continue}}return l.push(e),l.reverse(),i[t]!==1/0?{pathExists:!0,path:l,distance:l.length,cost:i[t]}:{pathExists:!1,path:[],distance:-1,cost:0}},bellmanFord:function(e,t){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.main.graphState).graph,a=[],i=[];n.getAllNodes(!0).forEach(function(e){a[e.getID()]=1/0,i[e.getID()]=null}),a[e]=0;for(var r=0;r<n.getNumberOfNodes()-1;r++)n.getAllEdges(!0).forEach(function(e){a[e.getFrom()]+e.getWeight()<a[e.getTo()]&&(a[e.getTo()]=a[e.getFrom()]+e.getWeight(),i[e.getTo()]=e.getFrom())});var l=!1;if(n.getAllEdges(!0).forEach(function(e){a[e.getFrom()]+e.getWeight()<a[e.getTo()]&&(l=!0)}),a[t]!==1/0){for(var d=[t];!d.includes(e);)d.push(i[d.slice().pop()]);return d.reverse(),{pathExists:!0,path:d,distance:d.length,cost:a[t]}}return l?(o.default.showSimpleModal("Bellman-Ford Error","<p>The Bellman-Ford algorithm only works on graphs with no negative edge-weight cycles. Please remove the negative cycle and try again.</p>"),!1):{pathExists:!1,path:[],distance:-1,cost:0}},fordFulkerson:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.main.graphState,o=n.graph;if(!o.isDirected())return!1;if(e===t)return!1;if(!l.breadthFirstSearch(e,t,n).pathExists)return!1;var a=(o=o.reduceMultiGraph(function(e,t){return e+t})).getNumberOfNodes(),i=0,r=null,d=null,u={};o.getAllEdges(!0).forEach(function(e){u[e.getFrom()+"_"+e.getTo()]={from:e.getFrom(),to:e.getTo(),capacity:e.getWeight(),flow:0}});for(var s,c,f,h,p=function(e,t){e=e.split("_");var n=parseInt(e[0]),o=parseInt(e[1]);return t===n?o:n},g=function(e,t){var n=e.split("_");return t===parseInt(n[0])?u[e].flow:u[e].capacity-u[e].flow},m=function(){r=[],d=[];for(var n=0;n<a;++n)r.push(!1),d.push(null);var i=[];for(i.push(e),r[e]=!0;i.length>0;)for(var l=i.shift(),u=o.getNodeAdjacency(l),s=0;s<u.length;s++){var c=l+"_"+u[s],f=p(c,l);if(!r[f]&&g(c,f)>0){if(d[f]=c,r[f]=!0,f===t)return!0;i.push(f)}}return!1};m();){for(var w=1/0,v=t;v!==e;v=p(d[v],v))w=Math.min(w,g(d[v],v));for(var y=t;y!==e;y=p(d[y],y))s=d[y],c=y,f=w,void 0,h=s.split("_"),c===parseInt(h[0])?u[s].flow-=f:u[s].flow+=f;i+=w}return{maxFlow:i,flowPath:function(){for(var e=[],t=0;t<a;t++)for(var n=o.getNodeAdjacency(t),i=0;i<n.length;i++){var r=t+"_"+n[i];u[r].flow>0&&e.push(u[r])}return e}()}},kruskal:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState).graph;e.reduceMultiGraph(Math.min,1/0);var t=e.getAllEdges(!0);t.sort(function(e,t){return e.getWeight()-t.getWeight()});for(var n=[],o=new i.default(e.getNumberOfNodes());t.length>0&&n.length<e.getNumberOfNodes()-1;){var a=t.shift();o.connected(a.getFrom(),a.getTo())||(o.union(a.getFrom(),a.getTo()),n.push(a))}return{mst:n,totalWeight:n.reduce(function(e,t){return e+t.getWeight()},0)}},topologicalSort:function(){for(var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState).graph,t=e.getFullAdjacency(),n=a.default.findVertexDegreesDirectional(t),o=[],i=e.getAllNodes(!0).filter(function(e){return 0===n[e.getID()].in}),r=e.getAllEdges(!0),l=function(){var a=i.pop();o.push(a);var l=t[a.getID()];r=r.filter(function(e){return e.getFrom()!==a.getID()||!l.includes(e.getTo())||(n[e.getTo()].in--,t[a.getID()]=t[a.getID()].filter(function(t){return t!==e.getTo()}),!1)}),l.forEach(function(t){0===n[t].in&&i.push(e.getNode(t,!0))})};0!==i.length;)l();return r.length>0||o},isGraphCyclic:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.main.graphState;return!0===l.topologicalSort(e)},directionalEulerian:function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.main.graphState).getProperty("stronglyConnectedComponents",!0),n=!0,o=-1;return e.forEach(function(e,a){e.in!==e.out&&(n=!1),e.in>0&&(-1===o&&(o=t[a]),o!==t[a]&&(n=!1))}),n},hasEulerianCircuit:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.main.graphState;if(0!==e.filter(function(e){return e%2!=0}).length)return!1;var n=t.getProperty("connectedComponents",!0),o=!0,a=-1;return e.forEach(function(e,t){0!==e&&(-1===a&&(a=n[t]),a!==n[t]&&(o=!1))}),o}};t.default=l},43:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),a=s(n(42)),i=s(n(14)),r=s(n(16)),l=s(n(3)),d=s(n(6)),u=s(n(40));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e,t,n){l.default.showFormModal(function(o,a){o.modal("hide");var i=window.main.graphState.nodeLabelToID(a[0]),r=window.main.graphState.nodeLabelToID(a[1]),d=t(i,r);if(!1!==d){var u="<h3>"+e+"</h3><hr>No path exists from "+l.default.htmlEncode(i)+" to "+l.default.htmlEncode(r);d.pathExists&&(u=e+" From "+window.main.graphState.nodeIDToLabel(i)+" to ",u+=window.main.graphState.nodeIDToLabel(r)+": "+d.distance,n&&(u+="\nWith weighted cost: "+d.cost),u+="\n\nUsing Path: ",u=l.default.htmlEncode(u),d.path.forEach(function(e){u+=l.default.htmlEncode(window.main.graphState.nodeIDToLabel(e))+" &rarr; "}),u=u.slice(0,-8),u="<h3>"+e+"</h3><hr>"+u),l.default.printout(u)}},e,"Go",[{label:"Start Node",type:"text",validationFunc:window.main.nodeLabelIDValidator},{label:"End Node",type:"text",validationFunc:window.main.nodeLabelIDValidator}])},f=function(e){var t=null,n="Connected Components",o="connectedComponents";if(e){if(!r.default.getOption("direction"))return;n="Strongly "+n,o="stronglyConnectedComponents",t=a.default.stronglyConnectedComponents()}else{if(r.default.getOption("direction"))return;t=a.default.connectedComponents()}window.main.graphState.graphProperties[n]=t.count,window.main.graphState.setUpToDate(!0,[n,o]),window.main.graphState.state[o]=t.components;var i=l.default.flatten(t.components),d="Number of "+n+": "+t.count;d+="\n\n",i.forEach(function(e,t){d+="Vertex "+window.main.graphState.nodeIDToLabel(t)+" is in connected component #"+e+"\n"}),d+="\n"+JSON.stringify(l.default.rotate(t.components),null,4)+"\n\n",d="<h3>"+n+"</h3><hr>"+l.default.htmlEncode(d),l.default.printout(d)},h=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return o(e,null,[{key:"getAlgorithms",value:function(){return[{name:"Graph Coloring",directional:!1,applyFunc:e.makeAndPrintGraphColoring,display:!0},{name:"Connected Components",directional:!1,applyFunc:e.makeAndPrintConnectedComponents,display:!0},{name:"Strongly Connected Components",directional:!0,display:!0,applyFunc:e.makeAndPrintStronglyConnectedComponents},{name:"Breadth-First Shortest Path",directional:!1,applyFunc:e.makeAndPrintBFS,display:!0},{name:"Dijkstra Shortest Path",applyFunc:e.makeAndPrintDijkstra,display:!0},{name:"Bellman-Ford Shortest Path",weighted:!0,directional:!0,applyFunc:e.makeAndPrintBFSP,display:!0},{name:"Ford-Fulkerson",weighted:!0,directional:!0,applyFunc:e.makeAndPrintFFMCMF,display:!0},{name:"Kruskal Minimum Spanning Tree",weighted:!0,directional:!1,applyFunc:e.makeAndPrintKruskal,display:!0},{name:"Cyclic",applyFunc:e.makeAndPrintIsCyclic,directional:!0,display:!0},{name:"Topological Sort",applyFunc:e.makeAndPrintTopologicalSort,directional:!0,display:!0},{name:"Eulerian",directional:!1,display:!1,applyFunc:null},{name:"Eulerian",directional:!0,display:!0,applyFunc:e.makeAndPrintDirectionalEulerian}]}},{key:"registerListeners",value:function(){var t=function(e,t){(0,d.default)(e).on("click",function(e){e.preventDefault(),t()})};t("#print-help-link",e.printHelp),t("#graph-options-link",e.printOptions),t("#load-petersen-link",function(){window.main.setData(window.predefined.Petersen(),!1,!0,!0)}),t("#load-konigsberg-link",function(){window.main.setData(window.predefined.Konigsberg(),!1,!0,!0)}),t("#load-complete-link",window.predefined.Complete),t("#load-hypercube-link",window.predefined.Hypercube),t("#load-custom-link",window.predefined.Custom),t("#undo-link",window.main.undo),t("#redo-link",window.main.redo),t("#calculate-all-properties-link",function(){window.main.graphState.makeAndPrintProperties(!0)}),t("#new-graph-layout-link",window.main.shuffleNetworkLayout),t("#import-file-link",u.default.makeImportFileModal),t("#import-text-link",u.default.makeImportTextModal),t("#export-file-link",u.default.makeExportFileModal),t("#export-text-link",u.default.makeExportTextModal)}},{key:"printHelp",value:function(){l.default.showSimpleModal("Help","<h4>For support see the <a href='https://github.com/MikeDombo/graphPlayground' target='_blank'>GitHub repository</a> for guides</h4><h4>See <a href='https://github.com/MikeDombo/graphPlayground/issues' target='_blank'>GitHub issues</a> to submit bugs or feature requests.</h4>")}},{key:"printOptions",value:function(){l.default.showFormModal(function(e,t){if(e.modal("hide"),r.default.getOption("nodePhysics")!==t[0]&&r.default.changeOption("nodePhysics",t[0]),r.default.getOption("direction")!==t[1]){r.default.changeOption("direction",t[1]);var n=window.main.graphState.graph;n=t[1]?n.convertToDirected(!0):n.getGraphAsUndirected(),window.main.setData(window.main.graphState.getGraphData(n,!0))}if(r.default.getOption("weights")!==t[2]){r.default.changeOption("weights",t[2]);var o=window.main.graphState.graph;o=t[2]?o.convertToWeighted():o.convertToUnWeighted(),window.main.setData(window.main.graphState.getGraphData(o))}},"Options","Save",[{label:"Graph Physics",initialValue:r.default.getOption("nodePhysics"),type:"checkbox"},{label:"Directed Graph",initialValue:r.default.getOption("direction"),type:"checkbox"},{label:"Weighted Graph",initialValue:r.default.getOption("weights"),type:"checkbox"}],null)}},{key:"makeAndPrintGraphColoring",value:function(){if(!r.default.getOption("direction")){var e={chromaticNumber:window.main.graphState.getProperty("Chromatic Number"),colors:window.main.graphState.state.graphColoring};null!==e.chromaticNumber&&null!==window.main.graphState.getProperty("graphColoring")||(e=a.default.colorNetwork()),window.main.graphState.graphProperties["Chromatic Number"]=e.chromaticNumber,window.main.graphState.setUpToDate(!0,["Chromatic Number","graphColoring"]),window.main.graphState.state.graphColoring=e.colors;var t=l.default.flatten(e.colors),n="Number of Vertices: "+t.length;n+="\nChromatic Number: "+e.chromaticNumber,n+="\n\n",t.forEach(function(e,t){n+="Vertex "+window.main.graphState.nodeIDToLabel(t)+" gets color "+e+"\n"}),n+="\n"+JSON.stringify(l.default.rotate(e.colors),null,4)+"\n\n",n="<h3>Graph Coloring Using Welsh-Powell Algorithm</h3><hr>"+l.default.htmlEncode(n),n+="<br/><button class='btn btn-primary' onclick='main.applyColors()'>Apply New Colors To Graph</button>",l.default.printout(n),window.main.applyColors()}}},{key:"makeAndPrintConnectedComponents",value:function(){f(!1)}},{key:"makeAndPrintDirectionalEulerian",value:function(){if(r.default.getOption("direction")){var e=a.default.directionalEulerian(i.default.findVertexDegreesDirectional(window.main.graphState.graph.getFullAdjacency()));window.main.graphState.setUpToDate(!0,["eulerian"]),window.main.graphState.graphProperties.eulerian=e}}},{key:"makeAndPrintEulerian",value:function(){r.default.getOption("direction")?e.makeAndPrintDirectionalEulerian():(window.main.graphState.setUpToDate(!0,["eulerian"]),window.main.graphState.graphProperties.eulerian=a.default.hasEulerianCircuit(window.main.graphState.graph.getAllOutDegrees()))}},{key:"makeAndPrintStronglyConnectedComponents",value:function(){f(!0)}},{key:"makeAndPrintBFS",value:function(){c("Breadth-First Shortest Path",a.default.breadthFirstSearch)}},{key:"makeAndPrintDijkstra",value:function(){c("Dijkstra Shortest Path",a.default.dijkstraSearch,!0)}},{key:"makeAndPrintBFSP",value:function(){c("Bellman-Ford Shortest Path",a.default.bellmanFord,!0)}},{key:"makeAndPrintFFMCMF",value:function(){r.default.getOption("direction")&&r.default.getOption("weights")&&l.default.showFormModal(function(e,t){e.modal("hide");var n=window.main.graphState.nodeLabelToID(t[0]),o=window.main.graphState.nodeLabelToID(t[1]),i=a.default.fordFulkerson(n,o),r="<h3>Ford-Fulkerson</h3><hr>No path exists from "+l.default.htmlEncode(window.main.graphState.nodeIDToLabel(n))+" to "+l.default.htmlEncode(window.main.graphState.nodeIDToLabel(o));!1!==i?(r="Ford-Fulkerson MaxFlow-MinCut Max Flow From "+window.main.graphState.nodeIDToLabel(n)+" to "+window.main.graphState.nodeIDToLabel(o)+": "+i.maxFlow,r+="\n\nUsing Capacities:\n\n",r=l.default.htmlEncode(r),i.flowPath.forEach(function(e){r+=window.main.graphState.nodeIDToLabel(e.from)+"&rarr;"+window.main.graphState.nodeIDToLabel(e.to)+" using "+e.flow+" of "+e.capacity+" \n"}),r="<h3>Ford-Fulkerson MaxFlow-MinCut</h3><hr>"+(r=r.trim()),l.default.printout(r)):l.default.printout(r)},"Ford-Fulkerson MaxFlow-MinCut","Go",[{label:"Source Node",type:"text",validationFunc:window.main.nodeLabelIDValidator},{label:"Sink Node",type:"text",validationFunc:window.main.nodeLabelIDValidator}])}},{key:"makeAndPrintKruskal",value:function(){if(!r.default.getOption("direction")&&r.default.getOption("weights")){var e=a.default.kruskal(),t="Kruskal's Minimum Spanning Tree Total Weight: "+e.totalWeight;t+="\n\nUsing Edges:\n\n",t=l.default.htmlEncode(t),e.mst.forEach(function(e){t+=window.main.graphState.nodeIDToLabel(e.from)+"&rarr;"+window.main.graphState.nodeIDToLabel(e.to)+" \n"}),t="<h3>Kruskal Minimum Spanning Tree</h3><hr>"+(t=t.trim()),l.default.printout(t)}}},{key:"makeAndPrintIsCyclic",value:function(){r.default.getOption("direction")&&(window.main.graphState.graphProperties.cyclic=a.default.isGraphCyclic(),window.main.graphState.setUpToDate(!0,["cyclic"]))}},{key:"makeAndPrintTopologicalSort",value:function(){if(r.default.getOption("direction")){var e=a.default.topologicalSort();if(!0===e){window.main.graphState.graphProperties.cyclic=!0,window.main.graphState.setUpToDate(!0,["cyclic"]);var t="Topological sorting failed because the graph contains a cycle";return t="<h3>Topological Sorting Failed</h3><hr>"+t,void l.default.printout(t)}var n="Topological Sorting:\n\n";n=l.default.htmlEncode(n),e.forEach(function(e){n+=window.main.graphState.nodeIDToLabel(e.id)+", "}),n="<h3>Topological Sorting</h3><hr>"+(n=n.slice(0,-2)),l.default.printout(n)}}},{key:"printGraphAlgorithms",value:function(){var t=(0,d.default)("#algorithms-pane");t.empty();var n=r.default.getOption("direction"),o=r.default.getOption("weights"),a=function(e){t.append((0,d.default)("<a>",{class:"nav-link",href:"#"}).text(e.name).on("click",function(t){t.preventDefault(),e.applyFunc()}))};e.getAlgorithms().forEach(function(e){e.display&&("directional"in e&&e.directional===n||!("directional"in e)?!("weighted"in e&&e.weighted===o)&&"weighted"in e||a(e):!("weighted"in e&&e.weighted===o)&&"weighted"in e||!("directional"in e&&e.directional===n)&&"directional"in e||a(e))})}}]),e}();t.default=h},44:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=i(n(14)),a=i(n(3));function i(e){return e&&e.__esModule?e:{default:e}}var r=a.default.deepFreeze([{from:1,to:2},{from:2,to:3},{from:3,to:4},{from:4,to:5},{from:5,to:1},{from:6,to:8},{from:7,to:9},{from:7,to:10},{from:8,to:10},{from:9,to:6},{from:1,to:6},{from:2,to:7},{from:3,to:8},{from:4,to:9},{from:5,to:10}]),l=a.default.deepFreeze([{from:1,to:2},{from:2,to:3},{from:2,to:4},{from:3,to:4},{from:3,to:4},{from:4,to:1},{from:4,to:1}]),d=function(e){for(var t=[],n=[],o=Math.pow(2,e),i=function e(t,n){return t.length<n?e("0"+t,n):t},r=function(o){n.push({id:o,label:i(o.toString(2),e)}),function(e,t){for(var n=i(e.toString(2),t).split("").reverse(),o=[],a=0;a<t;a++)if("0"===n[a]){var r=n.slice();r[a]="1",o.push(parseInt(r.reverse().join(""),2))}return o}(o,e).forEach(function(e){t.push({from:o,to:e})})},l=0;l<o;l++)r(l);return a.default.deepFreeze({nodes:n,edges:t,directed:!1,weighted:!1})};t.default={graphNames:a.default.deepFreeze(["Petersen","Konigsberg","Complete","Hypercube"]),Petersen:function(){return a.default.deepFreeze({edges:r,nodes:o.default.interpolateNodesFromEdges(r),directed:!1,weighted:!1})},Konigsberg:function(){return a.default.deepFreeze({edges:l,nodes:o.default.interpolateNodesFromEdges(l),directed:!1,weighted:!1})},Complete:function(){a.default.showFormModal(function(e,t){e.modal("hide"),window.main.setData(function(e){for(var t=[],n=[],o=0;o<e;o++){n.push({id:o,label:o.toString()});for(var a=o+1;a<e;a++)t.push({from:o,to:a})}return{nodes:n,edges:t,directed:!1,weighted:!1}}(t[0]),!1,!0,!0)},"Configurable Complete Graph","Go",[{type:"numeric",initialValue:5,label:"Number of Vertices",validationFunc:function(e){return e>=0||"Number of vertices must be non-negative"}}])},Hypercube:function(){a.default.showFormModal(function(e,t){e.modal("hide"),window.main.setData(d(t[0]),!1,!0,!0)},"Configurable Hypercube Graph","Go",[{type:"numeric",initialValue:3,label:"Number of Dimensions",validationFunc:function(e){return e>=0||"Number of dimensions must be non-negative"}}])},Custom:function(){a.default.showFormModal(function(e,t){e.modal("hide"),window.main.setData(function(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=[],i=0;i<e;i++)o.push({id:i,label:i.toString()});return a.default.deepFreeze({nodes:o,edges:[],directed:t,weighted:n})}(t[0],t[1],t[2]),!1,!0,!0)},"Configurable Graph","Go",[{type:"numeric",initialValue:0,label:"Number of Vertices",validationFunc:function(e){return e>=0||"Number of vertices must be non-negative"}},{type:"checkbox",initialValue:!1,label:"Directed"},{type:"checkbox",initialValue:!1,label:"Weighted"}])}}},45:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();var a=function(){function e(t,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.from=Object.freeze(t),this.to=Object.freeze(n),this.weight=Object.freeze(parseFloat(o)),new.target===e&&Object.freeze(this)}return o(e,[{key:"getFrom",value:function(){return this.from}},{key:"getTo",value:function(){return this.to}},{key:"getWeight",value:function(){return this.weight}},{key:"toPlain",value:function(){return{from:this.from,to:this.to,weight:this.weight}}},{key:"editEdge",value:function(t){return new e(this.getFrom(),this.getTo(),t)}}]),e}();t.default=a},46:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();var i=function(){function e(t){var n=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=t,this.label=null===a?t.toString():a,this.attributes={},null!==i&&"object"===(void 0===i?"undefined":o(i))&&Object.keys(i).forEach(function(e){n.attributes[e]=Object.freeze(i[e])}),this.attributes=Object.freeze(this.attributes),this.label=Object.freeze(this.label),this.id=Object.freeze(this.id),new.target===e&&Object.freeze(this)}return a(e,[{key:"toPlain",value:function(){var e=this,t={id:this.id,label:this.label};return Object.keys(this.attributes).forEach(function(n){n in t||(t[n]=e.attributes[n])}),t}},{key:"getID",value:function(){return this.id}},{key:"getLabel",value:function(){return this.label}},{key:"getAttribute",value:function(e){return e in this.attributes?this.attributes[e]:null}},{key:"getAllAttributes",value:function(){return this.attributes}},{key:"editNode",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null===t&&(t=this.getLabel());var o=Object.assign({},this.attributes);return Object.keys(n).forEach(function(e){o[e]=n[e]}),new e(this.getID(),t,o)}}]),e}();t.default=i},48:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=l(n(6)),a=n(35),i=l(n(3)),r=l(n(15));function l(e){return e&&e.__esModule?e:{default:e}}var d={backHistory:[],forwardHistory:[],maxHistory:10,upToDate:[{name:"Chromatic Number",upToDate:!1,type:"property",applyFunc:function(){window.ui.makeAndPrintGraphColoring()}},{name:"graphColoring",upToDate:!1,type:"state",applyFunc:function(){window.ui.makeAndPrintGraphColoring()}},{name:"vertices",upToDate:!0,always:!0,type:"property"},{name:"edges",upToDate:!0,always:!0,type:"property"},{name:"eulerian",upToDate:!1,type:"property",applyFunc:function(){window.ui.makeAndPrintEulerian()}},{name:"Connected Components",upToDate:!1,type:"property",applyFunc:function(){window.ui.makeAndPrintConnectedComponents()}},{name:"connectedComponents",upToDate:!1,type:"state",applyFunc:function(){window.ui.makeAndPrintConnectedComponents()}},{name:"Strongly Connected Components",upToDate:!1,type:"property",applyFunc:function(){window.ui.makeAndPrintStronglyConnectedComponents()}},{name:"stronglyConnectedComponents",upToDate:!1,type:"state",applyFunc:function(){window.ui.makeAndPrintStronglyConnectedComponents()}},{name:"cyclic",upToDate:!1,type:"property",applyFunc:function(){window.ui.makeAndPrintIsCyclic()}}],state:{stronglyConnectedComponents:null,connectedComponents:null,graphColoring:null},graph:null,graphProperties:{vertices:0,edges:0,eulerian:!1,"Chromatic Number":null,"Connected Components":null,"Strongly Connected Components":null,cyclic:!1},setUpToDate:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments[1],n=null===t||void 0===t,o=!1;d.upToDate.forEach(function(a){"always"in a&&a.always||!(n||t.indexOf(a.name)>-1)||(a.upToDate=e,"property"===a.type&&(o=!0))}),o&&d.makeAndPrintProperties()},getProperty:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=d.upToDate.find(function(t){return"name"in t&&t.name===e});if(!n.upToDate){if(!("applyFunc"in n&&t))return null;n.applyFunc()}return"state"===n.type?d.state[e]:d.graphProperties[e]},makeAndPrintProperties:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=window.settings.getOption("direction");d.graphProperties.vertices=d.graph.getNumberOfNodes(),d.graphProperties.edges=d.graph.getNumberOfEdges(),t||d.getProperty("eulerian",!0);var n=Object.keys(d.graphProperties);e&&n.forEach(function(e){d.getProperty(e,!0)});var o={};n.forEach(function(e){o[e]=d.getProperty(e)}),d.printGraphProperties(o)},printGraphProperties:function(e){var t="";Object.keys(e).forEach(function(n){null!==e[n]&&(t+=i.default.toTitleCase(n)+": "+e[n]+"\n")}),t=t.trim(),t=i.default.htmlEncode(t),(0,o.default)("#graphProps").html("<p class='nav-link'>"+t+"</p>")},addEdge:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:d.graph;o=o.addEdge(e,t,n),window.main.setData({nodes:d.clearColorFromNodes(o.getAllNodes()),edges:o.getAllEdges()})},addNode:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.graph;t=t.addNode({label:e.label,x:e.x,y:e.y}),window.main.setData({nodes:d.clearColorFromNodes(t.getAllNodes()),edges:t.getAllEdges()})},editNode:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d.graph;n=n.editNode(e,{label:t}),window.main.setData(d.getGraphData(n),!1,!1)},editEdge:function(e,t,n,o){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:d.graph;a=a.editEdge(e,t,n,o),window.main.setData(d.getGraphData(a),!1,!1)},deleteEdge:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:d.graph;o=o.deleteEdge(e,t,n,!1),window.main.setData({nodes:d.clearColorFromNodes(o.getAllNodes()),edges:o.getAllEdges()})},deleteNode:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.graph;t=t.deleteNode(e),window.main.setData({nodes:d.clearColorFromNodes(t.getAllNodes()),edges:t.getAllEdges()})},clearColorFromNodes:function(e){return e.forEach(function(e){e.color=null}),e},nodeIDToLabel:function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.graph).getNode(e,!0);return!1!==t&&null!==t&&void 0!==t&&t.getLabel().trim().length>0?t.getLabel().trim():e.toString()},nodeLabelToID:function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.graph).getAllNodes(!0);if(0===(t=t.filter(function(t){return t.getLabel().toLowerCase()===e.toLowerCase()||t.getID().toString()===e})).length)return-1;if(1===t.length)return t[0].getID();var n=-1,o=!1;return t.forEach(function(t){o||t.getID().toString()!==e||(n=t.getID(),o=!0)}),o?n:(t.forEach(function(t){o||t.getLabel()!==e||(n=t.getID(),o=!0)}),o?n:(t.forEach(function(t){o||t.getLabel().toLowerCase()!==e.toLowerCase()||(n=t.getID(),o=!0)}),n))},getGraphAsDataSet:function(e){var t=d.getGraphData(e);return e.isWeighted()&&t.edges.forEach(function(e){e.label=e.weight.toString()}),{nodes:new a.DataSet(t.nodes),edges:new a.DataSet(t.edges)}},setLocations:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.graph;return Object.keys(e).forEach(function(n){var o=e[n];t=t.editNode(n,{x:o.x,y:o.y})}),t},getGraphData:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:d.graph;return{nodes:arguments.length>1&&void 0!==arguments[1]&&arguments[1]?d.clearColorFromNodes(e.getAllNodes()):e.getAllNodes(),edges:e.getAllEdges(),directed:e.isDirected(),weighted:e.isWeighted()}},dataSetToGraph:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=d.alignData(0,e,t);return new r.default(a.nodes,a.edges,n,o)},alignData:function(e,t,n){var o={},a=e,r=[];t.forEach(function(e){var t=e.label;e.label===e.id.toString()&&(t=a.toString());var n={id:a,label:t,color:e.color,x:e.x,y:e.y};r.push(n),o[e.id]=a++});var l=[];return n.forEach(function(e){var t={from:o[e.from],to:o[e.to],label:e.label,weight:e.weight};l.push(t)}),i.default.deepFreeze({nodes:r,edges:l})}};t.default=d},50:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=s(n(6)),i=s(n(3)),r=s(n(16)),l=s(n(49)),d=s(n(48)),u=s(n(15));function s(e){return e&&e.__esModule?e:{default:e}}var c={graphState:d.default,container:document.getElementById("network"),visWeightEdgeEdit:function(e,t){i.default.showFormModal(function(n,o){t(null),n.modal("hide"),o=parseFloat(o[0]),d.default.editEdge(e.from.id,e.to.id,o,parseFloat(e.label))},"Edit Edge","Save",[{type:"numeric",label:"Weight/Capacity",initialValue:parseFloat(e.label)}])},visOptions:{interaction:{hover:!0},manipulation:{addNode:function(e,t){var n=i.default.makeFormModal("Add Node","Save",[{type:"html",initialValue:"<p>Node ID: "+c.graphState.getProperty("vertices")+"</p>"},{type:"text",label:"Label",initialValue:c.graphState.getProperty("vertices")}]);n.on("click",".btn-success",function(){n.modal("hide"),c.saveData(e,t,"add",n.find("input").first().val())}).on("click",".btn-cancel",function(){n.modal("hide"),c.cancelEdit(t)}).on("hidden.bs.modal",function(){n.remove(),c.cancelEdit(t)}).modal("show")},editNode:function(e,t){var n=i.default.makeFormModal("Edit Node","Save",[{type:"html",initialValue:"<p>Node ID: "+e.id+"</p>"},{type:"text",label:"Label",initialValue:e.label}]);n.on("click",".btn-success",function(){n.modal("hide"),c.saveData(e,t,"editNode",n.find("input").first().val())}).on("click",".btn-cancel",function(){n.modal("hide"),c.cancelEdit(t)}).on("hidden.bs.modal",function(){n.remove(),c.cancelEdit(t)}).modal("show")},addEdge:function(e,t){var n=function(){"function"==typeof t&&t(null),d.default.addEdge(e.from,e.to)};e.from!==e.to?n():confirm("Do you want to connect the node to itself?")&&n()},editEdge:function(e,t){t(null),c.visOptions.manipulation.deleteEdge({edges:[e.id]}),c.visOptions.manipulation.addEdge(e)},deleteEdge:function(e,t){"function"==typeof t&&t(null),e.edges.forEach(function(e){var t=null;void 0!==window.network.body.data.edges._data[e].label&&(t=parseFloat(window.network.body.data.edges._data[e].label)),d.default.deleteEdge(window.network.body.edges[e].fromId,window.network.body.edges[e].toId,t)})},deleteNode:function(e,t){t(null),e.nodes.forEach(function(e){d.default.deleteNode(e)})}}},cancelEdit:function(e){"function"==typeof e&&e(null)},saveData:function(e,t,n,o){e.label=o,t(null),"add"===n?d.default.addNode(e):"editNode"===n&&d.default.editNode(e.id,e.label)},nodeLabelIDValidator:function(e){return d.default.nodeLabelToID(e)>-1||"Invalid Label or ID"},applyColors:function(){if(!r.default.getOption("direction")){var e=d.default.getProperty("graphColoring",!0),t=d.default.getProperty("Chromatic Number",!0),n=(0,l.default)({count:t,luminosity:"light"}),o=d.default.graph;o.getAllNodes().forEach(function(t){o=o.editNode(t.id,{color:n[e[t.id]]})}),c.setData(d.default.getGraphData(o),!1,!1)}},setData:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];arguments.length>3&&void 0!==arguments[3]&&arguments[3]&&e.nodes.forEach(function(e){delete e.x,delete e.y}),n&&c.saveState(),"directed"in e&&r.default.changeOption("direction",e.directed),"weighted"in e&&r.default.changeOption("weights",e.weighted);var o=r.default.getOption("direction"),a=r.default.getOption("weights"),l=d.default.dataSetToGraph(e.nodes,e.edges,o,a);d.default.graph=l,c.randomizeNetworkLayoutSeed(window.network),window.network.setData(d.default.getGraphAsDataSet(l)),c.graphState.graph=c.graphState.setLocations(window.network.getPositions()),window.network.disableEditMode(),window.network.enableEditMode(),n&&(window.ui.printGraphAlgorithms(),i.default.printout(""),d.default.setUpToDate(),d.default.makeAndPrintProperties(t)),c.saveStateLocalStorage()},saveState:function(){null!==d.default.graph&&(d.default.backHistory.length>=d.default.maxHistory&&d.default.backHistory.shift(),d.default.backHistory.push(c.getStateForSaving()),d.default.forwardHistory=[],(0,a.default)(".icon-undo").parent().parent().addClass("active"))},getStateForSaving:function(){var e={};return Object.keys(d.default).forEach(function(t){var n=d.default[t];"function"!=typeof n&&("object"!==(void 0===n?"undefined":o(n))?e[t]=n:("graph"===t&&null!==n&&(e[t]=n),t.toLowerCase().includes("history")||(e[t]=a.default.extend(!0,Array.isArray(n)?[]:{},n))))}),e},undo:function(){d.default.backHistory.length>0&&c.applyState(!0)},redo:function(){d.default.forwardHistory.length>0&&c.applyState(!1)},applyState:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=null!==t,l=c.getStateForSaving();n||(t=e?d.default.backHistory.pop():d.default.forwardHistory.pop()),t.graph=new u.default(t.graph.nodes,t.graph.edges,t.graph.directed,t.graph.weighted),r.default.changeOption("direction",t.graph.isDirected()),r.default.changeOption("weights",t.graph.isWeighted());var s=d.default.getGraphAsDataSet(t.graph);d.default.graph=d.default.dataSetToGraph(s.nodes,s.edges,t.graph.isDirected(),t.graph.isWeighted()),window.network.setData(s),window.network.disableEditMode(),window.network.enableEditMode(),window.ui.printGraphAlgorithms(),i.default.printout(""),Object.keys(t).forEach(function(e){var n=t[e];"object"!==(void 0===n?"undefined":o(n))?d.default[e]=n:e.toLowerCase().includes("history")||"graph"===e.toLowerCase()||("uptodate"===e.toLowerCase()?Object.keys(d.default[e]).forEach(function(t){d.default[e][t].upToDate=n[t].upToDate}):d.default[e]=a.default.extend(!0,d.default[e],n))}),d.default.makeAndPrintProperties(),e&&!n?((0,a.default)(".icon-redo").parent().parent().addClass("active"),0===d.default.backHistory.length&&(0,a.default)(".icon-undo").parent().parent().removeClass("active"),d.default.forwardHistory.push(l)):e||n||((0,a.default)(".icon-undo").parent().parent().addClass("active"),0===d.default.forwardHistory.length&&(0,a.default)(".icon-redo").parent().parent().removeClass("active"),d.default.backHistory.push(l)),c.saveStateLocalStorage()},saveStateLocalStorage:function(){r.default.checkForLocalStorage()&&localStorage.setItem("graphPlayground.lastState",JSON.stringify(c.getStateForSaving()))},shuffleNetworkLayout:function(){c.setData({nodes:d.default.graph.getAllNodes(),edges:d.default.graph.getAllEdges()},!1,!1,!0)},randomizeNetworkLayoutSeed:function(e){var t=Math.round(1e6*Math.random());e.layoutEngine.randomSeed=t,e.layoutEngine.initialRandomSeed=t},addNetworkListeners:function(e){e.on("doubleClick",function(t){r.default.getOption("weights")&&"edges"in t&&1===t.edges.length&&e.editEdgeMode(),"nodes"in t&&1===t.nodes.length&&e.editNode()}),e.on("dragEnd",function(){c.graphState.graph=c.graphState.setLocations(e.getPositions()),c.saveStateLocalStorage()});var t=null;e.on("click",function(e){t=e}),(0,a.default)(document).on("keyup",function(n){"Delete"===n.key&&null!==t&&(0,a.default)(c.container).has((0,a.default)(t.event.target)).length>0&&("edges"in t&&1===t.edges.length||"nodes"in t&&1===t.nodes.length)&&0===(0,a.default)(":focus").parents(".modal").length&&e.deleteSelected()}),(0,a.default)(document).keydown(function(e){89===e.which&&e.ctrlKey||90===e.which&&e.ctrlKey&&e.shiftKey?c.redo():90===e.which&&e.ctrlKey&&c.undo()}),(0,a.default)(document).on("click",function(e){0===(0,a.default)(c.container).has(e.target).length&&(t=null)})}};t.default=c}});
//# sourceMappingURL=bundle.js.map