!function(e){function t(t){for(var a,r,l=t[0],s=t[1],d=t[2],h=0,p=[];h<l.length;h++)r=l[h],i[r]&&p.push(i[r][0]),i[r]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a]);for(g&&g(t);p.length;)p.shift()();return o.push.apply(o,d||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],a=!0,l=1;l<n.length;l++){var s=n[l];0!==i[s]&&(a=!1)}a&&(o.splice(t--,1),e=r(r.s=n[0]))}return e}var a={},i={5:0},o=[];function r(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.e=function(e){var t=[],n=i[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise(function(t,a){n=i[e]=[t,a]});t.push(n[2]=a);var o=document.getElementsByTagName("head")[0],l=document.createElement("script");l.charset="utf-8",l.timeout=120,r.nc&&l.setAttribute("nonce",r.nc),l.src=r.p+""+({}[e]||e)+"-"+{0:"ce35e5ec1db36cdd82de",1:"bc7695c92ba66f578312",2:"6f4f83028e3791be6066"}[e]+".min.js";var s=setTimeout(function(){d({type:"timeout",target:l})},12e4);function d(t){l.onerror=l.onload=null,clearTimeout(s);var n=i[e];if(0!==n){if(n){var a=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src,r=new Error("Loading chunk "+e+" failed.\n("+a+": "+o+")");r.type=a,r.request=o,n[1](r)}i[e]=void 0}}l.onerror=l.onload=d,o.appendChild(l)}return Promise.all(t)},r.m=e,r.c=a,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.oe=function(e){throw console.error(e),e};var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=t,l=l.slice();for(var d=0;d<l.length;d++)t(l[d]);var g=s;o.push([41,3]),n()}({1:function(e,t,n){"use strict";var a=n(0),i=n.n(a);let o={deepFreeze:e=>(Object.freeze(e),Object.getOwnPropertyNames(e).forEach(t=>{!e.hasOwnProperty(t)||null===e[t]||"object"!=typeof e[t]&&"function"!=typeof e[t]||Object.isFrozen(e[t])||o.deepFreeze(e[t])}),e),sort:(e,t)=>[...e].sort(t),datasetToArray:(e,t)=>{let n=[];return e.forEach(e=>{n.push(e[t])}),o.deepFreeze(n)},keepOnlyKeys:(e,t)=>((e=e.slice()).forEach(e=>{Object.keys(e).forEach(n=>{t.indexOf(n)<0&&delete e[n]})}),o.deepFreeze(e)),getFileExtension:e=>e.split(".").splice(-1)[0],htmlEncode:e=>e=(e=i()("<div>").text(e).html()).replace(/(?:\r\n|\r|\n)/g,"<br/>"),printout:(e,t)=>{t&&(e=(void 0).htmlEncode(t)),i()("#printout").html(e)},flatten:e=>{let t=[];for(let n in e)({}).hasOwnProperty.call(e,n)&&t.push(e[n]);return o.deepFreeze(t)},rotate:e=>{let t={};for(let n in e)e[n]in t?t[e[n]].push(n):t[e[n]]=[n];return o.deepFreeze(t)},max:e=>e.reduce((e,t)=>Math.max(e,t)),toTitleCase:e=>e.replace(/(?:^|\s)\w/g,e=>e.toUpperCase()),showSimpleModal:(e,t)=>{o.showFormModal(null,e,null,[{type:"html",initialValue:t}],null,!1)},makeFormModal:(e,t,n,a=!0)=>{let o=i()("<div>",{class:"modal-body form-group"});n.forEach((e,t)=>{"initialValue"in e||(e.initialValue="");let n="form-modal-"+t;"id"in e&&""!==e.id&&null!==e.id&&"string"==typeof e.id&&(n=e.id);let a={class:"form-control",id:n,value:e.initialValue};"extraAttrs"in e&&Object.keys(e.extraAttrs).forEach(t=>{"function"!=typeof e.extraAttrs[t]&&(a[t]=e.extraAttrs[t])});let r=()=>!0;"validationFunc"in e&&(r=e.validationFunc);let l=(e,n=null)=>{let a=i()(e.target),o=a.val();null!==n&&"function"==typeof n&&(o=n(o));let l=r(o,a);!0===l?a.removeClass("is-invalid").next("#feedback-"+t).remove():(a.addClass("is-invalid"),0===a.next("#feedback-"+t).length&&a.after(i()("<div>",{class:"invalid-feedback",id:"feedback-"+t}).text(l)))};if("html"===e.type)o.append(i()(e.initialValue));else if("checkbox"===e.type)a.type="checkbox",a.class="form-check-input",delete a.value,e.initialValue&&(a.checked=""),o.append(i()("<div>",{class:"form-check"}).append(i()("<label>",{for:n,class:"form-check-label"}).text(e.label).prepend(i()("<input>",a))));else if(o.append(i()("<label>",{for:n,class:"col-form-label"}).text(e.label)),"button"===e.type){"clickDismiss"in e&&!0===e.clickDismiss&&(a.class+=" btn-dismiss");let t=i()("<button>",a).text(e.initialValue);"onclick"in e&&"function"==typeof e.onclick&&t.on("click",e.onclick),o.append(t)}else if("numeric"===e.type)a.type="number",o.append(i()("<input>",a).on("blur validate",e=>{l(e,parseFloat)}));else if("text"===e.type)a.type="text",o.append(i()("<input>",a).on("blur validate",l));else if("file"===e.type)a.type="file",a.class="form-control-file form-control",o.append(i()("<input>",a).on("blur validate",l));else if("textarea"===e.type){let t=i()("<textarea>",a).on("blur validate",l);"onclick"in e&&t.on("click",e.onclick),o.append(t)}else if("select"===e.type){let t=i()("<select>",a);e.optionText.forEach((n,a)=>{a<e.optionValues.length?t.append(i()("<option>",{value:e.optionValues[a]}).text(n)):t.append(i()("<option>").text(n))}),o.append(t.on("blur validate",l))}});let r=i()("<div>",{class:"modal-footer"}).append(i()("<button>",{class:"btn btn-success",type:"button"}).text(t)).append(i()("<button>",{class:"btn btn-danger btn-cancel",type:"button"}).text("Cancel"));!1===a&&(r=null);let l=i()("<div>",{class:"modal fade",tabindex:"-1",role:"dialog","aria-hidden":"true"});return l.append(i()("<div>",{class:"modal-dialog"}).append(i()("<div>",{class:"modal-content"}).append(i()("<div>",{class:"modal-header"}).append(i()("<h5>",{class:"modal-title"}).text(e)).append(i()("<button>",{class:"close","data-dismiss":"modal","aria-label":"close"}).append(i()("<span>",{"aria-hidden":"true"}).html("&times;")))).append(o).append(r))),l.find("input, textarea").off("keyup").on("keyup",e=>{"Enter"===e.key&&i()(".btn-success").last().click()}),l.on("shown.bs.modal",()=>{l.find("input[type='text'], input[type='number'], textarea").first().focus()}),l},showFormModal:(e,t,n,a,r=(e=>{e.modal("hide")}),l=!0)=>{let s=o.makeFormModal(t,n,a,l);s.on("click",".btn-cancel",()=>{"function"==typeof r?r(s):s.modal("hide")}).on("click",".btn-dismiss",()=>{s.modal("hide")}).on("click",".btn-success",()=>{let t=[],n=!1;s.find("input, textarea, select").each((e,a)=>{let o=i()(a);"SELECT"===o.tagName?t.push(o.find(":selected").val()):"checkbox"===o.attr("type")?t.push(o.prop("checked")):"file"===o.attr("type")?t.push(o.get(0).files):"number"===o.attr("type")?t.push(parseFloat(o.val())):t.push(o.val()),o.trigger("validate").hasClass("is-invalid")&&(n=!0)}),n||"function"!=typeof e||e(s,t)}).on("hidden.bs.modal",()=>{s.remove()}).modal("show")}};t.a=o},10:function(e,t,n){"use strict";var a=n(5);class i{constructor(e,t=null,n=null){this.id=e,this.label=null===t?e.toString():t,this.attributes={},null!==n&&"object"==typeof n&&Object.keys(n).forEach(e=>{this.attributes[e]=Object.freeze(n[e])}),this.attributes=Object.freeze(this.attributes),this.label=Object.freeze(this.label),this.id=Object.freeze(this.id),new.target===i&&Object.freeze(this)}toPlain(){let e={id:this.id,label:this.label};return Object.keys(this.attributes).forEach(t=>{t in e||(e[t]=this.attributes[t])}),e}getID(){return this.id}getLabel(){return this.label}getAttribute(e){return e in this.attributes?this.attributes[e]:null}getAllAttributes(){return this.attributes}editNode(e=null,t=null){null===e&&(e=this.getLabel());let n=Object.assign({},this.attributes);return Object.keys(t).forEach(e=>{n[e]=t[e]}),new i(this.getID(),e,n)}}class o{constructor(e,t,n=1){this.from=Object.freeze(e),this.to=Object.freeze(t),this.weight=Object.freeze(parseFloat(n)),new.target===o&&Object.freeze(this)}getFrom(){return this.from}getTo(){return this.to}getWeight(){return this.weight}toPlain(){return{from:this.from,to:this.to,weight:this.weight}}editEdge(e){return new o(this.getFrom(),this.getTo(),e)}}n.d(t,"a",function(){return d});const r=e=>Object.keys(e).filter(e=>!["label","id"].includes(e)).reduce((t,n)=>(t[n]=e[n],t),{}),l=(e,t={})=>{if(null===e)return!1;let n=new a.List;return"object"==typeof e&&(e.forEach(e=>{let a=0,i=0,r=0;"weight"in e&&(a=parseFloat(e.weight)),"from"in e&&(i=t[e.from]),"to"in e&&(r=t[e.to]),n=n.push(new o(i,r,a))}),n)},s=e=>{if(null===e)return!1;let t=new a.List,n={};if("object"==typeof e){let a=0;e.forEach(e=>{let o=a++,l=null,s=null;"label"in e&&(l=e.label),"id"in e?(n[e.id]=o,"label"in e&&e.label===e.id.toString()&&(l=o.toString())):n[o]=o,s=r("attributes"in e?e.attributes:e),t=t.set(o,new i(o,l,s))})}else{if("number"!=typeof e)return!1;for(let a=0;a<Math.floor(e);a++)t=t.set(a,new i(a)),n[a]=a}return{nodes:Object.freeze(t),map:n}};class d{constructor(e,t=null,n=!1,i=!1){this.directed=Object.freeze(n),this.weighted=Object.freeze(i);let o={};if("number"!=typeof e&&("object"!=typeof e||e instanceof a.List)){if(!(e instanceof a.List))throw new Error("Illegal type of 'node' input to GraphImmut constructor");this.nodes=e}else{let t=s(e);this.nodes=t.nodes,o=t.map}this.nodes=Object.freeze(this.nodes),this.numNodes=Object.freeze(this.nodes.size),null===t||"object"!=typeof t||t instanceof a.List?t instanceof a.List?this.edges=t:this.edges=new a.List:this.edges=l(t,o),this.edges=Object.freeze(this.edges),this.numEdges=Object.freeze(this.edges.size),new.target===d&&Object.freeze(this)}alignNodeIDs(e=0){let t={},n=e,r=new a.List;this.nodes.forEach(e=>{let a=e.getLabel();e.getLabel()===e.getID().toString()&&(a=n.toString()),r=r.set(n,new i(n,a,e.getAllAttributes())),t[e.getID()]=n++});let l=new a.List;return this.edges.forEach(e=>{l=l.push(new o(t[e.getFrom()],t[e.getTo()],e.getWeight()))}),new d(r,l,this.directed,this.weighted)}getNode(e,t=!1){return t?this.nodes.get(e):this.nodes.get(e).toPlain()}addNode(e=null){null===e&&(e={});let t=this.numNodes;"label"in e||(e.label=t.toString());let n=r(e);return new d(this.nodes.set(t,new i(t,e.label,n)),this.edges,this.directed,this.weighted)}editNode(e,t){if(!this.nodes.has(e))return!1;let n=r(t);return"label"in t||(t.label=this.getNode(e,!0).getLabel()),new d(this.nodes.set(e,this.getNode(e,!0).editNode(t.label,n)),this.edges,this.directed,this.weighted)}deleteNode(e){if(!(e>=0&&e<this.numNodes))return!1;let t={},n=0,a=this.nodes.filter(a=>(a.getID()===e?t[a.getID()]=-1:t[a.getID()]=n++,a.getID()!==e)).map(e=>{let n=e.getLabel();return e.getID().toString()===n&&(n=t[e.getID()].toString()),new i(t[e.getID()],n,e.getAllAttributes())}),r=this.edges.filter(t=>!(t.getFrom()===e||t.getTo()===e)).map(e=>new o(t[e.getFrom()],t[e.getTo()],e.getWeight()));return new d(a,r,this.directed,this.weighted)}addEdge(e,t,n=1){this.weighted||(n=1);let a=this.edges.push(new o(e,t,parseFloat(n)));return new d(this.nodes,a,this.directed,this.weighted)}deleteEdge(e,t,n=null,a=!0){null!==n&&(n=parseFloat(n));let i=!1,o=this.edges.filter(o=>!(!i||a)||((o.getFrom()!==e||o.getTo()!==t||null!==n&&o.getWeight()!==n)&&!!(this.directed||o.getFrom()!==t||o.getTo()!==e||null!==n&&o.getWeight()!==n)||(i=!0,!1)));return new d(this.nodes,o,this.directed,this.weighted)}editEdge(e,t,n,a=null){if(!this.weighted)return!1;let i=!1;null!==a&&(a=parseFloat(a));let o=this.edges;return this.edges.forEach((r,l)=>{i||r.getFrom()!==e||r.getTo()!==t||null!==a&&r.getWeight()!==a||(o=o.set(l,r.editEdge(parseFloat(n))),i=!0)}),new d(this.nodes,o,this.directed,this.weighted)}getAllNodes(e=!1){return e?this.nodes.toArray():this.nodes.map(e=>e.toPlain()).toArray()}getAllNodesAsImmutableList(){return this.nodes}getAllEdgesAsImmutableList(){return this.edges}getAllEdges(e=!1){return e?this.edges.toArray():this.edges.map(e=>e.toPlain()).toArray()}getNumberOfNodes(){return this.numNodes}getNumberOfEdges(){return this.numEdges}getAllOutDegrees(){let e=[];return this.edges.forEach(t=>{t.getFrom()in e?e[t.getFrom()]++:e[t.getFrom()]=1}),e}asWeighted(){return new d(this.nodes,this.edges.map(e=>e.editEdge(1)),this.directed,!0)}asUnweighted(){return new d(this.nodes,this.edges.map(e=>e.editEdge(1)),this.directed,!1)}asDirected(e=!1){if(!e)return new d(this.nodes,this.edges,!0,this.weighted);let t=this.edges;return this.edges.forEach(e=>{t=t.push(new o(e.getTo(),e.getFrom(),e.getWeight()))}),new d(this.nodes,t,!0,this.weighted)}asUndirected(){let e=Object(a.List)(),t={};return this.edges.forEach(n=>{let a=n.getFrom(),i=n.getTo();i>a&&(a=i,i=n.getFrom()),a+"_"+i in t||(t[a+"_"+i]=null,e=e.push(new o(a,i,n.getWeight())))}),new d(this.nodes,e,!1,this.weighted)}asChangedDirectedWeighted(e,t){let n=this;return e&&!this.directed?n=this.asDirected():!e&&this.directed&&(n=this.asUndirected()),t&&!this.weighted?n=this.asWeighted():!t&&this.weighted&&(n=this.asUnweighted()),n}getNodeAdjacency(e){let t=[];return this.edges.forEach(n=>{n.getFrom()===e?t.push(n.getTo()):this.directed||n.getTo()!==e||t.push(n.getFrom())}),t}getFullAdjacency(){let e=[];return this.nodes.forEach(t=>{e[t.getID()]=this.getNodeAdjacency(t.getID())}),e}areAdjacent(e,t){return this.getNodeAdjacency(e).includes(t)}getEdgesBetween(e,t){let n=[];return this.edges.forEach(a=>{this.directed||a.getFrom()!==t||a.getTo()!==e||n.push(a),a.getFrom()===e&&a.getTo()===t&&n.push(a)}),n}getMinWeightEdgeBetween(e,t){let n=1/0;return this.getEdgesBetween(e,t).forEach(e=>{e.getWeight()<n&&(n=e.getWeight())}),n}reduceMultiGraph(e,t){void 0===t&&(t=0);let n=[];this.nodes.forEach(a=>{let i=this.getNodeAdjacency(a.getID()),o=new Set(i);o.size<i.length&&o.forEach(i=>{let o=this.getEdgesBetween(a.getID(),i).reduce((t,n)=>e(t,n.getWeight()),t);n.push({from:a.getID(),to:i,weight:parseFloat(o)})})});let a=this.edges.filter(e=>{let t=!0;return n.forEach(n=>{e.getFrom()===n.from&&e.getTo()===n.to&&(t=!1)}),t});return n.forEach(e=>{a=a.push(new o(e.from,e.to,e.weight))}),new d(this.nodes,a,this.directed,this.weighted)}isWeighted(){return this.weighted}isDirected(){return this.directed}}},26:function(e,t,n){"use strict";t.a={findVertexDegreesDirectional:e=>{let t=[];return e.forEach((e,n)=>{n in t?t[n].out+=e.length:t[n]={out:e.length,in:0},e.forEach(e=>{e in t?t[e].in+=1:t[e]={in:1,out:0}})}),t},interpolateNodesFromEdges:e=>{let t=[];return e.forEach(e=>{t[e.from]={id:e.from,label:""+e.from},t[e.to]={id:e.to,label:""+e.to}}),t}}},41:function(e,t,n){"use strict";n.r(t);n(102);var a=n(25),i=n.n(a),o=n(11),r=n(0),l=n.n(r),s=n(1),d=n(38),g=n.n(d),h=n(10);let p={backHistory:[],forwardHistory:[],maxHistory:10,upToDate:[{name:"Chromatic Number",upToDate:!1,type:"property",applyFunc:()=>{window.ui.makeAndPrintGraphColoring()}},{name:"graphColoring",upToDate:!1,type:"state",applyFunc:()=>{window.ui.makeAndPrintGraphColoring()}},{name:"vertices",upToDate:!0,always:!0,type:"property"},{name:"edges",upToDate:!0,always:!0,type:"property"},{name:"eulerian",upToDate:!1,type:"property",applyFunc:()=>{window.ui.makeAndPrintEulerian()}},{name:"Connected Components",upToDate:!1,type:"property",applyFunc:()=>{window.ui.makeAndPrintConnectedComponents()}},{name:"connectedComponents",upToDate:!1,type:"state",applyFunc:()=>{window.ui.makeAndPrintConnectedComponents()}},{name:"Strongly Connected Components",upToDate:!1,type:"property",applyFunc:()=>{window.ui.makeAndPrintStronglyConnectedComponents()}},{name:"stronglyConnectedComponents",upToDate:!1,type:"state",applyFunc:()=>{window.ui.makeAndPrintStronglyConnectedComponents()}},{name:"cyclic",upToDate:!1,type:"property",applyFunc:()=>{window.ui.makeAndPrintIsCyclic()}}],state:{stronglyConnectedComponents:null,connectedComponents:null,graphColoring:null},graph:null,graphProperties:{vertices:0,edges:0,eulerian:!1,"Chromatic Number":null,"Connected Components":null,"Strongly Connected Components":null,cyclic:!1},setUpToDate:(e=!1,t)=>{let n=null===t||void 0===t,a=!1;p.upToDate.forEach(i=>{"always"in i&&i.always||!(n||t.indexOf(i.name)>-1)||(i.upToDate=e,"property"===i.type&&(a=!0))}),a&&p.makeAndPrintProperties()},getProperty:(e,t=!1)=>{let n=p.upToDate.find(t=>"name"in t&&t.name===e);if(!n.upToDate){if(!("applyFunc"in n&&t))return null;n.applyFunc()}return"state"===n.type?p.state[e]:p.graphProperties[e]},makeAndPrintProperties:(e=!1)=>{let t=window.settings.getOption("direction");p.graphProperties.vertices=p.graph.getNumberOfNodes(),p.graphProperties.edges=p.graph.getNumberOfEdges(),t||p.getProperty("eulerian",!0);let n=Object.keys(p.graphProperties);e&&n.forEach(e=>{p.getProperty(e,!0)});let a={};n.forEach(e=>{a[e]=p.getProperty(e)}),p.printGraphProperties(a)},printGraphProperties:e=>{let t="";Object.keys(e).forEach(n=>{null!==e[n]&&(t+=s.a.toTitleCase(n)+": "+e[n]+"\n")}),t=t.trim(),t=s.a.htmlEncode(t),l()("#graphProps").html("<p class='nav-link'>"+t+"</p>")},addEdge:(e,t,n=0,a=p.graph)=>{a=a.addEdge(e,t,n),window.main.setData({nodes:p.clearColorFromNodes(a.getAllNodes()),edges:a.getAllEdges()})},addNode:(e,t=p.graph)=>{t=t.addNode({label:e.label,x:e.x,y:e.y}),window.main.setData({nodes:p.clearColorFromNodes(t.getAllNodes()),edges:t.getAllEdges()})},editNode:(e,t,n=p.graph)=>{n=n.editNode(e,{label:t}),window.main.setData(p.getGraphData(n),!1,!1)},editEdge:(e,t,n,a,i=p.graph)=>{i=i.editEdge(e,t,n,a),window.main.setData(p.getGraphData(i),!1,!1)},deleteEdge:(e,t,n=null,a=p.graph)=>{a=a.deleteEdge(e,t,n,!1),window.main.setData({nodes:p.clearColorFromNodes(a.getAllNodes()),edges:a.getAllEdges()})},deleteNode:(e,t=p.graph)=>{t=t.deleteNode(e),window.main.setData({nodes:p.clearColorFromNodes(t.getAllNodes()),edges:t.getAllEdges()})},clearColorFromNodes:e=>(e.forEach(e=>{e.color=null}),e),nodeIDToLabel:(e,t=p.graph)=>{let n=t.getNode(e,!0);return!1!==n&&null!==n&&void 0!==n&&n.getLabel().trim().length>0?n.getLabel().trim():e.toString()},nodeLabelToID:(e,t=p.graph)=>{let n=t.getAllNodes(!0);if(0===(n=n.filter(t=>t.getLabel().toLowerCase()===e.toLowerCase()||t.getID().toString()===e)).length)return-1;if(1===n.length)return n[0].getID();let a=-1,i=!1;return n.forEach(t=>{i||t.getID().toString()!==e||(a=t.getID(),i=!0)}),i?a:(n.forEach(t=>{i||t.getLabel()!==e||(a=t.getID(),i=!0)}),i?a:(n.forEach(t=>{i||t.getLabel().toLowerCase()!==e.toLowerCase()||(a=t.getID(),i=!0)}),a))},getGraphAsDataSet:e=>{let t=p.getGraphData(e);return e.isWeighted()&&t.edges.forEach(e=>{e.label=e.weight.toString()}),{nodes:new o.DataSet(t.nodes),edges:new o.DataSet(t.edges)}},setLocations:(e,t=p.graph)=>{let n=t.getAllNodesAsImmutableList();return Object.keys(e).forEach(t=>{let a=e[t],i=n.get(t);i.getAttribute("x")===a.x&&i.getAttribute("y")===a.y||(n=n.set(t,i.editNode(i.getLabel(),{x:a.x,y:a.y})))}),new h.a(n,t.getAllEdgesAsImmutableList(),t.isDirected(),t.isWeighted())},getGraphData:(e=p.graph,t=!1)=>({nodes:t?p.clearColorFromNodes(e.getAllNodes()):e.getAllNodes(),edges:e.getAllEdges(),directed:e.isDirected(),weighted:e.isWeighted()})};let c={graphState:p,container:document.getElementById("network"),visWeightEdgeEdit:(e,t)=>{s.a.showFormModal((n,a)=>{t(null),n.modal("hide"),a=parseFloat(a[0]),c.graphState.editEdge(e.from.id,e.to.id,a,parseFloat(e.label))},"Edit Edge","Save",[{type:"numeric",label:"Weight/Capacity",initialValue:parseFloat(e.label)}])},visOptions:{interaction:{hover:!0},manipulation:{addNode:function(e,t){let n=s.a.makeFormModal("Add Node","Save",[{type:"html",initialValue:"<p>Node ID: "+c.graphState.getProperty("vertices")+"</p>"},{type:"text",label:"Label",initialValue:c.graphState.getProperty("vertices")}]);n.on("click",".btn-success",()=>{n.modal("hide"),c.saveData(e,t,"add",n.find("input").first().val())}).on("click",".btn-cancel",()=>{n.modal("hide"),c.cancelEdit(t)}).on("hidden.bs.modal",()=>{n.remove(),c.cancelEdit(t)}).modal("show")},editNode:function(e,t){let n=s.a.makeFormModal("Edit Node","Save",[{type:"html",initialValue:"<p>Node ID: "+e.id+"</p>"},{type:"text",label:"Label",initialValue:e.label}]);n.on("click",".btn-success",()=>{n.modal("hide"),c.saveData(e,t,"editNode",n.find("input").first().val())}).on("click",".btn-cancel",()=>{n.modal("hide"),c.cancelEdit(t)}).on("hidden.bs.modal",()=>{n.remove(),c.cancelEdit(t)}).modal("show")},addEdge:function(e,t){let n=function(){"function"==typeof t&&t(null),c.graphState.addEdge(e.from,e.to)};e.from!==e.to?n():confirm("Do you want to connect the node to itself?")&&n()},editEdge:function(e,t){t(null),c.visOptions.manipulation.deleteEdge({edges:[e.id]}),c.visOptions.manipulation.addEdge(e)},deleteEdge:function(e,t){"function"==typeof t&&t(null),e.edges.forEach(e=>{let t=null;void 0!==window.network.body.data.edges._data[e].label&&(t=parseFloat(window.network.body.data.edges._data[e].label)),c.graphState.deleteEdge(window.network.body.edges[e].fromId,window.network.body.edges[e].toId,t)})},deleteNode:function(e,t){t(null),e.nodes.forEach(e=>{c.graphState.deleteNode(e)})}}},cancelEdit:e=>{"function"==typeof e&&e(null)},saveData:(e,t,n,a)=>{e.label=a,t(null),"add"===n?c.graphState.addNode(e):"editNode"===n&&c.graphState.editNode(e.id,e.label)},nodeLabelIDValidator:e=>c.graphState.nodeLabelToID(e)>-1||"Invalid Label or ID",applyColors:()=>{if(window.settings.getOption("direction"))return;let e=c.graphState.getProperty("graphColoring",!0),t=c.graphState.getProperty("Chromatic Number",!0),n=g()({count:t,luminosity:"light"}),a=c.graphState.graph;a.getAllNodes().forEach(t=>{a=a.editNode(t.id,{color:n[e[t.id]]})}),c.setData(c.graphState.getGraphData(a),!1,!1)},setData:(e,t=!1,n=!0,a=!1)=>{a&&e.nodes.forEach(e=>{delete e.x,delete e.y}),n&&c.saveState(),"directed"in e&&window.settings.changeOption("direction",e.directed),"weighted"in e&&window.settings.changeOption("weights",e.weighted);let i=window.settings.getOption("direction"),o=window.settings.getOption("weights"),r=new h.a(e.nodes,e.edges,i,o);c.graphState.graph=r,c.randomizeNetworkLayoutSeed(window.network),window.network.setData(c.graphState.getGraphAsDataSet(r)),c.graphState.graph=c.graphState.setLocations(window.network.getPositions()),window.network.disableEditMode(),window.network.enableEditMode(),n&&(window.ui.printGraphAlgorithms(),s.a.printout(""),c.graphState.setUpToDate(),c.graphState.makeAndPrintProperties(t)),c.saveStateLocalStorage()},saveState:()=>{null!==c.graphState.graph&&(c.graphState.backHistory.length>=c.graphState.maxHistory&&c.graphState.backHistory.shift(),c.graphState.backHistory.push(c.getStateForSaving()),c.graphState.forwardHistory=[],l()(".icon-undo").parent().parent().addClass("active"))},getStateForSaving:()=>{let e={};return Object.keys(c.graphState).forEach(t=>{let n=c.graphState[t];"function"!=typeof n&&("object"!=typeof n?e[t]=n:("graph"===t&&null!==n&&(e[t]=n),t.toLowerCase().includes("history")||(e[t]=l.a.extend(!0,Array.isArray(n)?[]:{},n))))}),e},undo:()=>{c.graphState.backHistory.length>0&&c.applyState(!0)},redo:()=>{c.graphState.forwardHistory.length>0&&c.applyState(!1)},applyState:(e=!0,t=null)=>{let n=null!==t,a=c.getStateForSaving();n||(t=e?c.graphState.backHistory.pop():c.graphState.forwardHistory.pop()),t.graph=new h.a(t.graph.nodes,t.graph.edges,t.graph.directed,t.graph.weighted),window.settings.changeOption("direction",t.graph.isDirected()),window.settings.changeOption("weights",t.graph.isWeighted()),c.graphState.graph=t.graph,window.network.setData(c.graphState.getGraphAsDataSet(c.graphState.graph)),window.network.disableEditMode(),window.network.enableEditMode(),window.ui.printGraphAlgorithms(),s.a.printout(""),Object.keys(t).forEach(e=>{let n=t[e];"object"!=typeof n?c.graphState[e]=n:e.toLowerCase().includes("history")||"graph"===e.toLowerCase()||("uptodate"===e.toLowerCase()?Object.keys(c.graphState[e]).forEach(t=>{c.graphState[e][t].upToDate=n[t].upToDate}):c.graphState[e]=l.a.extend(!0,c.graphState[e],n))}),c.graphState.makeAndPrintProperties(),e&&!n?(l()(".icon-redo").parent().parent().addClass("active"),0===c.graphState.backHistory.length&&l()(".icon-undo").parent().parent().removeClass("active"),c.graphState.forwardHistory.push(a)):e||n||(l()(".icon-undo").parent().parent().addClass("active"),0===c.graphState.forwardHistory.length&&l()(".icon-redo").parent().parent().removeClass("active"),c.graphState.backHistory.push(a)),c.saveStateLocalStorage()},saveStateLocalStorage:()=>{window.settings.checkForLocalStorage()&&localStorage.setItem("graphPlayground.lastState",JSON.stringify(c.getStateForSaving()))},shuffleNetworkLayout:()=>{c.setData({nodes:c.graphState.graph.getAllNodes(),edges:c.graphState.graph.getAllEdges()},!1,!1,!0)},randomizeNetworkLayoutSeed:e=>{let t=Math.round(1e6*Math.random());e.layoutEngine.randomSeed=t,e.layoutEngine.initialRandomSeed=t},addNetworkListeners:e=>{e.on("doubleClick",t=>{window.settings.getOption("weights")&&"edges"in t&&1===t.edges.length&&e.editEdgeMode(),"nodes"in t&&1===t.nodes.length&&e.editNode()}),e.on("dragEnd",()=>{c.graphState.graph=c.graphState.setLocations(e.getPositions()),c.saveStateLocalStorage()});let t=null;e.on("click",e=>{t=e}),l()(document).on("keyup",n=>{"Delete"===n.key&&null!==t&&l()(c.container).has(l()(t.event.target)).length>0&&("edges"in t&&1===t.edges.length||"nodes"in t&&1===t.nodes.length)&&0===l()(":focus").parents(".modal").length&&e.deleteSelected()}),l()(document).keydown(e=>{89===e.which&&e.ctrlKey||90===e.which&&e.ctrlKey&&e.shiftKey?c.redo():90===e.which&&e.ctrlKey&&c.undo()}),l()(document).on("click",e=>{0===l()(c.container).has(e.target).length&&(t=null)})}};var u=c;let w={defaults:{nodePhysics:!0,direction:!1,weights:!1},current:{},checkForLocalStorage:()=>{try{let e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}},saveSettings:()=>{w.checkForLocalStorage()&&localStorage.setItem("graphPlayground.settings",JSON.stringify(w.current))},loadSettings:()=>{w.checkForLocalStorage()&&(w.current=JSON.parse(localStorage.getItem("graphPlayground.settings"))),null===w.current&&(w.current={}),w.setAll()},setAll:()=>{window.network.setOptions({nodes:{physics:w.getOption("nodePhysics")}}),window.network.setOptions({edges:{arrows:{to:w.getOption("direction")}}}),w.getOption("weights")?window.network.setOptions({manipulation:{editEdge:{editWithoutDrag:window.main.visWeightEdgeEdit}}}):window.network.setOptions({manipulation:{editEdge:window.main.visOptions.manipulation.editEdge}})},changeOption:(e,t)=>{w.current[e]=t,w.saveSettings(),w.setAll()},getOption:e=>e in w.current?w.current[e]:w.defaults[e],resetToDefault:()=>{w.current={},w.saveSettings(),w.setAll();let e=window.main.graphState.graph.asChangedDirectedWeighted(w.defaults.direction,w.defaults.weights);window.main.setData(window.main.graphState.getGraphData(e))}};var m=w,f=n(26);const y=(e,t,n)=>{s.a.showFormModal((a,i)=>{a.modal("hide");let o=window.main.graphState.nodeLabelToID(i[0]),r=window.main.graphState.nodeLabelToID(i[1]),l=t(o,r);if(!1===l)return;let d="<h3>"+e+"</h3><hr>No path exists from "+s.a.htmlEncode(o)+" to "+s.a.htmlEncode(r);l.pathExists&&(d=e+" From "+window.main.graphState.nodeIDToLabel(o)+" to ",d+=window.main.graphState.nodeIDToLabel(r)+": "+l.distance,n&&(d+="\nWith weighted cost: "+l.cost),d+="\n\nUsing Path: ",d=s.a.htmlEncode(d),l.path.forEach(e=>{d+=s.a.htmlEncode(window.main.graphState.nodeIDToLabel(e))+" &rarr; "}),d=d.slice(0,-8),d="<h3>"+e+"</h3><hr>"+d),s.a.printout(d)},e,"Go",[{label:"Start Node",type:"text",validationFunc:window.main.nodeLabelIDValidator},{label:"End Node",type:"text",validationFunc:window.main.nodeLabelIDValidator}])},b=async e=>{let t=null,a="Connected Components",i="connectedComponents";const o=(await n.e(0).then(n.bind(null,103))).default;if(e){if(!window.settings.getOption("direction"))return;a="Strongly "+a,i="stronglyConnectedComponents",t=o.stronglyConnectedComponents()}else{if(window.settings.getOption("direction"))return;t=o.connectedComponents()}window.main.graphState.graphProperties[a]=t.count,window.main.graphState.setUpToDate(!0,[a,i]),window.main.graphState.state[i]=t.components;let r=s.a.flatten(t.components),l="Number of "+a+": "+t.count;l+="\n\n",r.forEach((e,t)=>{l+="Vertex "+window.main.graphState.nodeIDToLabel(t)+" is in connected component #"+e+"\n"}),l+="\n"+JSON.stringify(s.a.rotate(t.components),null,4)+"\n\n",l="<h3>"+a+"</h3><hr>"+s.a.htmlEncode(l),s.a.printout(l)};class S{static getAlgorithms(){return[{name:"Graph Coloring",directional:!1,applyFunc:S.makeAndPrintGraphColoring,display:!0},{name:"Connected Components",directional:!1,applyFunc:S.makeAndPrintConnectedComponents,display:!0},{name:"Strongly Connected Components",directional:!0,display:!0,applyFunc:S.makeAndPrintStronglyConnectedComponents},{name:"Breadth-First Shortest Path",directional:!1,applyFunc:S.makeAndPrintBFS,display:!0},{name:"Dijkstra Shortest Path",applyFunc:S.makeAndPrintDijkstra,display:!0},{name:"Bellman-Ford Shortest Path",weighted:!0,directional:!0,applyFunc:S.makeAndPrintBFSP,display:!0},{name:"Ford-Fulkerson",weighted:!0,directional:!0,applyFunc:S.makeAndPrintFFMCMF,display:!0},{name:"Kruskal Minimum Spanning Tree",weighted:!0,directional:!1,applyFunc:S.makeAndPrintKruskal,display:!0},{name:"Cyclic",applyFunc:S.makeAndPrintIsCyclic,directional:!0,display:!0},{name:"Topological Sort",applyFunc:S.makeAndPrintTopologicalSort,directional:!0,display:!0},{name:"Eulerian",directional:!1,display:!1,applyFunc:null},{name:"Eulerian",directional:!0,display:!0,applyFunc:S.makeAndPrintDirectionalEulerian}]}static registerListeners(){const e=(e,t)=>{l()(e).on("click",e=>{e.preventDefault(),t()})};e("#print-help-link",S.printHelp),e("#graph-options-link",S.printOptions),e("#load-petersen-link",async()=>{let e=await n.e(1).then(n.bind(null,105));window.main.setData(e.default.Petersen(),!1,!0,!0)}),e("#load-konigsberg-link",async()=>{let e=await n.e(1).then(n.bind(null,105));window.main.setData(e.default.Konigsberg(),!1,!0,!0)}),e("#load-complete-link",async()=>{(await n.e(1).then(n.bind(null,105))).default.Complete()}),e("#load-hypercube-link",async()=>{(await n.e(1).then(n.bind(null,105))).default.Hypercube()}),e("#load-custom-link",async()=>{(await n.e(1).then(n.bind(null,105))).default.Custom()}),e("#undo-link",window.main.undo),e("#redo-link",window.main.redo),e("#calculate-all-properties-link",()=>{window.main.graphState.makeAndPrintProperties(!0)}),e("#new-graph-layout-link",window.main.shuffleNetworkLayout),e("#import-file-link",async()=>{(await n.e(2).then(n.bind(null,104))).default.makeImportFileModal()}),e("#import-text-link",async()=>{(await n.e(2).then(n.bind(null,104))).default.makeImportTextModal()}),e("#export-file-link",async()=>{(await n.e(2).then(n.bind(null,104))).default.makeExportFileModal()}),e("#export-text-link",async()=>{(await n.e(2).then(n.bind(null,104))).default.makeExportTextModal()})}static printHelp(){s.a.showSimpleModal("Help","<h4>For support see the <a href='https://github.com/MikeDombo/graphPlayground' target='_blank'>GitHub repository</a> for guides</h4><h4>See <a href='https://github.com/MikeDombo/graphPlayground/issues' target='_blank'>GitHub issues</a> to submit bugs or feature requests.</h4>")}static printOptions(){s.a.showFormModal((e,t)=>{if(e.modal("hide"),window.settings.getOption("nodePhysics")!==t[0]&&window.settings.changeOption("nodePhysics",t[0]),window.settings.getOption("direction")!==t[1]){window.settings.changeOption("direction",t[1]);let e=window.main.graphState.graph;e=t[1]?e.asDirected(!0):e.asUndirected(),window.main.setData(window.main.graphState.getGraphData(e,!0))}if(window.settings.getOption("weights")!==t[2]){window.settings.changeOption("weights",t[2]);let e=window.main.graphState.graph;e=t[2]?e.asWeighted():e.asUnweighted(),window.main.setData(window.main.graphState.getGraphData(e))}},"Options","Save",[{label:"Graph Physics",initialValue:window.settings.getOption("nodePhysics"),type:"checkbox"},{label:"Directed Graph",initialValue:window.settings.getOption("direction"),type:"checkbox"},{label:"Weighted Graph",initialValue:window.settings.getOption("weights"),type:"checkbox"}],null)}static async makeAndPrintGraphColoring(){if(window.settings.getOption("direction"))return;let e={chromaticNumber:window.main.graphState.getProperty("Chromatic Number"),colors:window.main.graphState.state.graphColoring};if(null===e.chromaticNumber||null===window.main.graphState.getProperty("graphColoring")){e=(await n.e(0).then(n.bind(null,103))).default.colorNetwork()}window.main.graphState.graphProperties["Chromatic Number"]=e.chromaticNumber,window.main.graphState.setUpToDate(!0,["Chromatic Number","graphColoring"]),window.main.graphState.state.graphColoring=e.colors;let t=s.a.flatten(e.colors),a="Number of Vertices: "+t.length;a+="\nChromatic Number: "+e.chromaticNumber,a+="\n\n",t.forEach((e,t)=>{a+="Vertex "+window.main.graphState.nodeIDToLabel(t)+" gets color "+e+"\n"}),a+="\n"+JSON.stringify(s.a.rotate(e.colors),null,4)+"\n\n",a="<h3>Graph Coloring Using Welsh-Powell Algorithm</h3><hr>"+s.a.htmlEncode(a),a+="<br/><button class='btn btn-primary' onclick='main.applyColors()'>Apply New Colors To Graph</button>",s.a.printout(a),window.main.applyColors()}static makeAndPrintConnectedComponents(){b(!1)}static async makeAndPrintDirectionalEulerian(){if(!window.settings.getOption("direction"))return;let e=(await n.e(0).then(n.bind(null,103))).default.directionalEulerian(f.a.findVertexDegreesDirectional(window.main.graphState.graph.getFullAdjacency()));window.main.graphState.setUpToDate(!0,["eulerian"]),window.main.graphState.graphProperties.eulerian=e}static async makeAndPrintEulerian(){if(window.settings.getOption("direction"))return void S.makeAndPrintDirectionalEulerian();window.main.graphState.setUpToDate(!0,["eulerian"]);const e=(await n.e(0).then(n.bind(null,103))).default;window.main.graphState.graphProperties.eulerian=e.hasEulerianCircuit(window.main.graphState.graph.getAllOutDegrees())}static makeAndPrintStronglyConnectedComponents(){b(!0)}static async makeAndPrintBFS(){const e=(await n.e(0).then(n.bind(null,103))).default;y("Breadth-First Shortest Path",e.breadthFirstSearch)}static async makeAndPrintDijkstra(){const e=(await n.e(0).then(n.bind(null,103))).default;y("Dijkstra Shortest Path",e.dijkstraSearch,!0)}static async makeAndPrintBFSP(){const e=(await n.e(0).then(n.bind(null,103))).default;y("Bellman-Ford Shortest Path",e.bellmanFord,!0)}static makeAndPrintFFMCMF(){window.settings.getOption("direction")&&window.settings.getOption("weights")&&s.a.showFormModal(async(e,t)=>{e.modal("hide");let a=window.main.graphState.nodeLabelToID(t[0]),i=window.main.graphState.nodeLabelToID(t[1]);let o=(await n.e(0).then(n.bind(null,103))).default.fordFulkerson(a,i),r="<h3>Ford-Fulkerson</h3><hr>No path exists from "+s.a.htmlEncode(window.main.graphState.nodeIDToLabel(a))+" to "+s.a.htmlEncode(window.main.graphState.nodeIDToLabel(i));!1!==o?(r="Ford-Fulkerson MaxFlow-MinCut Max Flow From "+window.main.graphState.nodeIDToLabel(a)+" to "+window.main.graphState.nodeIDToLabel(i)+": "+o.maxFlow,r+="\n\nUsing Capacities:\n\n",r=s.a.htmlEncode(r),o.flowPath.forEach(e=>{r+=window.main.graphState.nodeIDToLabel(e.from)+"&rarr;"+window.main.graphState.nodeIDToLabel(e.to)+" using "+e.flow+" of "+e.capacity+" \n"}),r="<h3>Ford-Fulkerson MaxFlow-MinCut</h3><hr>"+(r=r.trim()),s.a.printout(r)):s.a.printout(r)},"Ford-Fulkerson MaxFlow-MinCut","Go",[{label:"Source Node",type:"text",validationFunc:window.main.nodeLabelIDValidator},{label:"Sink Node",type:"text",validationFunc:window.main.nodeLabelIDValidator}])}static async makeAndPrintKruskal(){if(window.settings.getOption("direction")||!window.settings.getOption("weights"))return;let e=(await n.e(0).then(n.bind(null,103))).default.kruskal(),t="Kruskal's Minimum Spanning Tree Total Weight: "+e.totalWeight;t+="\n\nUsing Edges:\n\n",t=s.a.htmlEncode(t),e.mst.forEach(e=>{t+=window.main.graphState.nodeIDToLabel(e.from)+"&rarr;"+window.main.graphState.nodeIDToLabel(e.to)+" \n"}),t="<h3>Kruskal Minimum Spanning Tree</h3><hr>"+(t=t.trim()),s.a.printout(t)}static async makeAndPrintIsCyclic(){if(!window.settings.getOption("direction"))return;const e=(await n.e(0).then(n.bind(null,103))).default;window.main.graphState.graphProperties.cyclic=e.isGraphCyclic(),window.main.graphState.setUpToDate(!0,["cyclic"])}static async makeAndPrintTopologicalSort(){if(!window.settings.getOption("direction"))return;let e=(await n.e(0).then(n.bind(null,103))).default.topologicalSort();if(!0===e){window.main.graphState.graphProperties.cyclic=!0,window.main.graphState.setUpToDate(!0,["cyclic"]);let e="Topological sorting failed because the graph contains a cycle";return e="<h3>Topological Sorting Failed</h3><hr>"+e,void s.a.printout(e)}let t="Topological Sorting:\n\n";t=s.a.htmlEncode(t),e.forEach(e=>{t+=window.main.graphState.nodeIDToLabel(e.id)+", "}),t="<h3>Topological Sorting</h3><hr>"+(t=t.slice(0,-2)),s.a.printout(t)}static printGraphAlgorithms(){let e=l()("#algorithms-pane");e.empty();let t=window.settings.getOption("direction"),n=window.settings.getOption("weights");const a=t=>{e.append(l()("<a>",{class:"nav-link",href:"#"}).text(t.name).on("click",e=>{e.preventDefault(),t.applyFunc()}))};S.getAlgorithms().forEach(e=>{e.display&&("directional"in e&&e.directional===t||!("directional"in e)?!("weighted"in e&&e.weighted===n)&&"weighted"in e||a(e):!("weighted"in e&&e.weighted===n)&&"weighted"in e||!("directional"in e&&e.directional===t)&&"directional"in e||a(e))})}}window.main=u,window.network=new o.Network(u.container,{},u.visOptions),window.settings=m,window.ui=S,i.a.config("https://92aaeee7e2fb4ef4837a2261a029e8ed@sentry.home.mikedombrowski.com/2").install(),window.Raven=i.a,u.addNetworkListeners(window.network),m.loadSettings();let k=!0;if(m.checkForLocalStorage()){let e=localStorage.getItem("graphPlayground.lastState");null!==e&&"nodes"in(e=JSON.parse(e)).graph&&(k=!1,u.applyState(!1,e))}k&&(async()=>{let e=await n.e(1).then(n.bind(null,105));u.setData(e.default.Petersen(),!1,!0,!0)})(),window.ui.registerListeners()}});
//# sourceMappingURL=bundle-aedf32e8b984d708262c.min.js.map