(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{106:function(t,e,o){"use strict";o.r(e);var a=o(1),n=o(2),r=o(9),i=o(0),s={importByString:function(t,e){if("json"===e.toLowerCase())try{var o=JSON.parse(t);"nodes"in o&&"edges"in o?(window.network.setData({}),window.main.setData(o,!1,!0,!1)):n.a.showSimpleModal("Data Import Error","<p>The provided input does not conform the the import specifications.</p>")}catch(t){n.a.showSimpleModal("JSON Parse Error","<p>There was an error parsing your input as JSON.</p><pre>"+t+"</pre>")}else if("dimacs"===e.toLowerCase()){var a=null,s=!1;if(t.split(/\r?\n/).forEach(function(t){var e=t.split(/\s+/);if("p"===e[0].toLowerCase()){if("edge"!==e[1].toLowerCase())return n.a.showSimpleModal("DIMACS Parse Error","<p>Sorry, but I only know how to parse &quot;edge&quot; formatted DIMACS files.</p>"),void(s=!0);a=new r.a(parseInt(e[2]))}else"e"===e[0].toLowerCase()&&null!==a&&(a=a.addEdge(parseInt(e[1])-1,parseInt(e[2])-1))}),null!==a||s||(n.a.showSimpleModal("DIMACS Parse Error","<p>No program line found!</p>"),s=!0),!s){var l=i.a.getGraphData(a);l.nodes.forEach(function(t){t.label=t.id.toString()}),window.main.setData(l,!1,!0,!0)}}else n.a.showSimpleModal("Unrecognized Input Format","<p>The format of your input is incorrect.</p>")},makeImportTextModal:function(){n.a.showFormModal(function(t,e){t.modal("hide"),s.importByString(e[0],e[1])},"Import Graph From Text","Import",[{type:"textarea",label:"Input Text",extraAttrs:{style:"height: 20vh; min-height:400px;"}},{type:"select",label:"Format",optionValues:["json","dimacs"],optionText:["JSON","DIMACS"]}])},makeImportFileModal:function(){n.a.showFormModal(function(t,e){t.modal("hide");var o=e[0];if(1===o.length){var a=o[0],r=new FileReader;r.onload=function(t){s.importByString(t.target.result,n.a.getFileExtension(a.name))},r.readAsText(a)}},"Import Graph From File","Import",[{type:"file",label:"Upload File",validationFunc:function(t,e){return e.get(0).files.length>=1||"You must choose a file first"}}])},makeExportFileModal:function(){n.a.showFormModal(null,"Export Graph To File",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){s.exportToFile("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!0},{type:"button",initialValue:"Export to DIMACS",onclick:function(){s.exportToFile("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!0}],null,!1)},makeExportTextModal:function(){n.a.showFormModal(null,"Export Graph To Text",null,[{type:"button",initialValue:"Export to JSON",onclick:function(){s.exportToText("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!1},{type:"button",initialValue:"Export to DIMACS",onclick:function(){s.exportToText("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!1},{type:"textarea",label:"",initialValue:"",extraAttrs:{style:"height: 20vh; min-height:400px; white-space:nowrap; margin-top: 1rem;"},onclick:function(){a("#exportedText").trigger("select"),document.execCommand("copy")},id:"exportedText"}],function(t){t.modal("hide")},!1)},exportToFile:function(t){"json"===t.toLowerCase()?s.downloadFile("graph.json",s.getDataAsJSON()):"dimacs"===t.toLowerCase()&&s.downloadFile("graph.dimacs",s.getDataAsDIMACS())},exportToText:function(t){"json"===t.toLowerCase()?a("#exportedText").text(JSON.stringify(JSON.parse(s.getDataAsJSON()),null,2)):"dimacs"===t.toLowerCase()&&a("#exportedText").text(s.getDataAsDIMACS())},getDataAsJSON:function(){var t=i.a.getGraphData(i.a.graph);return t.nodes=n.a.keepOnlyKeys(t.nodes,["id","label","color","x","y"]),t.edges=n.a.keepOnlyKeys(t.edges,["from","to","weight"]),JSON.stringify(t)},getDataAsDIMACS:function(){var t=i.a.getGraphData(),e="c This Graph was generated and exported from Michael Dombrowski's Graph Playground -- https://md100play.github.io/graphPlayground -- https://mikedombrowski.com",o=i.a.graph.getFullAdjacency(),a=[];(o=o.filter(function(t){return 0!==t.length})).forEach(function(t,e){-1===a.indexOf(e+1)&&a.push(e+1),t.forEach(function(t){-1===a.indexOf(t+1)&&a.push(t+1)})});var n=0,r="";return t.edges.forEach(function(t){r+="e "+(t.from+1)+" "+(t.to+1),n++}),r=r.trim(),(e+="p edge "+a.length+" "+n)+r},downloadFile:function(t,e){var o=new Blob([e],{type:"text/plain"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(o,t);else{var a=window.document.createElement("a");a.href=window.URL.createObjectURL(o),a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a),window.URL.revokeObjectURL(o)}}};e.default=s}}]);
//# sourceMappingURL=1-4e8843ba0717eff81f36.min.js.map