(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{105:function(e,t,o){"use strict";o.r(t);var a=o(0),r=o(1),i=o(7);let n={importByString:(e,t)=>{if("json"===t.toLowerCase())try{let t=JSON.parse(e);"nodes"in t&&"edges"in t?(window.network.setData({}),window.main.setData(t,!1,!0,!1)):r.a.showSimpleModal("Data Import Error","<p>The provided input does not conform the the import specifications.</p>")}catch(e){r.a.showSimpleModal("JSON Parse Error","<p>There was an error parsing your input as JSON.</p><pre>"+e+"</pre>")}else if("dimacs"===t.toLowerCase()){let t=null,o=!1;if(e.split(/\r?\n/).forEach(e=>{let a=e.split(/\s+/);if("p"===a[0].toLowerCase()){if("edge"!==a[1].toLowerCase())return r.a.showSimpleModal("DIMACS Parse Error","<p>Sorry, but I only know how to parse &quot;edge&quot; formatted DIMACS files.</p>"),void(o=!0);t=new i.a(parseInt(a[2]))}else"e"===a[0].toLowerCase()&&null!==t&&(t=t.addEdge(parseInt(a[1])-1,parseInt(a[2])-1))}),null!==t||o||(r.a.showSimpleModal("DIMACS Parse Error","<p>No program line found!</p>"),o=!0),!o){let e=window.main.graphState.getGraphData(t);e.nodes.forEach(e=>{e.label=e.id.toString()}),window.main.setData(e,!1,!0,!0)}}else r.a.showSimpleModal("Unrecognized Input Format","<p>The format of your input is incorrect.</p>")},makeImportTextModal:()=>{r.a.showFormModal((e,t)=>{e.modal("hide"),n.importByString(t[0],t[1])},"Import Graph From Text","Import",[{type:"textarea",label:"Input Text",extraAttrs:{style:"height: 20vh; min-height:400px;"}},{type:"select",label:"Format",optionValues:["json","dimacs"],optionText:["JSON","DIMACS"]}])},makeImportFileModal:()=>{r.a.showFormModal((e,t)=>{e.modal("hide");let o=t[0];if(1===o.length){let e=o[0],t=new FileReader;t.onload=function(t){n.importByString(t.target.result,r.a.getFileExtension(e.name))},t.readAsText(e)}},"Import Graph From File","Import",[{type:"file",label:"Upload File",validationFunc:(e,t)=>{return t.get(0).files.length>=1||"You must choose a file first"}}])},makeExportFileModal:()=>{r.a.showFormModal(null,"Export Graph To File",null,[{type:"button",initialValue:"Export to JSON",onclick:()=>{n.exportToFile("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!0},{type:"button",initialValue:"Export to DIMACS",onclick:()=>{n.exportToFile("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!0}],null,!1)},makeExportTextModal:()=>{r.a.showFormModal(null,"Export Graph To Text",null,[{type:"button",initialValue:"Export to JSON",onclick:()=>{n.exportToText("json")},extraAttrs:{class:"btn btn-sm btn-primary m-1"},clickDismiss:!1},{type:"button",initialValue:"Export to DIMACS",onclick:()=>{n.exportToText("dimacs")},extraAttrs:{class:"btn btn-sm btn-primary"},clickDismiss:!1},{type:"textarea",label:"",initialValue:"",extraAttrs:{style:"height: 20vh; min-height:400px; white-space:nowrap; margin-top: 1rem;"},onclick:()=>{a("#exportedText").select(),document.execCommand("copy")},id:"exportedText"}],e=>{e.modal("hide")},!1)},exportToFile:e=>{"json"===e.toLowerCase()?n.downloadFile("graph.json",n.getDataAsJSON()):"dimacs"===e.toLowerCase()&&n.downloadFile("graph.dimacs",n.getDataAsDIMACS())},exportToText:e=>{"json"===e.toLowerCase()?a("#exportedText").text(JSON.stringify(JSON.parse(n.getDataAsJSON()),null,2)):"dimacs"===e.toLowerCase()&&a("#exportedText").text(n.getDataAsDIMACS())},getDataAsJSON:()=>{let e=window.main.graphState.getGraphData(window.main.graphState.graph);return e.nodes=r.a.keepOnlyKeys(e.nodes,["id","label","color","x","y"]),e.edges=r.a.keepOnlyKeys(e.edges,["from","to","weight"]),JSON.stringify(e)},getDataAsDIMACS:()=>{let e=window.main.graphState.getGraphData(),t="c This Graph was generated and exported from Michael Dombrowski's Graph Playground -- https://md100play.github.io/graphPlayground -- https://mikedombrowski.com\n",o=window.main.graphState.graph.getFullAdjacency(),a=[];(o=o.filter(e=>0!==e.length)).forEach((e,t)=>{-1===a.indexOf(t+1)&&a.push(t+1),e.forEach(e=>{-1===a.indexOf(e+1)&&a.push(e+1)})});let r=0,i="";return e.edges.forEach(e=>{i+="e "+(e.from+1)+" "+(e.to+1)+"\n",r++}),i=i.trim(),(t+="p edge "+a.length+" "+r+"\n")+i},downloadFile:(e,t)=>{let o=new Blob([t],{type:"text/plain"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(o,e);else{let t=window.document.createElement("a");t.href=window.URL.createObjectURL(o),t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t),window.URL.revokeObjectURL(o)}}};t.default=n}}]);
//# sourceMappingURL=2-b43bf7eb1a1e0d664da0.min.js.map