"use strict";(self.webpackChunkgraphPlayground=self.webpackChunkgraphPlayground||[]).push([[446,866],{446:(t,e,r)=>{r.r(e),r.d(e,{default:()=>f});var n=r(485),o=r(641),i=r(866),u=r(536),a=r(669);const f=function(){function t(){}return t.graphPlainToGraphImmut=function(t){return new u.default(t.nodes,t.edges,t.directed,t.weighted)},t.colorNetwork=function(t){void 0===t&&(t=a.default.graph);for(var e=n.default.datasetToArray(t.getAllNodes(),"id"),r=t.getAllOutDegrees(),o=n.default.sort(e,(function(t,e){return r[t]<r[e]?1:r[t]===r[e]?0:-1})),i={},u=0;o.length>0;){var f=o.shift();i[f]=u;var c=[];c.push(f);for(var s=0;s<o.length;){for(var h=o[s],g=!1,d=0;d<c.length;d++)if(t.areAdjacent(h,c[d])){s++,g=!0;break}g||(i[h]=u,c.push(h),o.splice(s,1))}u++}return{colors:i,chromaticNumber:n.default.max(n.default.flatten(i))+1}},t.connectedComponents=function(e){void 0===e&&(e=a.default.graph);for(var r={},n=0,o=function(t){r[t]=n},i=0;i<e.getNumberOfNodes();i++)i in r||(t.depthFirstSearch(i,e).forEach(o),n++);return{components:r,count:n}},t.depthFirstSearch=function(t,e){void 0===e&&(e=a.default.graph);var r=[],n=[];for(n.push(t);n.length>0;){var o=n.pop();r.includes(o)||(r.push(o),e.getNodeAdjacency(o).forEach((function(t){n.push(t)})))}return r},t.stronglyConnectedComponents=function(t){void 0===t&&(t=a.default.graph);for(var e=0,r={},n={},o=[],i={},u=0,f=function(a){if(r[a]=e,n[a]=e++,o.push(a),t.getNodeAdjacency(a).forEach((function(t){t in r?o.includes(t)&&(n[a]=Math.min(n[a],r[t])):(f(t),n[a]=Math.min(n[a],n[t]))})),n[a]===r[a]){var c=-1;if(o.length>0){do{c=o.pop(),i[c]=u}while(c!==a);u++}}},c=0;c<t.getNumberOfNodes();c++)c in r||f(c);return{components:i,count:u}},t.breadthFirstSearch=function(t,e,r){void 0===r&&(r=a.default.graph);var n=[],o=[],i={};o.push(t);for(var u=function(){var t=o.shift();n.includes(t)||(n.push(t),r.getNodeAdjacency(t).forEach((function(e){n.includes(e)||(i[e]=t,o.push(e))})))};o.length>0;)u();if(n.includes(e)){for(var f=[],c=e;c!==t;c=i[c])f.push(c);f.push(t),f.reverse();for(var s=0,h=0;h<f.length-1;h++)s+=r.getMinWeightEdgeBetween(f[h],f[h+1]);return{pathExists:!0,path:f,distance:f.length,weight:s}}return{pathExists:!1,path:[],distance:-1,weight:-1}},t.dijkstraSearch=function(t,e,r){if(void 0===r&&(r=a.default.graph),r.isDirected()||(r=r.asDirected(!0)),r.isWeighted()||(r=r.asWeighted()),void 0!==r.getAllEdges(!0).find((function(t){return t.getWeight()<0})))return!1;var n=new(function(){function t(){this._nodes=[]}return t.prototype.enqueue=function(t,e){this._nodes.push({key:e,priority:t}),this.sort()},t.prototype.dequeue=function(){return this._nodes.shift().key},t.prototype.sort=function(){this._nodes.sort((function(t,e){return t.priority-e.priority}))},t.prototype.isEmpty=function(){return!this._nodes.length},t}()),o={},i={},u=[];r.getAllNodes(!0).forEach((function(e){var r=1/0;e.getID()===t&&(r=0),o[e.getID()]=r,n.enqueue(r,e.getID()),i[e.getID()]=null}));for(var f=function(){var t=n.dequeue();if(t===e){for(u=[];null!==i[t];)u.push(t),t=i[t];return"break"}if(o[t]===1/0)return"continue";r.getNodeAdjacency(t).forEach((function(e){var u=o[t]+r.getMinWeightEdgeBetween(t,e);u<o[e]&&(o[e]=u,i[e]=t,n.enqueue(u,e))}))};!n.isEmpty()&&"break"!==f(););return u.push(t),u.reverse(),o[e]!==1/0?{pathExists:!0,path:u,distance:u.length,cost:o[e]}:{pathExists:!1,path:[],distance:-1,cost:0}},t.bellmanFord=function(t,e,r){void 0===r&&(r=a.default.graph);var n=[],o=[];r.getAllNodes(!0).forEach((function(t){n[t.getID()]=1/0,o[t.getID()]=null})),n[t]=0;for(var i=0;i<r.getNumberOfNodes()-1;i++)r.getAllEdges(!0).forEach((function(t){n[t.getFrom()]+t.getWeight()<n[t.getTo()]&&(n[t.getTo()]=n[t.getFrom()]+t.getWeight(),o[t.getTo()]=t.getFrom())}));var u=!1;if(r.getAllEdges(!0).forEach((function(t){n[t.getFrom()]+t.getWeight()<n[t.getTo()]&&(u=!0)})),n[e]!==1/0){for(var f=[e];!f.includes(t);)f.push(o[f.slice().pop()]);return f.reverse(),{pathExists:!0,path:f,distance:f.length,cost:n[e]}}return!u&&{pathExists:!1,path:[],distance:-1,cost:0}},t.fordFulkerson=function(e,r,n){if(void 0===n&&(n=a.default.graph),!n.isDirected())return!1;if(e===r)return!1;if(!t.breadthFirstSearch(e,r,n).pathExists)return!1;var o=(n=n.reduceMultiGraph((function(t,e){return t+e}),0)).getNumberOfNodes(),i=0,u=[],f=[],c={};n.getAllEdges(!0).forEach((function(t){c[t.getFrom()+"_"+t.getTo()]={from:t.getFrom(),to:t.getTo(),capacity:t.getWeight(),flow:0}}));for(var s=function(t,e){var r=t.split("_"),n=parseInt(r[0]),o=parseInt(r[1]);return e===n?o:n},h=function(t,e){var r=t.split("_");return e===parseInt(r[0])?c[t].flow:c[t].capacity-c[t].flow},g=function(t,e,r){var n=t.split("_");e===parseInt(n[0])?c[t].flow-=r:c[t].flow+=r},d=function(){u=[],f=[];for(var t=0;t<o;++t)u.push(!1),f.push(null);var i=[];for(i.push(e),u[e]=!0;i.length>0;){t=i.shift();for(var a=0,c=n.getNodeAdjacency(t);a<c.length;a++){var g=t+"_"+c[a],d=s(g,t);if(!u[d]&&h(g,d)>0){if(f[d]=g,u[d]=!0,d===r)return!0;i.push(d)}}}return!1};d();){for(var l=1/0,p=r;p!==e;p=s(f[p],p))l=Math.min(l,h(f[p],p));for(p=r;p!==e;p=s(f[p],p))g(f[p],p,l);i+=l}return{maxFlow:i,flowPath:function(){for(var t=[],e=0;e<o;e++)for(var r=0,i=n.getNodeAdjacency(e);r<i.length;r++){var u=e+"_"+i[r];c[u].flow>0&&t.push(c[u])}return t}()}},t.kruskal=function(t){void 0===t&&(t=a.default.graph),t.reduceMultiGraph();var e=t.getAllEdges(!0);e.sort((function(t,e){return t.getWeight()-e.getWeight()}));for(var r=[],n=new i.default(t.getNumberOfNodes());e.length>0&&r.length<t.getNumberOfNodes()-1;){var o=e.shift();n.connected(o.getFrom(),o.getTo())||(n.union(o.getFrom(),o.getTo()),r.push(o))}var u=r.reduce((function(t,e){return t+e.getWeight()}),0);return{mst:r,totalWeight:u}},t.topologicalSort=function(t){void 0===t&&(t=a.default.graph);for(var e=t.getFullAdjacency(),r=o.default.findVertexDegreesDirectional(e),n=[],i=t.getAllNodes(!0).filter((function(t){return 0===r[t.getID()].in})),u=t.getAllEdges(!0),f=function(){var o=i.pop();n.push(o);var a=e[o.getID()];u=u.filter((function(t){return t.getFrom()!==o.getID()||!a.includes(t.getTo())||(r[t.getTo()].in--,e[o.getID()]=e[o.getID()].filter((function(e){return e!==t.getTo()})),!1)})),a.forEach((function(e){0===r[e].in&&i.push(t.getNode(e,!0))}))};0!==i.length;)f();return u.length>0||n},t.isGraphCyclic=function(e){return void 0===e&&(e=a.default.graph),!0===t.topologicalSort(e)},t.directionalEulerian=function(t,e){var r=!0,n=-1;return t.forEach((function(t,o){t.in!==t.out&&(r=!1),t.in>0&&(-1===n&&(n=e[o]),n!==e[o]&&(r=!1))})),r},t.hasEulerianCircuit=function(t,e){if(0!==t.filter((function(t){return t%2!=0})).length)return!1;var r=!0,n=-1;return t.forEach((function(t,o){0!==t&&(-1===n&&(n=e[o]),n!==e[o]&&(r=!1))})),r},t}()},866:(t,e,r)=>{r.r(e),r.d(e,{default:()=>n});const n=function(){function t(t){this.id=[];for(var e=0;e<t;e++)this.id.push(e)}return t.prototype.union=function(t,e){var r=this.root(t),n=this.root(e);n!==r&&(this.id[n]=r)},t.prototype.root=function(t){for(;this.id[t]!==t;)t=this.id[t];return t},t.prototype.connected=function(t,e){return this.root(t)===this.root(e)},t}()}}]);
//# sourceMappingURL=446-bd2e686249394f353a9b.min.js.map